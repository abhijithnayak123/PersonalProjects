<objects xmlns="http://www.springframework.net" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:db="http://www.springframework.net/database"
   xmlns:tx="http://www.springframework.net/tx"
   xsi:schemaLocation="http://www.springframework.net http://www.springframework.net/xsd/spring-objects.xsd">

	<object type="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurer, Spring.Core">
		<property name="ConfigSections" value="databaseSettings"/>
	</object>
	<object id="transactionManager"
		type="Spring.Data.Core.TxScopeTransactionManager, Spring.Data">
		<property name="TransactionSynchronization" value="Always"/>
	</object>
	<tx:attribute-driven/>

	<object name="MockCPEngineMethods" type="MGI.Unit.Test.MockCPEngineMethods, MGI.Unit.Test"></object>
	
	<object id="InterceptedBizCPEngine" type="MGI.Biz.CPEngine.Impl.CPEngineServiceImpl, MGI.Biz.CPEngine">
		<property name="SessionSvc" ref="CustomerSessionService"/>
		<property name="CxeCustSvc" ref="CXECustomerService"/>
		<property name="AcctSvc" ref="AccountService"/>
		<property name="PTNRCheckSvc" ref="PartnerCheckService"/>
		<property name="CxeCheckSvc" ref="CXECheckService"/>
		<property name="CustomerService" ref="Core.Partner.CustomerService"/>
		<property name="FeeSvc" ref="PartnerFeeService"/>
		<property name="NexxoIdTypeService" ref ="CoreNexxoDataStructuresService" />
		<property name="PtnrSvc" ref ="CorePartnerChannelPartnerService" />
		<property name="LimitService" ref="BIZLimitService" />
		<property name="CheckFrankRepo" ref="BIZCheckFrankRepo"/>
		<property name="ManageUserService" ref="CorePartnerUserService"></property>
		<property name="MessageCenterService" ref="CoreMessageCenterService"></property>
		<property name="AgentService" ref="AgentSessionService"></property>
		<property name="MessageStore" ref="MessageStore"></property>
		<property name="CustomerFeeAdjustmentService" ref="CoreCustomerFeeAdjustmentService"></property>
		<property name="FeeAdjustmentService" ref="FeeAdjustmentService"></property>
		<property name="CheckProcessorRouter" ref="CheckProcessorRouter"/>
		<property name="MongoDBLogger" ref="TLoggerRef"></property>
	</object>
	<!--End CPEngine-->
	<object id="CXECheckService" factory-object="MockCPEngineMethods" factory-method="CreateInstanceOfCheckService"></object>

	<object id="MessageStore" factory-object="MockCPEngineMethods" factory-method="CreateInstanceOfMessageStore"></object>

	<object id="CheckProcessor" factory-object="MockCPEngineMethods" factory-method="CreateInstanceOfProcessorRouter"></object>

	<object id="BIZCheckFrankRepo" type="MGI.Biz.CPEngine.Impl.CheckFrankTemplateRepo, MGI.Biz.CPEngine">
		<constructor-arg index="0" value="${ReceiptServerURL}"/>
		<constructor-arg index="1" value="${ReceiptServerDBName}" />
		<constructor-arg index="2" value="${ReceiptServerBucketName}" />
		<property name="PrintTemplateRepo" ref="PrintTemplateRepo"></property>
	</object>

	<!-- The Check Processors -->
	<object id="CheckProcessorRouter" type="MGI.Cxn.Common.Processor.Util.ProcessorRouter, MGI.Cxn.Common">
		<property name="Processors">
			<object id="CheckProcessorsDictionary" type="System.Collections.Generic.Dictionary&lt;string, MGI.Cxn.Common.Processor.Contract.IProcessor&gt;, mscorlib">
				<constructor-arg>
					<dictionary key-type="string" value-type="MGI.Cxn.Common.Processor.Contract.IProcessor">
						<entry key="Synovus">
							<ref object="CheckProcessor"/>
						</entry>
						<entry key="TCF">
							<ref object="CheckProcessor"/>
						</entry>
						<entry key="Carver">
							<ref object="CheckProcessor"/>
						</entry>
						<entry key="MGI">
							<ref object="CheckProcessor"/>
						</entry>
						<entry key="Redstone">
							<ref object="CheckProcessor"/>
						</entry>
					</dictionary>
				</constructor-arg>
			</object>
		</property>

		<!-- The Check Providers -->
		<property name="Providers">
			<object id="CheckProvidersDictionary" type="System.Collections.Generic.Dictionary&lt;string, string&gt;, mscorlib">
				<constructor-arg>
					<dictionary key-type="string" value-type="string">
						<entry key="Synovus">
							<value type="string">Ingo</value>
						</entry>
						<entry key="TCF">
							<value type="string">Ingo</value>
						</entry>
						<entry key="Carver">
							<value type="string">Ingo</value>
						</entry>
						<entry key="MGI">
							<value type="string">Ingo</value>
						</entry>
						<entry key="Redstone">
							<value type="string">Certegy</value>
						</entry>
					</dictionary>
				</constructor-arg>
			</object>
		</property>
		<!-- EO Check Providers -->

	</object>
	<!-- EO Check Processors -->

</objects>