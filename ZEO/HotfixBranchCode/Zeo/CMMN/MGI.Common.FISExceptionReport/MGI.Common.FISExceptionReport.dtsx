<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/12/2016 9:59:40 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="OPT-LAP-0109"
  DTS:CreatorName="OPTEAMIX\anayak"
  DTS:DTSID="{6CCE75F4-7D1C-48BD-B5AD-CB066215BA79}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5583.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="MGI Common FISExceptionReport"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{F0EF85D0-CA09-437F-85CB-C0A1BD2339A1}"
  DTS:VersionMajor="6"
  DTS:VersionMinor="1">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV FIle Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{51DD2004-BD9C-4EFA-B9EE-AD977CE4C570}"
      DTS:ObjectName="CSV FIle Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::sFileLocation] + "\\" + @[User::sFileName] + @[User::sDateVal] + ".csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowsToSkip="1"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Reports\\MISCAccountCreationFailures2016-02-18.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientCustID"
              DTS:DTSID="{F56AD8B0-B680-4385-B00E-038C59947090}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="MGIPAN"
              DTS:DTSID="{3469684E-C324-4577-AA42-5D88FD88D625}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="AliasID"
              DTS:DTSID="{19397BFA-B63C-4951-8FE1-212003527305}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="LastName"
              DTS:DTSID="{AE6A4017-30DA-48B8-A0A9-D2F6A6E87A4B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CXE_DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FDED0002-48B3-492E-9C2C-9C79ED949068}"
      DTS:ObjectName="CXE_DB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=OPT-LAP-0109;User ID=sa;Initial Catalog=Mitra_CXE;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA8kKoIy334kadlkqR4WYU+AAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAAUf0JV71pcNcOkXd+nI1IIAAAAAASAAACgAAAAEAAAAHQt+xiqcdv/lfgEI97DpIIYAAAAal5MXHBukqiXyVbFY51BQ20MviwDV6UNFAAAAMTGi2QAja6qPDHc0oj+icnHp3+x</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CXN_DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{786609B9-C10D-4FDB-AFF0-4472C7464671}"
      DTS:ObjectName="CXN_DB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=OPT-LAP-0109;User ID=sa;Initial Catalog=Mitra_CXN;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA8kKoIy334kadlkqR4WYU+AAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAB3q/q06DxYNj+yl3m9FzjdAAAAAASAAACgAAAAEAAAAKgCXuftC86VxZCDUAR0OwMYAAAASmb84mTgw15wDqoVr6GNttLvq/wqHFXzFAAAANTHaCIipwqH7r/3iSm01eaqQRlB</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Log.xml]"
      DTS:CreationName="FILE"
      DTS:DTSID="{E276D4AF-4E98-4A95-A932-AC7178AFD209}"
      DTS:ObjectName="Log.xml">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString=".\Log.xml" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="D:\Projects\MGI\GIT\mitra\mitra\CMMN\MGI.Common.FISExceptionReport\ExceptionReport.dtsConfig"
      DTS:ConfigurationType="1"
      DTS:CreationName=""
      DTS:DTSID="{42133D78-09C7-4C93-9035-F923C6E22049}"
      DTS:ObjectName="ExceptionReport" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Log.xml"
      DTS:CreationName="DTS.LogProviderXMLFile.3"
      DTS:Description="Writes log entries for events to an XML file"
      DTS:DTSID="{056FD2B3-A0D4-46B4-A0DC-AFBD4015A891}"
      DTS:ObjectName="SSIS log provider for XML files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7E8493A4-6BF6-4A4F-80E6-2565D1DAD6ED}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_STR,4,1252) DatePart(&quot;yyyy&quot;,getdate()) +  &quot;-&quot; + Right(&quot;0&quot; + (DT_STR,4,1252) DatePart(&quot;m&quot;,getdate()),2) + &quot;-&quot; + Right(&quot;0&quot; + (DT_STR,4,1252) DatePart(&quot;d&quot;,getdate()),2)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sDateVal">
      <DTS:VariableValue
        DTS:DataType="8">2016-02-18</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D2B78D1-3AFB-413D-94B2-7C8D9EE64E25}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sFileLocation">
      <DTS:VariableValue
        DTS:DataType="8">C:\Reports\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5863E655-D2B8-4BA3-968B-53DC85CBD271}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sFileName">
      <DTS:VariableValue
        DTS:DataType="8">MISCAccountCreationFailures</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,12,DiagnosticEx</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{056FD2B3-A0D4-46B4-A0DC-AFBD4015A891}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get CNECT data to CSV"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C4CE8C38-6645-4C0A-8BE9-0DD9A4BA978C}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get CNECT data to CSV"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get CNECT data to CSV\Flat File Destination"
              componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Flat File Destination">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">false</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Get CNECT data to CSV\Flat File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV FIle Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV FIle Manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[AliasID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="AliasID"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[AliasID]"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[AliasID]" />
                    <inputColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[ClientCustID]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="ClientCustID"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ClientCustID]"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientCustID]" />
                    <inputColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[MGIPAN]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MGIPAN"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[MGIPAN]"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[MGIPAN]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ClientCustID]"
                      dataType="wstr"
                      length="100"
                      name="ClientCustID" />
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[MGIPAN]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="MGIPAN" />
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[AliasID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="AliasID" />
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="255"
                      name="LastName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get CNECT data to CSV\OLE DB Source"
              componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT        fisAcnt.PartnerAccountNumber AS ClientCustID,  acnt.CXEId  AS MGIPAN, NULL AS AliasID, fisAcnt.LastName
FROM            tFIS_Account AS fisAcnt INNER JOIN
                         sODS_tAccounts AS acnt ON acnt.CXNId = fisAcnt.FISAccountID
WHERE acnt.ProviderId =600 AND fisAcnt.IsCNECTSuccess = 0
	AND fisAcnt.DTServerCreate &gt;= dateadd(day,datediff(day,1,GETDATE()),0) 
    AND fisAcnt.DTServerCreate &lt; dateadd(day,datediff(day,0,GETDATE()),0)</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get CNECT data to CSV\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[CXN_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[CXN_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientCustID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientCustID]"
                      length="100"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[ClientCustID]"
                      name="ClientCustID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[MGIPAN]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MGIPAN]"
                      length="50"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[MGIPAN]"
                      name="MGIPAN"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[AliasID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AliasID]"
                      length="50"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[AliasID]"
                      name="AliasID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      length="255"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ClientCustID]"
                      dataType="wstr"
                      length="100"
                      name="ClientCustID" />
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MGIPAN]"
                      dataType="i8"
                      name="MGIPAN" />
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AliasID]"
                      dataType="i4"
                      name="AliasID" />
                    <externalMetadataColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="255"
                      name="LastName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientCustID]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ClientCustID]"
                      name="ClientCustID" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MGIPAN]"
                      dataType="i8"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MGIPAN]"
                      name="MGIPAN" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AliasID]"
                      dataType="i4"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AliasID]"
                      name="AliasID" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get CNECT data to CSV.Paths[OLE DB Source Output]"
              endId="Package\Get CNECT data to CSV\Flat File Destination.Inputs[Flat File Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Get CNECT data to CSV\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get CNECT Text"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{D02B59A0-42A2-4A77-92E4-835D72BD71F9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get CNECT Text"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f29f51db66a443de9bdd47222a472adf"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::sDateVal,User::sFileLocation,User::sFileName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
using System.IO;
#endregion

namespace ST_f29f51db66a443de9bdd47222a472adf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string fileName = Dts.Variables["sFileName"].Value.ToString() + Dts.Variables["sDateVal"].Value.ToString() + ".csv";
            string folderPath = Dts.Variables["sFileLocation"].Value.ToString();
            string fullPath = string.Empty;
            string content = "The CNECT Misc Account creation failed for the following:\n\n";

            try
            {
                if (!Directory.Exists(folderPath))
                {
                    Directory.CreateDirectory(folderPath);
                }

                fullPath = System.IO.Path.Combine(folderPath, fileName);

                if (File.Exists(fullPath))
                    File.Delete(fullPath);

                File.WriteAllText(fullPath, content);

                Dts.TaskResult = (int)ScriptResults.Success;

            }
            catch (Exception)
            {
                // Log the Error Here
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_f29f51db66a443de9bdd47222a472adf</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_f29f51db66a443de9bdd47222a472adf</msb:DisplayName>
		<msb:ProjectId>{EF708AC6-96CA-46DC-AB67-C042D7A47DDA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f29f51db66a443de9bdd47222a472adf.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f29f51db66a443de9bdd47222a472adf.Properties.Settings.get_Default():ST_f29f51db66a443de9bdd47222a472adf.Properties.Sett" +
    "ings")]

namespace ST_f29f51db66a443de9bdd47222a472adf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_f29f51db66a443de9bdd47222a472adf.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A47519C9-29D9-40A1-94B3-10B3EF72A903}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f29f51db66a443de9bdd47222a472adf</RootNamespace>
    <AssemblyName>ST_f29f51db66a443de9bdd47222a472adf</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f29f51db66a443de9bdd47222a472adf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f29f51db66a443de9bdd47222a472adf")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f29f51db66a443de9bdd47222a472adf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f29f51db66a443de9bdd47222a472adf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f29f51db66a443de9bdd47222a472adf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f29f51db66a443de9bdd47222a472adf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f29f51db66a443de9bdd47222a472adf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f29f51db66a443de9bdd47222a472adf.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP2MxVYAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAALjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANgvAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
MAAAAAAAAEgAAAACAAUAWCIAAIANAAABAAAAAAAAAKAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwC/AAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoCKBYAAApvFwAACnKHAABwbxgAAApvGQAACm8aAAAKcpkAAHAoGwAACgoCKBYAAApvFwAACnKj
AABwbxgAAApvGQAACm8aAAAKC34cAAAKDHK/AABwDQcoHQAACi0HBygeAAAKJgcGKB8AAAoMCCgg
AAAKLAYIKCEAAAoICSgiAAAKAigWAAAKFm8jAAAK3g8mAigWAAAKF28jAAAK3gAqAAEQAAAAAHUA
Oq8ADyMAAAEeAigkAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAUBAAAI34AAIAEAAAsBgAAI1N0cmluZ3MAAAAArAoAADgBAAAjVVMA5AsAABAAAAAj
R1VJRAAAAPQLAACMAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIwAAAAUA
AAAGAAAACQAAAAEAAAAkAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAA
AAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIIC
cAIGAJkCcAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMG
AK8DbwMGAOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQE
FAESAB0F/QQSADUF/QQGAFoFugAGAHgFbgUGAIkFbgUGAKcFbgUGALQFbgUGANwFugAAAAAAAQAA
AAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAA
EQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBY
IAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMg
AAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAJghAAAAAIYYvAEbAAIAAAAB
ADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgA
gQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8
ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+BZcA6QBHBZ0ACQBRBaEA8QBhBaUA8QBoBawA
+QCCBa8A+QCXBbQACQGsBbsAEQGCBa8AEQG5BcEAEQHABcYA2QDNBV0AGQC8ARsACAAUAE4ACAAY
AFMAKQCTAIAALgAbAEQBLgAjAEQBLgBjAGoBLgALANMALgATABsBLgAzABsBLgArAEQBLgA7AEoB
LgBDAEQBLgBbAGEBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMAdQDMAAIAAQADAAMAAABvAS8AAADu
ATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAAEF2poAAAAAAAAfwAAAAQA
AAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAA
AAsAAAAAAAAAAAAAAAoA3gQAAAAAAAAAAAEAAADmBQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfZjI5
ZjUxZGI2NmE0NDNkZTliZGQ0NzIyMmE0NzJhZGYuZGxsAFJlc291cmNlcwBTVF9mMjlmNTFkYjY2
YTQ0M2RlOWJkZDQ3MjIyYTQ3MmFkZi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1Rf
ZjI5ZjUxZGI2NmE0NDNkZTliZGQ0NzIyMmE0NzJhZGYAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBT
eXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5S
ZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9u
AEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0
AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFk
ZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0
dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdu
b3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5h
Z2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJp
YWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN0cmluZwBDb25jYXQA
RW1wdHkAU3lzdGVtLklPAERpcmVjdG9yeQBFeGlzdHMARGlyZWN0b3J5SW5mbwBDcmVhdGVEaXJl
Y3RvcnkAUGF0aABDb21iaW5lAEZpbGUARGVsZXRlAFdyaXRlQWxsVGV4dABzZXRfVGFza1Jlc3Vs
dABFeGNlcHRpb24AU1RfZjI5ZjUxZGI2NmE0NDNkZTliZGQ0NzIyMmE0NzJhZGYuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AZgAyADkAZgA1ADEAZABiADYANgBhADQA
NAAzAGQAZQA5AGIAZABkADQANwAyADIAMgBhADQANwAyAGEAZABmAC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAATcwBGAGkAbABlAE4AYQBtAGUAABFzAEQAYQB0AGUA
VgBhAGwAAAkuAGMAcwB2AAAbcwBGAGkAbABlAEwAbwBjAGEAdABpAG8AbgAAd1QAaABlACAAQwBO
AEUAQwBUACAATQBpAHMAYwAgAEEAYwBjAG8AdQBuAHQAIABjAHIAZQBhAHQAaQBvAG4AIABmAGEA
aQBsAGUAZAAgAGYAbwByACAAdABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwA6AAoACgAAAGDy2AVd
P/9BmZzq1obcLEkACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQES
GQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJR
EVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAA
HAMgAA4GAAMODg4OAgYOBAABAg4GAAESgIEOBQACDg4OBAABAQ4FAAIBDg4GBwQODg4ORwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0KAEAI1NUX2YyOWY1MWRiNjZhNDQzZGU5YmRkNDcyMjJhNDcyYWRmAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEAAAAAMAAAAAAAAAAAAAAeMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDAAAAAAAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAGpoBBcAAAEAamgEFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBmADIAOQBmADUAMQBkAGIANgA2AGEANAA0ADMAZABlADkAYgBkAGQANAA3ADIAMgAyAGEANAA3
ADIAYQBkAGYAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA4ADkA
MgAuADIANgA3ADMAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBm
ADIAOQBmADUAMQBkAGIANgA2AGEANAA0ADMAZABlADkAYgBkAGQANAA3ADIAMgAyAGEANAA3ADIA
YQBkAGYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwBmADIAOQBmADUAMQBkAGIANgA2AGEANAA0ADMAZABlADkAYgBk
AGQANAA3ADIAMgAyAGEANAA3ADIAYQBkAGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AZgAyADkAZgA1ADEAZABiADYANgBhADQANAAzAGQAZQA5AGIAZABk
ADQANwAyADIAMgBhADQANwAyAGEAZABmAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADgAOQAyAC4AMgA2ADcAMwAwAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAOQAyAC4AMgA2ADcAMwAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get PREPD data to CSV"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9047f539-8478-4ba9-8485-08ccefbd90c7}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get PREPD data to CSV"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get PREPD data to CSV\CXE Customer Data"
              componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="CXE Customer Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT 
    cust.CustomerID
   , cust.CustomerPK 
  ,custAcnt.Type   
  ,custAcnt.AccountID
FROM 
    tCustomers cust
   INNER JOIN tCustomerAccounts custAcnt on custAcnt.CustomerPK = cust.CustomerPK AND custAcnt.Type = 2</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get PREPD data to CSV\CXE Customer Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[CXE_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[CXE_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]"
                      name="CustomerID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerPK]"
                      dataType="guid"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CustomerPK]"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerPK]"
                      name="CustomerPK"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[Type]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[Type]"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[Type]"
                      name="Type"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[AccountID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[AccountID]"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[AccountID]"
                      name="AccountID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                      dataType="i8"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[CustomerPK]"
                      dataType="guid"
                      name="CustomerPK" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[Type]"
                      dataType="i4"
                      name="Type" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].ExternalColumns[AccountID]"
                      dataType="i8"
                      name="AccountID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                      dataType="i8"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                      name="CustomerID" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[CustomerPK]"
                      dataType="guid"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[CustomerPK]"
                      name="CustomerPK" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[Type]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[Type]"
                      name="Type" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[AccountID]"
                      dataType="i8"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[AccountID]"
                      name="AccountID" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\CXN FIS Data"
              componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="CXN FIS Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT 
         fisAcnt.PartnerAccountNumber
        ,acnt.CXEID
        , fisAcnt.LastName
FROM tFIS_Account fisAcnt
     INNER JOIN  [dbo].[sODS_tAccounts] acnt  on acnt.CXNId = fisAcnt.FISAccountID 
WHERE IsPREPDSuccess= 0
AND fisAcnt. DTServerCreate &gt;= dateadd(day,datediff(day,1,GETDATE()),0) 
    AND fisAcnt.DTServerCreate &lt; dateadd(day,datediff(day,0,GETDATE()),0)</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get PREPD data to CSV\CXN FIS Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[CXN_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[CXN_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[LastName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      length="255"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[PartnerAccountNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].ExternalColumns[PartnerAccountNumber]"
                      length="100"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[PartnerAccountNumber]"
                      name="PartnerAccountNumber"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[CXEID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].ExternalColumns[CXEID]"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[CXEID]"
                      name="CXEID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="255"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].ExternalColumns[PartnerAccountNumber]"
                      dataType="wstr"
                      length="100"
                      name="PartnerAccountNumber" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].ExternalColumns[CXEID]"
                      dataType="i8"
                      name="CXEID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[PartnerAccountNumber]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[PartnerAccountNumber]"
                      name="PartnerAccountNumber" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[CXEID]"
                      dataType="i8"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[CXEID]"
                      name="CXEID" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Flat File Destination"
              componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Flat File Destination">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">false</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Get PREPD data to CSV\Flat File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV FIle Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV FIle Manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[ClientCustID]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="ClientCustID"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ClientCustID]"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[ClientCustID]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[MGIPAN]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="MGIPAN"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[MGIPAN]"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[MGIPAN]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[AliasID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="AliasID"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[AliasID]"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[AliasID]"
                      name="AliasID" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[LastName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ClientCustID]"
                      dataType="wstr"
                      length="100"
                      name="ClientCustID" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[MGIPAN]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="MGIPAN" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[AliasID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="AliasID" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="255"
                      name="LastName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Merge Join"
              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input].Columns[CXEID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CXEID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[CXEID]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastName"
                      lineageId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input].Columns[PartnerAccountNumber]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="PartnerAccountNumber"
                      lineageId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[PartnerAccountNumber]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[CustomerID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[CustomerPK]"
                      cachedDataType="guid"
                      cachedName="CustomerPK"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[CustomerPK]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[Type]"
                      cachedDataType="i4"
                      cachedName="Type"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[Type]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[AccountID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AccountID"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[AccountID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CXEID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CXEID]"
                      name="CXEID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input].Columns[CXEID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerID]"
                      name="CustomerID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[CustomerID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[LastName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[LastName]"
                      name="LastName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input].Columns[LastName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[PartnerAccountNumber]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[PartnerAccountNumber]"
                      name="PartnerAccountNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input].Columns[PartnerAccountNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerPK]"
                      dataType="guid"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerPK]"
                      name="CustomerPK">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[CustomerPK]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[Type]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[Type]"
                      name="Type">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[Type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[AccountID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[AccountID]"
                      name="AccountID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input].Columns[AccountID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Merge Join 1"
              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join 1"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input].Columns[AccountID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AccountID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[AccountID]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input].Columns[PartnerAccountNumber]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="PartnerAccountNumber"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[PartnerAccountNumber]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input].Columns[CXEID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CXEID"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[CXEID]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastName"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[LastName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Right Input].Columns[AccountID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AccountID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output].Columns[AccountID]" />
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Right Input].Columns[CardAliasId]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="CardAliasId"
                      lineageId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output].Columns[CardAliasId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[ClientCustID]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[ClientCustID]"
                      name="ClientCustID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input].Columns[PartnerAccountNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[MGIPAN]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[MGIPAN]"
                      name="MGIPAN">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input].Columns[CXEID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[AliasID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[AliasID]"
                      name="AliasID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Right Input].Columns[CardAliasId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[LastName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output].Columns[LastName]"
                      name="LastName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input].Columns[LastName]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Sort"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get PREPD data to CSV\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort.Inputs[Sort Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastName"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[LastName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort.Inputs[Sort Input].Columns[PartnerAccountNumber]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="PartnerAccountNumber"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[PartnerAccountNumber]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort.Inputs[Sort Input].Columns[CXEID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CXEID"
                      lineageId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[CXEID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[LastName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[LastName]"
                      name="LastName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[LastName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[PartnerAccountNumber]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[PartnerAccountNumber]"
                      name="PartnerAccountNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[PartnerAccountNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[CXEID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output].Columns[CXEID]"
                      name="CXEID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output].Columns[CXEID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Sort 1"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get PREPD data to CSV\Sort 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Inputs[Sort Input].Columns[CustomerID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerID"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Inputs[Sort Input].Columns[CustomerPK]"
                      cachedDataType="guid"
                      cachedName="CustomerPK"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerPK]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Inputs[Sort Input].Columns[Type]"
                      cachedDataType="i4"
                      cachedName="Type"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[Type]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Inputs[Sort Input].Columns[AccountID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AccountID"
                      lineageId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[AccountID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[CustomerID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[CustomerID]"
                      name="CustomerID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[CustomerPK]"
                      dataType="guid"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[CustomerPK]"
                      name="CustomerPK">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[CustomerPK]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[Type]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[Type]"
                      name="Type">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[Type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[AccountID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output].Columns[AccountID]"
                      name="AccountID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output].Columns[AccountID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Sort 2"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 2"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input].Columns[CXEID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CXEID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CXEID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input].Columns[CustomerID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerID"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input].Columns[CustomerPK]"
                      cachedDataType="guid"
                      cachedName="CustomerPK"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerPK]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="LastName"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[LastName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input].Columns[PartnerAccountNumber]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="PartnerAccountNumber"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[PartnerAccountNumber]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input].Columns[Type]"
                      cachedDataType="i4"
                      cachedName="Type"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[Type]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input].Columns[AccountID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AccountID"
                      lineageId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[AccountID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[CXEID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[CXEID]"
                      name="CXEID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CXEID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[CustomerID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[CustomerID]"
                      name="CustomerID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[CustomerPK]"
                      dataType="guid"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[CustomerPK]"
                      name="CustomerPK">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[CustomerPK]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[LastName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[LastName]"
                      name="LastName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[LastName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[PartnerAccountNumber]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[PartnerAccountNumber]"
                      name="PartnerAccountNumber">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[PartnerAccountNumber]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[Type]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[Type]"
                      name="Type">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[Type]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[AccountID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output].Columns[AccountID]"
                      name="AccountID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output].Columns[AccountID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Sort 3"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 3"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get PREPD data to CSV\Sort 3.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 3.Inputs[Sort Input].Columns[CardAliasId]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="CardAliasId"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[CardAliasId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get PREPD data to CSV\Sort 3.Inputs[Sort Input].Columns[AccountID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AccountID"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[AccountID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output].Columns[CardAliasId]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output].Columns[CardAliasId]"
                      name="CardAliasId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[CardAliasId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output].Columns[AccountID]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output].Columns[AccountID]"
                      name="AccountID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[AccountID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get PREPD data to CSV\Visa Data"
              componentClassID="{165A526D-D5DE-47FF-96A6-F8274C19826B}"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Visa Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT 
     visaAcnt.CardAliasId 
     ,cardAcnt.AccountID
FROM [sODS_tAccounts]  cardAcnt
  INNER JOIN tVisa_Account visaAcnt on visaAcnt.VisaAccountID = cardAcnt.CXNId 
WHERE ProviderID = 103</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get PREPD data to CSV\Visa Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[CXN_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[CXN_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[CardAliasId]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].ExternalColumns[CardAliasId]"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[CardAliasId]"
                      name="CardAliasId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[AccountID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].ExternalColumns[AccountID]"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].Columns[AccountID]"
                      name="AccountID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].ExternalColumns[CardAliasId]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="CardAliasId" />
                    <externalMetadataColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output].ExternalColumns[AccountID]"
                      dataType="i8"
                      name="AccountID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[CardAliasId]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[CardAliasId]"
                      name="CardAliasId" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[AccountID]"
                      dataType="i8"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[AccountID]"
                      name="AccountID" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get PREPD data to CSV.Paths[Merge Join Output]"
              endId="Package\Get PREPD data to CSV\Flat File Destination.Inputs[Flat File Destination Input]"
              name="Merge Join Output"
              startId="Package\Get PREPD data to CSV\Merge Join 1.Outputs[Merge Join Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[Merge Join Output1]"
              endId="Package\Get PREPD data to CSV\Sort 2.Inputs[Sort Input]"
              name="Merge Join Output"
              startId="Package\Get PREPD data to CSV\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[OLE DB Source Output]"
              endId="Package\Get PREPD data to CSV\Sort 1.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Get PREPD data to CSV\CXE Customer Data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[OLE DB Source Output1]"
              endId="Package\Get PREPD data to CSV\Sort.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Get PREPD data to CSV\CXN FIS Data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[OLE DB Source Output2]"
              endId="Package\Get PREPD data to CSV\Sort 3.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Get PREPD data to CSV\Visa Data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[Sort Output]"
              endId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Get PREPD data to CSV\Sort 2.Outputs[Sort Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[Sort Output1]"
              endId="Package\Get PREPD data to CSV\Merge Join 1.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Get PREPD data to CSV\Sort 3.Outputs[Sort Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[Sort Output2]"
              endId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Get PREPD data to CSV\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Get PREPD data to CSV.Paths[Sort Output3]"
              endId="Package\Get PREPD data to CSV\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Get PREPD data to CSV\Sort 1.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get PREPD Text"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{48AACFE2-DBFA-4C78-8EC6-0C9378376ED8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get PREPD Text"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_dbdd0ee5776c4114b123870918caa46b"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::sDateVal,User::sFileLocation,User::sFileName">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dbdd0ee5776c4114b123870918caa46b.Properties.Settings.get_Default():ST_dbdd0ee5776c4114b123870918caa46b.Properties.Sett" +
    "ings")]

namespace ST_dbdd0ee5776c4114b123870918caa46b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_dbdd0ee5776c4114b123870918caa46b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                string finalFileName = Dts.Variables["sFileName"].Value.ToString() + DateTime.Now.ToString("yyyy-MM-dd") + ".csv";

                string content = Environment.NewLine + "The PREPD Misc Account creation failed for the following:\n\n";

                File.AppendAllText(Dts.Variables["sFileLocation"].Value.ToString() + "\\" + finalFileName, content);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_dbdd0ee5776c4114b123870918caa46b</msb:CodeName>
		<msb:DisplayName>ST_dbdd0ee5776c4114b123870918caa46b</msb:DisplayName>
		<msb:ProjectId>{274CA08B-3D72-4DFF-B96E-F0849892D477}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_dbdd0ee5776c4114b123870918caa46b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_dbdd0ee5776c4114b123870918caa46b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_dbdd0ee5776c4114b123870918caa46b")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_dbdd0ee5776c4114b123870918caa46b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{bf31fdd0-b415-41fc-ba85-82b3a2276b89}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_dbdd0ee5776c4114b123870918caa46b</RootNamespace>
    <AssemblyName>ST_dbdd0ee5776c4114b123870918caa46b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dbdd0ee5776c4114b123870918caa46b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dbdd0ee5776c4114b123870918caa46b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dbdd0ee5776c4114b123870918caa46b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_dbdd0ee5776c4114b123870918caa46b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_dbdd0ee5776c4114b123870918caa46b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_dbdd0ee5776c4114b123870918caa46b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAItwv1YAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIQvAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LwAAAAAAAEgAAAACAAUAOCIAAEwNAAABAAAAAAAAAIAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAwCaAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAooGwAACgwSAnKHAABwKBwAAApynQAAcCgdAAAKCigeAAAKcqcAAHAoHwAACgsCKBYAAApvFwAA
CnIfAQBwbxgAAApvGQAACm8aAAAKcjsBAHAGKB0AAAoHKCAAAAoCKBYAAAoWbyEAAAreDyYCKBYA
AAoXbyEAAAreACoAAAEQAAAAAAAAiooADyIAAAEeAigiAAAKKgAAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAAAQAACN+AABsBAAADAYAACNTdHJpbmdz
AAAAAHgKAABAAQAAI1VTALgLAAAQAAAAI0dVSUQAAADICwAAhAEAACNCbG9iAAAAAAAAAAIAAAFX
HaIBCQMAAAD6JTMAFgAAAQAAACIAAAAFAAAABgAAAAkAAAABAAAAIgAAAAIAAAAPAAAAAgAAAAIA
AAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZ
AboABgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3AC
BgAiA3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBS
BDwECgBrBDwEBgCABG8DDgCiBBQBDgDEBBQBEgAdBf0EEgA1Bf0EBgBaBboABgBrBboABgB5BboA
BgCbBZEFBgC9BboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQ
AHQAfwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaA
LwJKAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEp
AAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYmwSJAAIAvCAAAAAAhgAaAhsA
AgB0IQAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFY
AGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAFARiAKEA
LwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSNANkAJwWSAOEAPgWXAOkARwWd
AAkAUQWhAPEAYwWlAPEAUQWqAPkAcgWvAAEBhQW2APkAcgW6AAkBoAXAANkArgVdABkAvAEbAAgA
FABOAAgAGABTACkAkwCAAC4AGwA+AS4AIwA+AS4AYwBkAS4ACwDNAC4AEwAVAS4AMwAVAS4AKwA+
AS4AOwBEAS4AQwA+AS4AWwBbAUMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAHUAxgACAAEAAwADAAAA
bwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAA/xbxpQAAAAAA
AH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAA
CgD1AAAAAAALAAAAAAAAAAAAAAAKAN4EAAAAAAAAAAABAAAAxwUAAAUABAAAAAA8TW9kdWxlPgBT
VF9kYmRkMGVlNTc3NmM0MTE0YjEyMzg3MDkxOGNhYTQ2Yi5kbGwAUmVzb3VyY2VzAFNUX2RiZGQw
ZWU1Nzc2YzQxMTRiMTIzODcwOTE4Y2FhNDZiLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFp
bgBTVF9kYmRkMGVlNTc3NmM0MTE0YjEyMzg3MDkxOGNhYTQ2YgBTY3JpcHRSZXN1bHRzAG1zY29y
bGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lz
dGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6
YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0Rl
ZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0
aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJz
aW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0u
RGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0
X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcARGF0ZVRpbWUA
Z2V0X05vdwBTdHJpbmcAQ29uY2F0AEVudmlyb25tZW50AGdldF9OZXdMaW5lAFN5c3RlbS5JTwBG
aWxlAEFwcGVuZEFsbFRleHQAc2V0X1Rhc2tSZXN1bHQARXhjZXB0aW9uAFNUX2RiZGQwZWU1Nzc2
YzQxMTRiMTIzODcwOTE4Y2FhNDZiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABx
UwBUAF8AZABiAGQAZAAwAGUAZQA1ADcANwA2AGMANAAxADEANABiADEAMgAzADgANwAwADkAMQA4
AGMAYQBhADQANgBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAT
cwBGAGkAbABlAE4AYQBtAGUAABV5AHkAeQB5AC0ATQBNAC0AZABkAAEJLgBjAHMAdgAAd1QAaABl
ACAAUABSAEUAUABEACAATQBpAHMAYwAgAEEAYwBjAG8AdQBuAHQAIABjAHIAZQBhAHQAaQBvAG4A
IABmAGEAaQBsAGUAZAAgAGYAbwByACAAdABoAGUAIABmAG8AbABsAG8AdwBpAG4AZwA6AAoACgAA
G3MARgBpAGwAZQBMAG8AYwBhAHQAaQBvAG4AAANcAAAAXXtwGl/ESkKPYo3tlk25eAAIt3pcVhk0
4IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAAS
DAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIV
BSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAcAyAADgQAABF5BCABDg4GAAMO
Dg4OAwAADgUAAg4ODgUAAgEODgYHAw4OEXlHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjAB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfZGJkZDBlZTU3
NzZjNDExNGIxMjM4NzA5MThjYWE0NmIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQCsLwAAAAAAAAAAAADOLwAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAwC8AAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDxpf8WAAABAPGl/xY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZABiAGQAZAAwAGUAZQA1ADcANwA2AGMANAAxADEANABiADEAMgAzADgANwAwADkAMQA4AGMA
YQBhADQANgBiAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUAOAA4
ADcALgA0ADIANAA4ADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
ZABiAGQAZAAwAGUAZQA1ADcANwA2AGMANAAxADEANABiADEAMgAzADgANwAwADkAMQA4AGMAYQBh
ADQANgBiAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AZABiAGQAZAAwAGUAZQA1ADcANwA2AGMANAAxADEANABiADEA
MgAzADgANwAwADkAMQA4AGMAYQBhADQANgBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGQAYgBkAGQAMABlAGUANQA3ADcANgBjADQAMQAxADQAYgAxADIA
MwA4ADcAMAA5ADEAOABjAGEAYQA0ADYAYgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA4ADgANwAuADQAMgA0ADgAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA4ADgANwAuADQAMgA0ADgAMQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{39C6106B-044A-445F-B8DB-C71E8905AD8A}"
      DTS:From="Package\Get CNECT Text"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get CNECT data to CSV" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{69500F18-7914-49A3-974D-2ACB839965F1}"
      DTS:From="Package\Get CNECT data to CSV"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get PREPD Text" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{DD252299-B7A3-4260-85D5-D82C6AF932CC}"
      DTS:From="Package\Get PREPD Text"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get PREPD data to CSV" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="192,42"
          Id="Package\Get CNECT data to CSV"
          TopLeft="477,123" />
        <NodeLayout
          Size="157,42"
          Id="Package\Get CNECT Text"
          TopLeft="494,27" />
        <NodeLayout
          Size="191,42"
          Id="Package\Get PREPD data to CSV"
          TopLeft="487,285" />
        <NodeLayout
          Size="201,42"
          Id="Package\Get PREPD Text"
          TopLeft="479,213" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="572.75,69">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="576.25,165">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="581,255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get CNECT data to CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="174,42"
          Id="Package\Get CNECT data to CSV\Flat File Destination"
          TopLeft="402,211" />
        <NodeLayout
          Size="152,42"
          Id="Package\Get CNECT data to CSV\OLE DB Source"
          TopLeft="412,61" />
        <EdgeLayout
          Id="Package\Get CNECT data to CSV.Paths[OLE DB Source Output]"
          TopLeft="488.5,103">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,108"
              Start="0,0"
              End="0,100.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,100.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get CNECT data to CSV\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get PREPD data to CSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="132,42"
          Id="Package\Get PREPD data to CSV\Merge Join"
          TopLeft="332,238" />
        <NodeLayout
          Size="125,42"
          Id="Package\Get PREPD data to CSV\Visa Data"
          TopLeft="652,255" />
        <NodeLayout
          Size="145,42"
          Id="Package\Get PREPD data to CSV\CXN FIS Data"
          TopLeft="225,46" />
        <NodeLayout
          Size="141,42"
          Id="Package\Get PREPD data to CSV\Merge Join 1"
          TopLeft="492,438" />
        <NodeLayout
          Size="109,42"
          Id="Package\Get PREPD data to CSV\Sort 2"
          TopLeft="347,333" />
        <NodeLayout
          Size="100,42"
          Id="Package\Get PREPD data to CSV\Sort"
          TopLeft="241,145" />
        <NodeLayout
          Size="174,42"
          Id="Package\Get PREPD data to CSV\Flat File Destination"
          TopLeft="493,561" />
        <NodeLayout
          Size="109,42"
          Id="Package\Get PREPD data to CSV\Sort 3"
          TopLeft="664,331" />
        <NodeLayout
          Size="173,42"
          Id="Package\Get PREPD data to CSV\CXE Customer Data"
          TopLeft="427,47" />
        <NodeLayout
          Size="109,42"
          Id="Package\Get PREPD data to CSV\Sort 1"
          TopLeft="431,144" />
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[Sort Output3]"
          TopLeft="485.5,186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-66.8333333333334,52"
              Start="0,0"
              End="-66.8333333333334,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8263473053892" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.8263473053892"
                    Point2="0,30.8263473053892"
                    Point3="-4,30.8263473053892" />
                  <mssgle:LineSegment
                    End="-62.8333333333334,30.8263473053892" />
                  <mssgle:CubicBezierSegment
                    Point1="-62.8333333333334,30.8263473053892"
                    Point2="-66.8333333333334,30.8263473053892"
                    Point3="-66.8333333333334,34.8263473053892" />
                  <mssgle:LineSegment
                    End="-66.8333333333334,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[Sort Output2]"
          TopLeft="291,187">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86.3333333333333,51"
              Start="0,0"
              End="86.3333333333333,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.2335329341317" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.2335329341317"
                    Point2="0,30.2335329341317"
                    Point3="4,30.2335329341317" />
                  <mssgle:LineSegment
                    End="82.3333333333333,30.2335329341317" />
                  <mssgle:CubicBezierSegment
                    Point1="82.3333333333333,30.2335329341317"
                    Point2="86.3333333333333,30.2335329341317"
                    Point3="86.3333333333333,34.2335329341317" />
                  <mssgle:LineSegment
                    End="86.3333333333333,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[Sort Output1]"
          TopLeft="718.5,373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-133.833333333333,65"
              Start="0,0"
              End="-133.833333333333,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.562412342216" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.562412342216"
                    Point2="0,38.562412342216"
                    Point3="-4,38.562412342216" />
                  <mssgle:LineSegment
                    End="-129.833333333333,38.562412342216" />
                  <mssgle:CubicBezierSegment
                    Point1="-129.833333333333,38.562412342216"
                    Point2="-133.833333333333,38.562412342216"
                    Point3="-133.833333333333,42.562412342216" />
                  <mssgle:LineSegment
                    End="-133.833333333333,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[Sort Output]"
          TopLeft="401.5,375">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="161,63"
              Start="0,0"
              End="161,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5"
                    Point2="0,31.5"
                    Point3="4,31.5" />
                  <mssgle:LineSegment
                    End="157,31.5" />
                  <mssgle:CubicBezierSegment
                    Point1="157,31.5"
                    Point2="161,31.5"
                    Point3="161,35.5" />
                  <mssgle:LineSegment
                    End="161,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[OLE DB Source Output2]"
          TopLeft="716.5,297">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[OLE DB Source Output1]"
          TopLeft="294.25,88">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[OLE DB Source Output]"
          TopLeft="513.5,89">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28,55"
              Start="0,0"
              End="-28,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.5"
                    Point2="0,27.5"
                    Point3="-4,27.5" />
                  <mssgle:LineSegment
                    End="-24,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-24,27.5"
                    Point2="-28,27.5"
                    Point3="-28,31.5" />
                  <mssgle:LineSegment
                    End="-28,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[Merge Join Output1]"
          TopLeft="399.75,280">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get PREPD data to CSV.Paths[Merge Join Output]"
          TopLeft="562.5,480">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.5,81"
              Start="0,0"
              End="17.5,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.5"
                    Point2="0,40.5"
                    Point3="4,40.5" />
                  <mssgle:LineSegment
                    End="13.5,40.5" />
                  <mssgle:CubicBezierSegment
                    Point1="13.5,40.5"
                    Point2="17.5,40.5"
                    Point3="17.5,44.5" />
                  <mssgle:LineSegment
                    End="17.5,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get PREPD data to CSV\Visa Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get PREPD data to CSV\CXN FIS Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get PREPD data to CSV\CXE Customer Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>