@model MGI.Channel.DMS.Web.Models.ProfileSummary
<script src="@Url.Content("~/Scripts/Common/lib/jquery.maskedinput-1.3.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#PrimaryPhone").mask("999-999-9999");
        $("#EmployerPhoneNumber").mask("999-999-9999");
    });

</script>
<div class="row">
    <div>
        @Html.LabelFor(model => model.SSN, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.SSN, new { @class = "profile_input", readOnly = true, title = Model.SSN })
    </div>
</div>
<div class="row">
    <div>
        @Html.LabelFor(model => model.Name, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.Name, new { @class = "row_input_bg profile_name", readOnly = true, title = Model.Name })
    </div>
</div>
<div class="row">
    <div>
        @Html.LabelFor(model => model.Gender, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.Gender, new { @class = "profile_input", readOnly = true, title = Model.Gender })
    </div>
</div>
<div class="row">
    <div>
        @Html.LabelFor(model => model.PrimaryPhone, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.PrimaryPhone, new { @class = "profile_input", readOnly = true, title = Model.PrimaryPhone })
    </div>
</div>
<div class="row">
    <div>
        @Html.LabelFor(model => model.Email, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.Email, new { @class = "profile_input profile_text", readOnly = true, title = Model.Email })
    </div>
</div>
<div class="row">
    <div>
        @Html.LabelFor(model => model.Address, new { @class = "row_label_txt row_width35" })
        @Html.TextAreaFor(model => model.Address, new { @class = "profile_input profile_text", readOnly = true, title = Model.Address })
    </div>
</div>
@*AL-533: IsMailingAddressEnable is a property which can be configured through DB table name tchannelpartnerconfig
Developed by: Sunil Shetty || Date: 09\06\2015*@
@if(Model.channelPartner.IsMailingAddressEnable)
{ 
<div class="row">
    <div>
        @Html.LabelFor(model => model.MailingAddress, new { @class = "row_label_txt row_width35" })
        @Html.TextAreaFor(model => model.MailingAddress, new { @class = "profile_input profile_text", readOnly = true, title = Model.MailingAddress })
    </div>
</div>
}
<div class="row">
	<div>
		@Html.LabelFor(model => model.CustomerProfileStatus, new { @class = "row_label_txt row_width35" })
		@Html.TextBoxFor(model => model.CustomerProfileStatus, new { @class = "profile_input", readOnly = true, title = Model.CustomerProfileStatus })
	</div>
</div>
<div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.Group1, new { @class = "row_label_txt row_width35" })
            @Html.TextAreaFor(model => model.Group1, new { @class = "profile_input profile_text", readOnly = true, title = Model.Group1 })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.Label("  ", new { @class = "row_label_txt row_width35" })
            @Html.TextAreaFor(model => model.Group2, new { @class = "profile_input profile_text", readOnly = true, title = Model.Group2 })
        </div>
    </div>
    @if (Model.ChannelPartnerName == "Synovus")//AL-184 changes
    { 
    <div class="row">
        <div>
          @Html.LabelFor(model => model.Notes,new{@class = "row_label_txt row_width35" })
          @Html.TextAreaFor(model => model.Notes,new{@class="profile_input profile_text",readOnly=true, title=Model.Notes})
        </div>
    </div>
    } 
    <p class="profile_heading row5">
        Identification Information</p>
    <br />
    <div class="row">
        <div>
            @Html.LabelFor(model => model.MotherMaidenName, new { @class = "row_label_txt row_width35" })
            @Html.TextBoxFor(model => model.MotherMaidenName, new { @class = "profile_input", readOnly = true, title = Model.MotherMaidenName })
        </div>
    </div>
    <div class="row">
        @Html.LabelFor(model => model.DateOfBirth, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "profile_input", readOnly = true, title = Model.DateOfBirth })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.Country, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.Country, new { @class = "profile_input", readOnly = true, title = Model.Country })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.CountryOfBirth, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.CountryOfBirth, new { @class = "profile_input", readOnly = true, title = Model.Country })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.GovtIDType, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.GovtIDType, new { @class = "profile_input", readOnly = true, title = Model.GovtIDType })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.GovtIdIssueState, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.GovtIdIssueState, new { @class = "profile_input", readOnly = true, title = Model.GovtIdIssueState })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.GovernmentId, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.GovernmentId, new { @class = "profile_input", readOnly = true, title = Model.GovernmentId })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.IDIssueDate, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.IDIssueDate, new { @class = "profile_input", readOnly = true, title = Model.IDIssueDate })
    </div>
    <div class="row">
        @Html.LabelFor(model => model.IDExpirationDate, new { @class = "row_label_txt row_width35" })
        @Html.TextBoxFor(model => model.IDExpirationDate, new { @class = "profile_input", readOnly = true, title = Model.IDExpirationDate })
    </div>
	<div class="row">
		@Html.LabelFor(model => model.LegalCode, new { @class = "row_label_txt row_width35" })
		@Html.TextBoxFor(model => model.LegalCode, new { @class = "profile_input", readOnly = true, title = Model.LegalCode })
	</div>
	<div class="row">
		@Html.LabelFor(model => model.PrimaryCountryCitizenShip, new { @class = "row_label_txt row_width35" })
		@Html.TextBoxFor(model => model.PrimaryCountryCitizenShip, new { @class = "profile_input", readOnly = true, title = Model.PrimaryCountryCitizenShip })
	</div>	
	<div class="rowleft margin_bottom20">
		@Html.LabelFor(model => model.SecondaryCountryCitizenShip, new { @class = "row_label_txt row_width35" })
		@Html.TextBoxFor(model => model.SecondaryCountryCitizenShip, new { @class = "profile_input", readOnly = true, title = Model.SecondaryCountryCitizenShip })
	</div>
	<div class="row">
		@Html.LabelFor(model => model.MGIAlloyID, new { @class = "row_label_txt row_width35" })
		@Html.TextBoxFor(model => model.MGIAlloyID, new { @class = "profile_input", readOnly = true, title = Model.MGIAlloyID })
	</div>
	<div class="row">
		@Html.LabelFor(model => model.ClientID, new { @class = "row_label_txt row_width35" })
		@Html.TextBoxFor(model => model.ClientID, new { @class = "profile_input", readOnly = true, title = Model.ClientID })
	</div>
</div>
<br />
<div>
    <p class="profile_heading row5">
        Employment Details</p>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.Profession, new { @class = "row_label_txt row_width35" })
            @Html.TextBoxFor(model => model.Profession, new { @class = "profile_input", readOnly = true, title = Model.Profession })
        </div>
    </div>

	<!-- Only for TCF channel partner OccupationDescription is saved and for other channel partners its null.-->
	<!-- When Occupation Selected is - Other, Unemployed or Retired then only OccupationDescription is shown in Employment screen so 
		checking for null here mean it should be "TCF" channel partner and occupation - Other, Unemployed or Retired is selected -->
	@if (!string.IsNullOrEmpty(Model.OccupationDescription)) 
	{
		<div class="row">
			<div>
				@Html.LabelFor(model => model.OccupationDescription, new { @class = "row_label_txt row_width35" })
				@Html.TextBoxFor(model => model.OccupationDescription, new { @class = "profile_input", readOnly = true, title = Model.OccupationDescription })
			</div>
		</div>
	}
	   <div class="row">
        <div>
            @Html.LabelFor(model => model.EmployerName, new { @class = "row_label_txt row_width35" })
            @Html.TextBoxFor(model => model.EmployerName, new { @class = "profile_input", readOnly = true, title = Model.EmployerName })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.EmployerPhoneNumber, new { @class = "row_label_txt row_width35" })
            @Html.TextBoxFor(model => model.EmployerPhoneNumber, new { @class = "profile_input", readOnly = true, title = Model.EmployerPhoneNumber })
        </div>
        @Html.HiddenFor(model => model.Pin)
    </div>
</div>
