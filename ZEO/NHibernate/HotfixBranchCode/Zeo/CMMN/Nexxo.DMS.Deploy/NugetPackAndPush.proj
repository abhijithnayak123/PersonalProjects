<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="NugetPush" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
	<Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
	<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>
	<Import Project="$(MSBuildExtensionsPath)\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks"/>
	<!-- Set the properties to be used across the build-->
    <PropertyGroup>
		<WorkspaceDir>$(WORKSPACE)$(ProjectRootPath)</WorkspaceDir>
		<NugetPackagesFolder>$(WORKSPACE)Packages</NugetPackagesFolder>
		<NugetPackagesConfig>$(WorkspaceDir)packages.config</NugetPackagesConfig>
		<ProjectOutputDirectory>$(OutputDirectory)$(Project)</ProjectOutputDirectory>
		
		<NuGetAppPath>$(MSBuildProjectDirectory)\.nuget\</NuGetAppPath>
		<NugetPackageRepoStore>https://nuget.org/api/v2/;http://10.111.109.14:9081/nexus/service/local/nuget/nexxo.share/</NugetPackageRepoStore>
		<NugetPackageRepoLocalStore>http://10.111.109.14:9081/nexus/service/local/nuget/nexxo.releases/</NugetPackageRepoLocalStore>
        <NugetAPIKey>e4984d8f-bd3e-3523-b52c-8ac4d952ff15</NugetAPIKey>
	</PropertyGroup>
		<!--
            Properties used to create Nuspec file dynamically. Template file will be copied to the current working folder, then renamed to match the project name.
    -->

    <PropertyGroup>
        <NuspecTemplateFile>$(NuGetAppPath)NuspecTemplate.nuspec</NuspecTemplateFile>
    </PropertyGroup>
	
	<Target Name="GetAssemblyInfo">
		<XmlPeek Namespaces="&lt;Namespace Prefix='msb' Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;"
				XmlInputPath="$(WorkspaceDir)\$(Project).csproj" Query="/msb:Project/msb:PropertyGroup/msb:OutputType/text()">
			<Output TaskParameter="Result" ItemName="myResult" />
		</XmlPeek>
		<PropertyGroup>
			<ProjectOutputType>@(myResult)</ProjectOutputType>
		</PropertyGroup>

		<PropertyGroup Condition="'$(ProjectOutputType)'!='Exe' And '$(ProjectOutputType)'!='WinExe'">
			<ProjectAssembly>$(OutputDirectory)$(Project)\bin\$(Project).dll</ProjectAssembly>
		</PropertyGroup>
		<PropertyGroup Condition="'$(ProjectOutputType)'=='Exe' Or '$(ProjectOutputType)'=='WinExe'">
			<ProjectAssembly>$(OutputDirectory)$(Project)\$(Project).exe</ProjectAssembly>
		</PropertyGroup>

		<MSBuild.ExtensionPack.Framework.Assembly TaskAction="GetInfo" NetAssembly="$(ProjectAssembly)">
            <Output TaskParameter="OutputItems" ItemName="Info"/>
        </MSBuild.ExtensionPack.Framework.Assembly>
        <PropertyGroup>
            <AssemblyName>%(Info.Identity)</AssemblyName>
			<AssemblyVersion>%(Info.AssemblyVersion)</AssemblyVersion>
        </PropertyGroup>
		<PropertyGroup>
			<!--Remove Revision no-->
			<Version>$(AssemblyVersion.Substring(0,$([MSBuild]::Subtract($(AssemblyVersion.Length),2))))</Version>			
		</PropertyGroup>
		<Message Text="Nuget Package : $(AssemblyName).$(Version).nupkg"/>
        <Message Text="Nuget Package Directory : $(WorkspaceDir)$(AssemblyName).$(Version).nupkg"/>
    </Target>
    <Target Name="CopyNuspecTemplateFile" DependsOnTargets="GetAssemblyInfo">
        <Message Text="Project Nuspec: $(Project).nuspec" />   
		<Delete Files="$(WorkspaceDir)\$(Project).nuspec.bak" />
		<Copy
			SourceFiles="$(NuspecTemplateFile)"
			DestinationFolder="$(WorkspaceDir)"
          />
        <Exec Condition="Exists('$(WorkspaceDir)\$(Project).nuspec')"
			  Command="Rename $(Project).nuspec $(Project).nuspec.bak"
              WorkingDirectory ="$(WorkspaceDir)"
         />
        <Exec Command="Rename NuspecTemplate.nuspec $(Project).nuspec"
              WorkingDirectory ="$(WorkspaceDir)"
         />
    </Target>
	<PropertyGroup>
	<ProjectOutputDirectory>"$(ProjectOutputDirectory.Replace("\\","\"))"</ProjectOutputDirectory>
	</PropertyGroup>
    <Target Name="NugetPack" DependsOnTargets="CopyNuspecTemplateFile">
        <Message Text="Content was published to: $(ProjectOutputDirectory)" />
        <Exec Command='"$(NuGetAppPath)\Nuget.exe" pack "$(WorkspaceDir.TrimEnd(&quot;\&quot;))\$(Project).nuspec" -OutputDirectory "$(WorkspaceDir.TrimEnd(&quot;\&quot;))"  -basePath "$(ProjectOutputDirectory.TrimEnd(&quot;\&quot;))" -Version "$(Version)" -Properties id="$(AssemblyName)"  -NoPackageAnalysis' />
        <OnError ExecuteTargets="NugetPackError"/>
    </Target>

    <!-- The below code forms the bottom portion of the build script, typically after Nuget Pack -->
    <Target Name="NugetPush" DependsOnTargets="NugetPack">
		<Message Text="From Nuget Push - Workspacedir is  : '$(WorkspaceDir)'"/>
        <Message Text="From Nuget Push : '$(WorkspaceDir)$(AssemblyName).$(Version).nupkg'"/>
	
		<!--Write Release note heading-->
		<PropertyGroup>
			<IniFileContents>
AssemblyNamme				Version	Nugetpackage
-------------				-------	------------ 
			</IniFileContents>
			<line>$(AssemblyName)		$(Version)	$(AssemblyName).$(Version).nupkg</line>
		</PropertyGroup>

		<WriteLinesToFile File="$(OutputDirectory)ReleaseNote.out" Lines="$(IniFileContents)" Overwrite="false" Condition="('$(ProjectOutputType)'!='Exe' And '$(ProjectOutputType)'!='WinExe') And !Exists('$(OutputDirectory)ReleaseNote.out')"/>
		<WriteLinesToFile File="$(OutputDirectory)..\ReleaseNote.out" Lines="$(IniFileContents)" Overwrite="false" Condition="('$(ProjectOutputType)'=='Exe' Or '$(ProjectOutputType)'=='WinExe') And !Exists('$(OutputDirectory)..\ReleaseNote.out')"/>  
		<!--Write Release note line-->
		
		<WriteLinesToFile File="$(OutputDirectory)ReleaseNote.out" Lines="$(line)" Overwrite="false" Condition="'$(ProjectOutputType)'!='Exe' And '$(ProjectOutputType)'!='WinExe'"/>
		<WriteLinesToFile File="$(OutputDirectory)..\ReleaseNote.out" Lines="$(line)" Overwrite="false" Condition="'$(ProjectOutputType)'=='Exe' Or '$(ProjectOutputType)'=='WinExe'"/>  
	
		<Exec Command='"$(NuGetAppPath)\Nuget.exe" push "$(WorkspaceDir)$(AssemblyName).$(Version).nupkg" "$(NugetAPIKey)" -Source "$(NugetPackageRepoLocalStore)" '/>
		<OnError ExecuteTargets="NugetPushError"/>
	</Target>
	<Target Name="NugetPackError">
		<Error Text="Error occurred when trying to pack the project as a Nuget package. Please check the error message returned from NugetPack target for more information." Condition="1==1"/>
	</Target>
	<Target Name="NugetPushError">
		<Error Text="Error occurred when trying to publish the Nuget package to the local feed repository. Please check the error message returned from NugetPush target for more information." Condition="1==1"/>
	</Target>
</Project>