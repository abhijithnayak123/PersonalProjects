@model TCF.Channel.Zeo.Web.Models.SSOLogin
@{
    Layout = null;
    string isNpsLocal = System.Configuration.ConfigurationManager.AppSettings["IsNpsLocal"];
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Synovus SSO Login</title>
  <script src="@Url.Content("~/Scripts/Common/lib/jquery-1.7.1.min.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/Common/BrowserCustomisation.js?version=" + @DateTime.Now.Ticks)" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/css/Common/layout-rule.css")" rel="stylesheet" type="text/css" />
  
    <script type="text/javascript" language="javascript">
        function DisableBackButton() {
            window.history.forward()
        }
        DisableBackButton();
        window.onload = DisableBackButton;
        window.onpageshow = function (evt) { if (evt.persisted) DisableBackButton() }
        window.onunload = function () { void (0) }
    </script>
    @if (Model.ErrorCode == TCF.Channel.Zeo.Web.SSO.SSOErrorCodes.NoError)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                PopulateHostName(fx, this);
            });

            function fx(document) {
                document.forms[0].submit();
            }

            function PopulateHostName(fx, doc) {
                var localNps = $("#hdnIsNpsLocal").val();
                var baseURL = PSBaseUrl;
                var restFulServiceUrl = baseURL + "GetHostName?localNps=" + localNps;
                $.ajax({
                    data: "{}",
                    dataType: "jsonp",
                    type: "GET",
                    url: restFulServiceUrl,
                    contentType: "application/json; charset=UTF-8",
                    processData: true,
                    timeout: 5000,
                    success: function (data) {
                        if (data) {
                            var hName = data.GetHostNameResult.HostName;
                            $("#hostName").val(hName);
                            fx(doc);
                            return;
                        }
                    },
                    error: function (data, errmessage, errdetails) { fx(doc); }
                });
            }
        </script>
    }
</head>
<body>
    <div id="layout_container_wrap">
        <div id="layout_primary_head">
            <div class="logo_bg">
                @{ string logoUrl = Url.Content(string.Format("~/Content/images/{0}.png", @Model.ChannelPartnerName));
                    <img class="logo_agent" alt=" " src="@logoUrl"/>
					<img class="logo_nexxo" alt=" " src="~/Content/images/MGiAlloylogo.png" />
				}
            </div>
            <div class="page_head" >
                <div class="bread_head">
                    <a class="menu" href="#">Home</a>
                </div>
            </div>
        </div>
		<br /><br />
		<div class="ssoerrortext">
			@if (Model.ErrorCode != TCF.Channel.Zeo.Web.SSO.SSOErrorCodes.NoError)
			{
				<p> SSO Login Failed : @Model.ErrorCode</p>
			}
			else
			{
				<p> Authenticating SSO agent...</p>
				using (Html.BeginForm("Login", "SynovusSSO", FormMethod.Post))
				{
					<div>
						@Html.Hidden("hdnIsNpsLocal", isNpsLocal)
						@Html.HiddenFor(model => model.hostName)
						@Html.HiddenFor(model => model.SAMLResponse)
					</div>
				}
			}
		</div>

    </div>

    
</body>
</html>
