@model TCF.Channel.Zeo.Web.Models.SSOLogin
@{
    Layout = null;
    string isNpsLocal = System.Configuration.ConfigurationManager.AppSettings["IsNpsLocal"];
    bool isAnyError = @Model.ErrorCode == @TCF.Channel.Zeo.Web.SSO.SSOErrorCodes.NoError;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>SSO Login</title>
    <script src="@Url.Content("~/Scripts/Common/lib/jquery-1.7.1.min.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/Common/BrowserCustomisation.js?version=" + @DateTime.Now.Ticks)" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/css/Common/layout-rule.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript">
        var isAnyError = '@isAnyError';
        var PSBaseUrl = '@System.Configuration.ConfigurationManager.AppSettings["PSUrl"].ToString()';
    </script>
    <script src="@Url.Content("~/Scripts/Common/sso.js?version=" + @DateTime.Now.Ticks)"></script>
</head>
<body>
    <div id="layout_container_wrap">
        <div id="layout_primary_head">
            <div class="logo_bg">
				@{ string logoUrl = Url.Content(string.Format("~/Content/images/{0}.png", @Model.ChannelPartnerName));
                    <img class="logo_agent" alt=" " src="@logoUrl" />
					if (Model.channelPartner != null && Model.channelPartner.IsMGIAlloyLogoEnable)
					{
						<img class="logo_nexxo" alt=" " src="~/Content/images/MGiAlloylogo.png" />							
					}
				 }
            </div>
            <div class="page_head">
                <div class="bread_head">
                    <a class="menu" href="#">Home</a>
                </div>
            </div>
        </div>
		<br />
		<br />
		<div class="ssoerrortext">
			@if (Model.ErrorCode != TCF.Channel.Zeo.Web.SSO.SSOErrorCodes.NoError)
			{
				<p>SSO Login Failed : @Model.ErrorCode</p>
			}
			else
			{
				<p>Authenticating SSO agent...</p>
				using (Html.BeginForm("SSOLogin", "SSO", FormMethod.Post))
				{
					<div>
						@Html.Hidden("hdnIsNpsLocal", isNpsLocal)
						@Html.HiddenFor(model => model.ChannelPartnerName)
						@Html.HiddenFor(model => model.hostName)
						@Html.HiddenFor(model => model.Issuer)
						@Html.HiddenFor(model => model.SAMLResponse)
					</div>
				}
			}
		</div>

	</div>


    
    <script type="text/javascript">        
        if (typeof (Storage) !== "undefined") {   
            localStorage.setItem("ChannelPartnerName",'@Model.ChannelPartnerName');       
        }
    </script>
</body>
</html>
