<link href="@Url.Content("~/Content/css/Common/jquery-ui.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/Common/lib/jquery.ui.datepicker.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/jquery-grid/ui.jqgrid.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/jquery-ui/redmond/jquery-ui-1.8.14.custom.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/jquery-ui/redmond/jquery-ui-1.9.2.custom.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/Common/lib/jquery-grid/grid.locale-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Common/lib/jquery-grid/jquery.jqGrid.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var rowsToColor = [];
    var rowsToBorder = [];
    var isCartEmpty = false;
    var showCheckout = false;
    var pendingFlag = false;
    var IsGPRCard = '@Session["IsGPRCard"]' == 'True' ? true : false;
    var ShoppingCartExists = '@Session["IsShoppingCartExists"]';
    var IsShoppingCartExists = '@Session["IsShoppingCartExists"]';
    var UserRoleId = '@Session["UserRoleId"]';
    jQuery(document).ready(function () {
        var jqDataUrl = '@Url.Action("GetShoppingCartSummary", "ShoppingCart")'; //"CustomerSearch/CustomerSearchGrid";
        jQuery(document).ready(function () {
            // Set up the jquery grid
            jQuery("#jqTableShoppingCart").jqGrid({
                // Ajax related configurations
                url: jqDataUrl,
                datatype: "json",
                mtype: "POST",
                // Specify the column names
                colNames: ["Service", "", "Amount", "", "", ""],
                // Configure the columns
                colModel: [
            { name: "Service", index: "Details", height: 10, width: 120, align: "center", formatter: imageFormatterDetails },
            { name: "Ct.", index: "Transactions", height: 10, width: 20, align: "center", hidden: true, formatter: countFormatterDetails },
            { name: "Amount", index: "Amount", height: 10, width: 60, align: "center", formatter: rowColorFormatter },
            { name: "Status", index: "Status", height: 10, width: 20, align: "center", formatter: imageFormatterStatus },
            { name: "TransactionType", index: "TransactionType", height: 10, width: 0, align: "left", hidden: true, formatter: rowColorFormatter },
            { name: "hasGPRActivation", index: "hasGPRActivation", height: 1, width: 0, hidden: true, formatter: rowColorFormatter }
            ],
    			//colModel :[{name:'EDIT',edittype:'select',formatter:'showlink', width:5,xmlmap:"Edit",formatoptions:{baseLinkUrl:'someurl.php', addParam: '&action=edit'}},
    			cmTemplate: { sortable: false },
    			// Grid total width and height
    			width: 265,
    			height: 165,
    			// Paging
    			toppager: false,
    			pager: jQuery("#jqTablePager1"),
    			rowNum: 7,
    			rowList: [5, 10, 20],
    			viewrecords: true, // Specify if "total number of records" is displayed
    			// Default sorting
    			sortname: "Service",
    			sortorder: "asc",
                altRows : true,
    			// Grid caption
    			caption: "",
    			gridComplete:function () {				
                        var rowIDs = jQuery("#jqTableShoppingCart").jqGrid('getDataIDs');
                        if (rowIDs.length > 0) {
                        	localStorage.setItem("hasTransaction", true);
                        	var lastRowId=rowIDs.length;
                        	var lastRowObject=jQuery("#jqTableShoppingCart tr[id="+lastRowId+"]");
                        	$(lastRowObject).css({ "border-top": "2px solid black", "border-bottom": "2px solid black" });                        	
                        }
                        else{
						    localStorage.setItem("hasTransaction", false);                     	
                        }
                     $("tr.jqgrow:even").css("background", "#d9d9d9");
    				for (var i = 0; i < rowsToColor.length; i++) {
    					$("#" + rowsToColor[i]).find("td[aria-describedby=jqTableShoppingCart_Amount]").css("color", "red"); 
                        $("#" + rowsToColor[i]).find("td[aria-describedby=jqTableShoppingCart_Service]").css("font-weight", "bolder");
                        $("#" + rowsToColor[i]).find("td[aria-describedby=jqTableShoppingCart_Service]").css("color", "#000000");
    				}
                    
                    for(var j = 0; j < rowsToBorder.length; i++) {
                        $("#" + rowsToBorder[i]).css("border", "1px solid #000000");
                    }
    				if (!showCheckout) {
    					
    					$("#btnShoppingCartCheckout").attr("onclick", "javascript:return false");
    				}
    				$("#gview_jqTableShoppingCart > .ui-jqgrid-titlebar").attr("style", "display:none");
    				$("#gview_jqTableShoppingCart > .ui.jqgrid").attr("style", "border-width:0px");

    				var recordCount = jQuery("#jqTableShoppingCart").jqGrid('getGridParam', 'records');
    				if (recordCount >= 1 || IsShoppingCartExists =='True') {
                        $("#btnShoppingCartCheckout").removeAttr("onclick");
                        $("#btnShoppingCartCheckout").attr("disabled", false);
    					$("#btnShoppingCartCheckout").text('View Cart');
    					isCartEmpty = false;
    				}
					else if (IsGPRCard==false)
					{
						$("#btnShoppingCartCheckout").text('View Cart');
						$("#btnShoppingCartCheckout").attr("disabled", true);
                        $("#btnShoppingCartCheckout").addClass("opaqueViewCart");
                    }
    				else 
					{
    					$("#btnShoppingCartCheckout").text('Card trx');
    					$("#btnShoppingCartCheckout").attr("href", "javascript:void(0)");
    					isCartEmpty = true;
    					if (UserRoleId == 3 || UserRoleId == 5) {
    						$("#btnShoppingCartCheckout").attr("disabled", true);
    						$("#btnShoppingCartCheckout").addClass("opaqueViewCart");
    					}
					}  				
    			}
    		}).navGrid("#jqTablePager",
            { refresh: true, add: false, edit: false, del: false, search: false, refresh: false },
                {}, // settings for edit
                {}, // settings for add
                {}, // settings for delete
                {sopt: ["cn"]} // Search options. Some options can be set on column level
         );
    	});

    	var GPRtrxConfirmationURL = '@Url.Action("ShowGPRtrxConfirmationMassage", "ShoppingCart")';
    	function showGprTrxPopup() {
    		var $confirmation = $("<div id='ShowGPRtrxConfirmationMessage'></div>");
    		$confirmation.empty();
    		$confirmation.dialog({
    			autoOpen: false,
    			title: "Message",
    			width: 373,
    			draggable: false,
    			modal: true,
    			minHeight: 150,
    			resizable: false,
    			closeOnEscape: false,              
    			open: function (event, ui) {
    				$confirmation.load(GPRtrxConfirmationURL);
    			}
    		});
    		$confirmation.dialog("open");
    	}
    	$("#btnShoppingCartCheckout").click(function () 
		{    	
    		if (isCartEmpty) {
    			if (!window.isCheckoutPage) {
    				showGprTrxPopup()
    			}
    		}
    	});
    });

    function rowColorFormatter(cellValue, options, rowObject) {
        showCheckout = true;
        if (rowObject[3] == "1")
           {
            pendingFlag = true;
            rowsToColor[rowsToColor.length] = options.rowId;
            }
        if (rowObject[4] == "d")
            rowsToColor[rowsToColor.length] = options.rowId;

        if (rowObject[5] == true) {
            $("#ProductCredential").attr('disabled', 'disabled');
            $(".nav_icon_productcredential_dis").addClass('DisableButtons');
        }
        else if (rowObject[5] == false) {
            $("#ProductCredential").removeAttr('disabled');
            $(".nav_icon_productcredential_dis").removeClass('DisableButtons');
        }
        return cellValue;
    }

    function imageFormatterDetails(cellvalue, options, rowObject) {
        if (rowObject[0] == "Check Process")
            cellvalue = ' <img src="@Url.Content("~/Content/images/processcheckgreen.png")" width="18" height="18"  alt="Process Check" Title="Process Check"/>';
        if (rowObject[0] == "Bill Process")
            cellvalue = ' <img src="@Url.Content("~/Content/images/BillPayGreen.png")"  width="20" height="20" alt="Bill Payment" Title="Bill Payment" class="cart_img_shift_top"/>';
        if (rowObject[0] == "Send Money")
            cellvalue = ' <img src="@Url.Content("~/Content/images/SendMoneyGreen.png")"  width="20" height="20" alt="Send Money" Title="Send Money" class="cart_img_shift_top"/>';
        if (rowObject[0] == "Receive Money")
            cellvalue = ' <img src="@Url.Content("~/Content/images/ReceiveMoneyGreen.png")"  width="20" height="20" alt="Receive Money" Title="Receive Money" class="cart_img_shift_top"/>';
        if (rowObject[0] == "Refund")
            cellvalue = ' <img src="@Url.Content("~/Content/images/ReceiveMoneyGreen.png")"  width="20" height="20" alt="Refund" Title="Refund" class="cart_img_shift_top"/>';
        if (rowObject[0] == "Gpr Card")
            cellvalue = ' <img src="@Url.Content("~/Content/images/CredentialsGreen.png")" width="20" height="20" alt="Gpr Card" Title="Gpr Card" class="cart_img_shift_top"/>';
        if (rowObject[0] == "Money Order")
            cellvalue = ' <img src="@Url.Content("~/Content/images/MoneyOrderGreen.png")" width="20" height="20" alt="Money Order" Title="Money Order" class="cart_img_shift_top"/>';

        var cnt = parseInt(rowObject[1]);
        if (cnt > 1)
            cellvalue = cellvalue + '<span class="align_super">' + 'x' + cnt + '</span>';


        return cellvalue;
    }

    function imageFormatterStatus(cellvalue, options, rowObject) {
        if (rowObject[3] == "1")
            cellvalue = ' <img src="@Url.Content("~/Content/images/HourglassIcon.png")" width="16" height="16" alt="Pending" Title="Pending"  />';
        else if (rowObject[3] == "8")
            cellvalue = ' <img src="@Url.Content("~/Content/images/Declined.png")" width="16" height="16" alt="Declined" Title="Declined"  />';
            // "3" = "STATUS_AUTHORIZATION_FAILED" and "5" = "STATUS_FAILED"
        else if (rowObject[3] == "5" || rowObject[3] == "3")
            cellvalue = ' <img src="@Url.Content("~/Content/images/FailedIcon.png")" width="16" height="16" alt="Failed" Title="Failed"  />';
        else
            cellvalue = '';

        return cellvalue;
    }

    function countFormatterDetails(cellvalue, options, rowObject) {

        var cnt = parseInt(rowObject[1]);
        if (cnt > 1)
            cellvalue = '<span>' + 'x' + cnt + '</span>';
        else
            cellvalue = '';
        return cellvalue;
    }

</script>
<div class="txt_center">
    <img src='@Url.Content("~/Content/images/ShoppingCartIcon.png")' alt="shopingcart" class="cart_img" />
    <span class="cart_txt">Shopping Cart</span>
</div>
<div class="cart_support_wrap">
	<table id="jqTableShoppingCart">
	</table>
</div>
<div>
    <ul>
        <li>
            @Html.ActionLink("View Cart", "ShoppingCartCheckout", "ShoppingCart", null, new { @class = "anc_link_btn view_btn", id = "btnShoppingCartCheckout" })
        </li>
    </ul>
</div>
