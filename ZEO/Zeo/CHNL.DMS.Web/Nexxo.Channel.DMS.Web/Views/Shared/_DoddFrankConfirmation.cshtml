@model TCF.Channel.Zeo.Web.Models.DoddFrankConfirmation
<div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.ReceiverName, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.ReceiverName, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.PickUpLocation, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.PickUpLocation, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.PickUpMethod, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.PickUpMethod, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.PickUpOptions, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.PickUpOptions, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.CurrencyType, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.CurrencyType, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.TransferFee, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.TransferFee, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.TransferTax, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.TransferTax, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.TotalAmount, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.TotalAmount, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.ExchangeRate, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.ExchangeRate, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.TransferAmount, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.TransferAmount, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.OtherFees, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.OtherFees, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.OtherTaxes, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.OtherTaxes, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.TotalToRecipient, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.TotalToRecipient, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
    </div>
</div>
@Html.HiddenFor(model => model.ReceiverID)
@Html.HiddenFor(model => model.TransactionId)
@Html.HiddenFor(model=>model.DoddFrankDisclosure)
<div id="divExit" class="float_right">
    <ul>
        <li>
            <input type="button" id="btnExit" value="Exit" onclick="javascript:$('#dlgCheckDetails').dialog('destroy').remove();" />
        </li>
    </ul>
</div>
