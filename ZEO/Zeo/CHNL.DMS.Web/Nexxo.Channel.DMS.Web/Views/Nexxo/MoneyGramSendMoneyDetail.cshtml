@using System
@model TCF.Channel.Zeo.Web.Models.MoneyGramSendMoneyDetail
@{
    ViewBag.Title = "MoneyGram SendMoneyDetails";

    string receiveCurrency = string.Empty;
    string deliveryOption = string.Empty;
    string receiveAgent = string.Empty;

    if (TempData["ReceiveCurrency"] != null)
    {
        receiveCurrency = Convert.ToString(TempData["ReceiveCurrency"]);
    }

    if (TempData["DeliveryOption"] != null)
    {
        deliveryOption = Convert.ToString(TempData["DeliveryOption"]);
    }

    if (TempData["ReceiveAgent"] != null)
    {
        receiveAgent = Convert.ToString(TempData["ReceiveAgent"]);
    }
}
<script type="text/javascript">
    var IsException = '@ViewBag.IsException';
    var URL_PopulateDeliveryOption = '@Url.Action("PopulateDeliveryOptions", "MoneyGramMoneyTransfer")';
    var URL_BindFeeInformation = '@Url.Action("GetFeeInformation", "MoneyGramMoneyTransfer")';
    var URL_BindReceiveAgents = '@Url.Action("GetReceiveAgents", "MoneyGramMoneyTransfer")';
    var URL_PopulateDynamicControls = '@Url.Action("PopulateDynamicControls", "MoneyGramMoneyTransfer")';

    var receiveCurrency = '@receiveCurrency';
    var deliveryOption = '@deliveryOption';
    var receiveAgent = '@receiveAgent';

</script>
<script src="@Url.Content("~/Scripts/SendMoney/CancelMoneytransfer.js?version=" + @DateTime.Now.Ticks)" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/SendMoney/MoneyGramSendMoneyDetail.js?version=" + @DateTime.Now.Ticks)" type="text/javascript"></script>
@Html.Partial("_partialSpinner")
@using (Html.BeginForm("SendMoneyDetails", "MoneyGramMoneyTransfer", FormMethod.Post, new { id = "sendMoneyDetailForm" }))
{
    <div>
        <ul class="page_head product_head">
            <li>Send Money Details</li>
        </ul>
    </div>
    <div>
        @Html.ValidationSummary(true)
        @if (@ViewBag.ErrorMessage != null)
        {
            <div id="divErrorMsg">
                <div class="field-validation-error error_txt">@ViewBag.ErrorMessage</div>
            </div>
        }
    </div>
    <div class="send_money_wrap send_money_det_wrap">
        <div class="row float_left name_wrap">
            <div>
                <label class="row_label_txt send_money_txt">
                    @TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.FirstName</label>
                @Html.TextBoxFor(model => model.FirstName, null, new { @class = "disable_txt float_left first_name_wrap", readOnly = "true" })
            </div>
            <div class="error_align_left">
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>
        <div class="row float_left last_name_wrap">
            <div>
                <label class="row_label_txt send_money_Scn_txt">
                    @TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.LastName</label>
                @Html.TextBoxFor(model => model.LastName, null, new { @class = "disable_txt float_left first_name_wrap", readOnly = "true" })
                @Html.HiddenFor(model => model.SecondLastName, new { @class = "disable_txt float_left first_name_wrap hide", readOnly = "true" })
                @Html.HiddenFor(model => model.MiddleName, new { @class = "disable_txt float_left first_name_wrap hide", readOnly = "true" })
            </div>
            <div class="error_align_left">
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>
    </div>

    <div class="row">
        <div>
            <label class="row_label_txt">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.CurrencyType)
            </label>
            @Html.DropDownListFor(model => model.CurrencyType, Model.ReceiveCurrencies, new { @class = "dropdown_box" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.CurrencyType)
        </div>
    </div>
    <div class="row">
        <div>
            <label class="row_label_txt">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyDeliveryOptions)
            </label>
            @Html.DropDownListFor(model => model.DeliveryMethod, Model.LDeliveryMethods, new { @class = "dropdown_box" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.DeliveryMethod)
        </div>
    </div>
    <div class="row">
        <div>
            <label class="row_label_txt">
                @Html.LabelFor(model => model.ReceiveAgent, @TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.ReceiveAgent)
            </label>
            @Html.DropDownListFor(model => model.ReceiveAgent, Model.ReceiveAgents, new { @class = "dropdown_box" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.ReceiveAgent)
        </div>
    </div>
    <div class="row hide" id="transamt">
        <div>
            <label class="row_label_txt">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyTransferAmount)
            </label>
            @Html.TextBoxFor(model => model.TransferAmount, null, new { @class = "input_box", @maxlength = 15 })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.TransferAmount)
        </div>
    </div>
    <div class="row" id="transamtwithSymbols">
        <div>
            <label class="row_label_txt">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyTransferAmount)
            </label>
            @Html.TextBoxFor(model => model.TransferAmountWithCurrency, null, new { @class = "input_box", @maxlength = 15 })
        </div>
        <div class="error_align_left" id="dvAmountError">
            @Html.ValidationMessageFor(model => model.TransferAmount)
        </div>
    </div>
    
    <div class="row clear_both">
        <div>
            @Html.LabelFor(model => model.TransferFeeWithAllFees, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.TransferFeeWithCurrency, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.TransferFee)
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.CouponPromoCode, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.CouponPromoCode, null, new { @class = "input_box", MaxLength = 20 })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.CouponPromoCode)
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.PromoDiscount, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.PromoDiscountWithCurrency, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.PromoDiscount)
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.TransferTax, new { @class = "row_label_txt" })
            @Html.TextBoxFor(model => model.TransferTaxWithCurrency, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.TransferTax)
        </div>
    </div>
    <div class="row">
        <div>
            <label class="row_label_txt">@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyTotalAmount</label>
            @Html.TextBoxFor(model => model.AmountWithCurrency, null, new { @class = "disable_txt", readOnly = "true" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.Amount)
        </div>
    </div>

    <div class="row">
        <div>
            @Html.LabelFor(model => model.ExchangeRateConversion, new { @class = "row_label_txt amount" })
            <label class="row_label_txt estimated_amount hide">@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyEstimatedExchangeRate</label>
            @Html.TextBoxFor(model => model.ExchangeRateConversion, new { @class = "disable_txt", readOnly = "true" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.ExchangeRateConversion)
        </div>
    </div>
   
    <div class="row hide" id="destAmount">
        <div>
            <label class="row_label_txt amount">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyDestinationAmount)
            </label>
            <label class="row_label_txt estimated_amount hide">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyEstimatedDestinationAmount)
            </label>
            @Html.TextBoxFor(model => model.DestinationAmount, null, new { @class = "input_box", @maxlength = 15 })
        </div>
        <div class="error_align_left" id="dvDestAmountError">
            @Html.ValidationMessageFor(model => model.DestinationAmount)
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.OtherFees, new { @class = "row_label_txt fee_amount" })
            <label class="row_label_txt estimated_fees hide">@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyEstimatedOtherFee</label>
            @Html.TextBoxFor(model => model.OtherFees, new { @class = "disable_txt", readOnly = "true" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.OtherFees)
        </div>
    </div>
    <div class="row">
        <div>
            @Html.LabelFor(model => model.OtherTaxes, new { @class = "row_label_txt tax_amount" })
            <label class="row_label_txt estimated_tax hide">@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyEstimatedOtherTax</label>
            @Html.TextBoxFor(model => model.OtherTaxes, new { @class = "disable_txt", readOnly = "true" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.OtherTaxes)
        </div>
    </div>
    <div class="row" id="destAmountSymbols">
        <div>
            <label class="row_label_txt dest_amount">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyTotalToRecipient)
            </label>
            <label class="row_label_txt estimated_destamount hide">
                @Html.RequiredField(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyEstimatedTotalToRecipient)
            </label>
            @Html.TextBoxFor(model => model.DestinationAmountWithCurrency1, null, new { @class = "input_box" })
        </div>
        <div class="error_align_left" id="dvDestinationAmountError">
            @Html.ValidationMessageFor(model => model.DestinationAmount)
        </div>
    </div>
    
    @*<div class="row">
        <div>
            <label class="row_label_txt">
                @Html.Raw(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyPersonalMessageTCF)
            </label>
            @Html.TextAreaFor(model => model.PersonalMessage, 4, 69, new { @class = "textarea", @maxlength = "80", placeholder = "Max. 80 characters" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.PersonalMessage)
        </div>
    </div>*@
    
    <div class="row">
        <div>
            <label class="row_label_txt">
                @Html.Label(@TCF.Channel.Zeo.Web.App_GlobalResources.Nexxo.SendMoneyPersonalMessageTCF, new { @class = "row_label_txt", style = "width: 160.9px;" })
            </label>
            @Html.TextAreaFor(model => model.PersonalMessage, 4, 69, new { @class = "textarea", @maxlength = "80", placeholder = "Max. 80 characters" })
        </div>
        <div class="error_align_left">
            @Html.ValidationMessageFor(model => model.PersonalMessage)
        </div>
    </div>
    
    <div class="line_Sep">
    </div>
    <div class="row" id="divDynamicControl">
    </div>
    <div class="send_many_btn_shift">
        <ul>
            <li class="add_rec_btn_wrap">
                <input type="submit" id="btnUpdate" value="Update Trans" name="updateTrans" class="send_money_search_btn" />
            </li>
            <li class="row_width30">
				@Html.ActionLink("Cancel", "CancelSendMoneyDetails", "MoneyGramMoneyTransfer", new { id = Model.TransactionId }, new { @class = "anc_link_btn cancelMoneyTransfer red_btn", id = Model.TransactionId, name = "SendMoneyDetails" })
            </li>
            <li class="next_btn_wrap">
                <input type="hidden" id="PanelStatus" value="1" />
                <input type="submit" id="btnSubmit" value="Next" name="next" />
            </li>
        </ul>
    </div>

    @Html.TextBoxFor(model => model.ReceiverID, new { style = "display:none" })
    @Html.TextBoxFor(model => model.TransactionId, new { style = "display:none" })
    @Html.TextBoxFor(model => model.ExchangeRate, new { style = "display:none" })
    @Html.TextBoxFor(model => model.CurrencyType, new { style = "display:none" })
    @Html.TextBoxFor(model => model.IsDomesticTransfer, new { style = "display:none" })
    @Html.TextBoxFor(model => model.Amount, new { style = "display:none" })
    @Html.TextBoxFor(model => model.TransferFee, new { style = "display:none" })
    @Html.TextBoxFor(model => model.PromoDiscount, new { style = "display:none" })
    @Html.TextBoxFor(model => model.Country, new { style = "display:none" })
    @Html.TextBoxFor(model => model.StateProvince, new { style = "display:none" })
    @Html.TextBoxFor(model => model.DestinationAmountWithCurrency, new { style = "display:none" })
    @Html.TextBoxFor(model => model.CountryCode, new { style = "display:none" })
    @Html.TextBoxFor(model => model.StateProvinceCode, new { style = "display:none" })
    @Html.TextBoxFor(model => model.DestinationAmountFromFeeEnquiry, new { style = "display:none" })
    @Html.TextBoxFor(model => model.CouponPromoCode, new { style = "display:none" })
    @Html.TextBoxFor(model => model.PromoCode, new { style = "display:none" })
    @Html.TextBoxFor(model => model.OriginalFee, new { style = "display:none" })
    @Html.TextBoxFor(model => model.PickupCountry, new { style = "display:none" })
    @Html.TextBoxFor(model => model.PickupState, new { style = "display:none" })
    @Html.TextBoxFor(model => model.ReferenceNo, new { style = "display:none" })
    @Html.TextBoxFor(model => model.IsReceiveAmount, new { style = "display:none" })
    @Html.TextBoxFor(model => model.ReceiveAgentAbbreviation, new { style = "display:none" })
}
