<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:user="http://api.tsysprepaid.com/user" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://api.tsysprepaid.com/user/wsdl" xmlns:type="http://api.tsysprepaid.com/user/type" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" targetNamespace="http://api.tsysprepaid.com/user/wsdl" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xsd:schema targetNamespace="http://api.tsysprepaid.com/user/type">
      <xsd:import schemaLocation="https://uat-api-4.tsysprepaid.com/api/user?xsd=user.xsd" namespace="http://api.tsysprepaid.com/user" />
      <xsd:element name="createUser" type="user:createUserRequest" />
      <xsd:element name="createUserResponse" type="user:createUserResponse" />
      <xsd:element name="createUserAccountCardFunded" type="user:createUserAccountCardFundedRequest" />
      <xsd:element name="createUserAccountCardFundedResponse" type="user:createUserAccountCardFundedResponse" />
      <xsd:element name="createUserAccountCard" type="user:createUserAccountCardRequest" />
      <xsd:element name="createUserAccountCardResponse" type="user:createUserAccountCardResponse" />
      <xsd:element name="verifyCIP" type="user:verifyCIPRequest" />
      <xsd:element name="verifyCIPResponse" type="user:verifyCIPResponse" />
      <xsd:element name="verifyOFAC" type="user:verifyOFACRequest" />
      <xsd:element name="verifyOFACResponse" type="user:verifyOFACResponse" />
      <xsd:element name="validateCIPAnswers" type="user:validateCIPAnswersRequest" />
      <xsd:element name="validateCIPAnswersResponse" type="user:validateCIPAnswersResponse" />
      <xsd:element name="getUser" type="user:getUserRequest" />
      <xsd:element name="getUserResponse" type="user:getUserResponse" />
      <xsd:element name="getUserByExternalKey" type="user:getUserByExternalKeyRequest" />
      <xsd:element name="getUserByExternalKeyResponse" type="user:getUserByExternalKeyResponse" />
      <xsd:element name="updateUser" type="user:updateUserRequest" />
      <xsd:element name="updateUserResponse" type="user:updateUserResponse" />
      <xsd:element name="closeUser" type="user:closeUserRequest" />
      <xsd:element name="closeUserResponse" type="user:closeUserResponse" />
      <xsd:element name="getPhones" type="user:getPhonesRequest" />
      <xsd:element name="getPhonesResponse" type="user:getPhonesResponse" />
      <xsd:element name="updatePhones" type="user:updatePhonesRequest" />
      <xsd:element name="updatePhonesResponse" type="user:updatePhonesResponse" />
      <xsd:element name="getAddresses" type="user:getAddressesRequest" />
      <xsd:element name="getAddressesResponse" type="user:getAddressesResponse" />
      <xsd:element name="updateAddresses" type="user:updateAddressesRequest" />
      <xsd:element name="updateAddressesResponse" type="user:updateAddressesResponse" />
      <xsd:element name="getGroups" type="user:getGroupsRequest" />
      <xsd:element name="getGroupsResponse" type="user:getGroupsResponse" />
      <xsd:element name="updateGroups" type="user:updateGroupsRequest" />
      <xsd:element name="updateGroupsResponse" type="user:updateGroupsResponse" />
      <xsd:element name="getEmails" type="user:getEmailsRequest" />
      <xsd:element name="getEmailsResponse" type="user:getEmailsResponse" />
      <xsd:element name="updateEmails" type="user:updateEmailsRequest" />
      <xsd:element name="updateEmailsResponse" type="user:updateEmailsResponse" />
      <xsd:element name="getIdentification" type="user:getIdentificationRequest" />
      <xsd:element name="getIdentificationResponse" type="user:getIdentificationResponse" />
      <xsd:element name="updateIdentification" type="user:updateIdentificationRequest" />
      <xsd:element name="updateIdentificationResponse" type="user:updateIdentificationResponse" />
      <xsd:element name="getUserUpdates" type="user:getUserUpdatesRequest" />
      <xsd:element name="getUserUpdatesResponse" type="user:getUserUpdatesResponse" />
      <xsd:element name="getUserUpdatesForProgram" type="user:getUserUpdatesForProgramRequest" />
      <xsd:element name="getUserUpdatesForProgramResponse" type="user:getUserUpdatesForProgramResponse" />
      <xsd:element name="getUserPhoneUpdates" type="user:getUserPhoneUpdatesRequest" />
      <xsd:element name="getUserPhoneUpdatesResponse" type="user:getUserPhoneUpdatesResponse" />
      <xsd:element name="getUserPhoneUpdatesForProgram" type="user:getUserPhoneUpdatesForProgramRequest" />
      <xsd:element name="getUserPhoneUpdatesForProgramResponse" type="user:getUserPhoneUpdatesForProgramResponse" />
      <xsd:element name="getUserAddressUpdates" type="user:getUserAddressUpdatesRequest" />
      <xsd:element name="getUserAddressUpdatesResponse" type="user:getUserAddressUpdatesResponse" />
      <xsd:element name="getUserAddressUpdatesForProgram" type="user:getUserAddressUpdatesForProgramRequest" />
      <xsd:element name="getUserAddressUpdatesForProgramResponse" type="user:getUserAddressUpdatesForProgramResponse" />
      <xsd:element name="getUserEmailUpdates" type="user:getUserEmailUpdatesRequest" />
      <xsd:element name="getUserEmailUpdatesResponse" type="user:getUserEmailUpdatesResponse" />
      <xsd:element name="getUserEmailUpdatesForProgram" type="user:getUserEmailUpdatesForProgramRequest" />
      <xsd:element name="getUserEmailUpdatesForProgramResponse" type="user:getUserEmailUpdatesForProgramResponse" />
      <xsd:element name="getUserIdentificationUpdates" type="user:getUserIdentificationUpdatesRequest" />
      <xsd:element name="getUserIdentificationUpdatesResponse" type="user:getUserIdentificationUpdatesResponse" />
      <xsd:element name="getUserIdentificationUpdatesForProgram" type="user:getUserIdentificationUpdatesForProgramRequest" />
      <xsd:element name="getUserIdentificationUpdatesForProgramResponse" type="user:getUserIdentificationUpdatesForProgramResponse" />
      <xsd:element name="deleteUserProfileData" type="user:deleteUserProfileDataRequest" />
      <xsd:element name="deleteUserProfileDataResponse" type="user:deleteUserProfileDataResponse" />
      <xsd:element name="createAuthorizedUser" type="user:createAuthorizedUserRequest" />
      <xsd:element name="createAuthorizedUserResponse" type="user:createAuthorizedUserResponse" />
      <xsd:element name="getAccountUsers" type="user:getAccountUsersRequest" />
      <xsd:element name="getAccountUsersResponse" type="user:getAccountUsersResponse" />
      <xsd:element name="createUserException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:createUserError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createUserAccountCardFundedException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:createUserAccountCardFundedError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createUserAccountCardException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:createUserAccountCardError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="verifyCIPException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:verifyCIPError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="validateCIPAnswersException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:validateCIPAnswersError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="verifyOFACException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:verifyOFACError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserByExternalKeyException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserByExternalKeyError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateUserException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:updateUserError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="closeUserException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:closeUserError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPhonesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getPhonesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updatePhonesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:updatePhonesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getAddressesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getAddressesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateAddressesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:updateAddressesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getGroupsException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getGroupsError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateGroupsException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:updateGroupsError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getEmailsException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getEmailsError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateEmailsException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:updateEmailsError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getIdentificationException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getIdentificationError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateIdentificationException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:updateIdentificationError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserUpdatesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserUpdatesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserUpdatesForProgramException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserUpdatesForProgramError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserPhoneUpdatesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserPhoneUpdatesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserPhoneUpdatesForProgramException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserPhoneUpdatesForProgramError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserAddressUpdatesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserAddressUpdatesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserAddressUpdatesForProgramException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserAddressUpdatesForProgramError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserEmailUpdatesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserEmailUpdatesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserEmailUpdatesForProgramException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserEmailUpdatesForProgramError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserIdentificationUpdatesException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserIdentificationUpdatesError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getUserIdentificationUpdatesForProgramException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getUserIdentificationUpdatesForProgramError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteUserProfileDataException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:deleteUserProfileDataError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createAuthorizedUserException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:createAuthorizedUserError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getAccountUsersException">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="error" type="user:getAccountUsersError" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </types>
  <message name="validateCIPAnswersResponse">
    <part name="parameters" element="type:validateCIPAnswersResponse" />
  </message>
  <message name="updateEmailsResponse">
    <part name="parameters" element="type:updateEmailsResponse" />
  </message>
  <message name="getUserPhoneUpdatesForProgramResponse">
    <part name="parameters" element="type:getUserPhoneUpdatesForProgramResponse" />
  </message>
  <message name="getUserEmailUpdatesException">
    <part name="error" element="type:getUserEmailUpdatesException" />
  </message>
  <message name="getAddressesResponse">
    <part name="parameters" element="type:getAddressesResponse" />
  </message>
  <message name="getEmails">
    <part name="parameters" element="type:getEmails" />
  </message>
  <message name="getUserPhoneUpdates">
    <part name="parameters" element="type:getUserPhoneUpdates" />
  </message>
  <message name="updateEmailsException">
    <part name="error" element="type:updateEmailsException" />
  </message>
  <message name="getUserUpdatesForProgram">
    <part name="parameters" element="type:getUserUpdatesForProgram" />
  </message>
  <message name="createAuthorizedUser">
    <part name="parameters" element="type:createAuthorizedUser" />
  </message>
  <message name="getUserAddressUpdatesForProgram">
    <part name="parameters" element="type:getUserAddressUpdatesForProgram" />
  </message>
  <message name="updateGroupsException">
    <part name="error" element="type:updateGroupsException" />
  </message>
  <message name="updateGroupsResponse">
    <part name="parameters" element="type:updateGroupsResponse" />
  </message>
  <message name="getUserResponse">
    <part name="parameters" element="type:getUserResponse" />
  </message>
  <message name="updateUserException">
    <part name="error" element="type:updateUserException" />
  </message>
  <message name="validateCIPAnswers">
    <part name="parameters" element="type:validateCIPAnswers" />
  </message>
  <message name="getIdentificationException">
    <part name="error" element="type:getIdentificationException" />
  </message>
  <message name="updatePhones">
    <part name="parameters" element="type:updatePhones" />
  </message>
  <message name="createUserAccountCardFundedException">
    <part name="error" element="type:createUserAccountCardFundedException" />
  </message>
  <message name="updateIdentificationException">
    <part name="error" element="type:updateIdentificationException" />
  </message>
  <message name="getPhonesResponse">
    <part name="parameters" element="type:getPhonesResponse" />
  </message>
  <message name="getUserEmailUpdates">
    <part name="parameters" element="type:getUserEmailUpdates" />
  </message>
  <message name="getUserIdentificationUpdatesForProgram">
    <part name="parameters" element="type:getUserIdentificationUpdatesForProgram" />
  </message>
  <message name="getUserUpdatesForProgramResponse">
    <part name="parameters" element="type:getUserUpdatesForProgramResponse" />
  </message>
  <message name="getUserPhoneUpdatesResponse">
    <part name="parameters" element="type:getUserPhoneUpdatesResponse" />
  </message>
  <message name="getUserIdentificationUpdates">
    <part name="parameters" element="type:getUserIdentificationUpdates" />
  </message>
  <message name="getAddressesException">
    <part name="error" element="type:getAddressesException" />
  </message>
  <message name="verifyOFACException">
    <part name="error" element="type:verifyOFACException" />
  </message>
  <message name="verifyOFACResponse">
    <part name="parameters" element="type:verifyOFACResponse" />
  </message>
  <message name="getAccountUsersException">
    <part name="error" element="type:getAccountUsersException" />
  </message>
  <message name="getUserPhoneUpdatesException">
    <part name="error" element="type:getUserPhoneUpdatesException" />
  </message>
  <message name="deleteUserProfileDataException">
    <part name="error" element="type:deleteUserProfileDataException" />
  </message>
  <message name="getUserUpdatesForProgramException">
    <part name="error" element="type:getUserUpdatesForProgramException" />
  </message>
  <message name="getGroups">
    <part name="parameters" element="type:getGroups" />
  </message>
  <message name="updateAddressesException">
    <part name="error" element="type:updateAddressesException" />
  </message>
  <message name="getGroupsResponse">
    <part name="parameters" element="type:getGroupsResponse" />
  </message>
  <message name="updateUser">
    <part name="parameters" element="type:updateUser" />
  </message>
  <message name="getIdentificationResponse">
    <part name="parameters" element="type:getIdentificationResponse" />
  </message>
  <message name="getUserByExternalKeyResponse">
    <part name="parameters" element="type:getUserByExternalKeyResponse" />
  </message>
  <message name="updateAddresses">
    <part name="parameters" element="type:updateAddresses" />
  </message>
  <message name="getUserEmailUpdatesResponse">
    <part name="parameters" element="type:getUserEmailUpdatesResponse" />
  </message>
  <message name="updateIdentification">
    <part name="parameters" element="type:updateIdentification" />
  </message>
  <message name="getUserAddressUpdates">
    <part name="parameters" element="type:getUserAddressUpdates" />
  </message>
  <message name="updateIdentificationResponse">
    <part name="parameters" element="type:updateIdentificationResponse" />
  </message>
  <message name="getGroupsException">
    <part name="error" element="type:getGroupsException" />
  </message>
  <message name="getEmailsException">
    <part name="error" element="type:getEmailsException" />
  </message>
  <message name="updateEmails">
    <part name="parameters" element="type:updateEmails" />
  </message>
  <message name="getUserIdentificationUpdatesForProgramResponse">
    <part name="parameters" element="type:getUserIdentificationUpdatesForProgramResponse" />
  </message>
  <message name="getUserUpdatesException">
    <part name="error" element="type:getUserUpdatesException" />
  </message>
  <message name="updatePhonesResponse">
    <part name="parameters" element="type:updatePhonesResponse" />
  </message>
  <message name="updateUserResponse">
    <part name="parameters" element="type:updateUserResponse" />
  </message>
  <message name="updateAddressesResponse">
    <part name="parameters" element="type:updateAddressesResponse" />
  </message>
  <message name="getPhones">
    <part name="parameters" element="type:getPhones" />
  </message>
  <message name="getUserIdentificationUpdatesForProgramException">
    <part name="error" element="type:getUserIdentificationUpdatesForProgramException" />
  </message>
  <message name="getEmailsResponse">
    <part name="parameters" element="type:getEmailsResponse" />
  </message>
  <message name="getUserPhoneUpdatesForProgramException">
    <part name="error" element="type:getUserPhoneUpdatesForProgramException" />
  </message>
  <message name="getUser">
    <part name="parameters" element="type:getUser" />
  </message>
  <message name="getUserEmailUpdatesForProgramResponse">
    <part name="parameters" element="type:getUserEmailUpdatesForProgramResponse" />
  </message>
  <message name="getAddresses">
    <part name="parameters" element="type:getAddresses" />
  </message>
  <message name="getPhonesException">
    <part name="error" element="type:getPhonesException" />
  </message>
  <message name="getUserIdentificationUpdatesResponse">
    <part name="parameters" element="type:getUserIdentificationUpdatesResponse" />
  </message>
  <message name="getUserAddressUpdatesForProgramException">
    <part name="error" element="type:getUserAddressUpdatesForProgramException" />
  </message>
  <message name="closeUserResponse">
    <part name="parameters" element="type:closeUserResponse" />
  </message>
  <message name="getAccountUsers">
    <part name="parameters" element="type:getAccountUsers" />
  </message>
  <message name="getUserException">
    <part name="error" element="type:getUserException" />
  </message>
  <message name="getUserByExternalKey">
    <part name="parameters" element="type:getUserByExternalKey" />
  </message>
  <message name="getUserIdentificationUpdatesException">
    <part name="error" element="type:getUserIdentificationUpdatesException" />
  </message>
  <message name="getIdentification">
    <part name="parameters" element="type:getIdentification" />
  </message>
  <message name="createAuthorizedUserResponse">
    <part name="parameters" element="type:createAuthorizedUserResponse" />
  </message>
  <message name="getAccountUsersResponse">
    <part name="parameters" element="type:getAccountUsersResponse" />
  </message>
  <message name="closeUser">
    <part name="parameters" element="type:closeUser" />
  </message>
  <message name="createUserAccountCardFundedResponse">
    <part name="parameters" element="type:createUserAccountCardFundedResponse" />
  </message>
  <message name="getUserUpdates">
    <part name="parameters" element="type:getUserUpdates" />
  </message>
  <message name="getUserPhoneUpdatesForProgram">
    <part name="parameters" element="type:getUserPhoneUpdatesForProgram" />
  </message>
  <message name="validateCIPAnswersException">
    <part name="error" element="type:validateCIPAnswersException" />
  </message>
  <message name="deleteUserProfileDataResponse">
    <part name="parameters" element="type:deleteUserProfileDataResponse" />
  </message>
  <message name="getUserUpdatesResponse">
    <part name="parameters" element="type:getUserUpdatesResponse" />
  </message>
  <message name="updateGroups">
    <part name="parameters" element="type:updateGroups" />
  </message>
  <message name="updatePhonesException">
    <part name="error" element="type:updatePhonesException" />
  </message>
  <message name="getUserAddressUpdatesForProgramResponse">
    <part name="parameters" element="type:getUserAddressUpdatesForProgramResponse" />
  </message>
  <message name="getUserEmailUpdatesForProgram">
    <part name="parameters" element="type:getUserEmailUpdatesForProgram" />
  </message>
  <message name="verifyCIPResponse">
    <part name="parameters" element="type:verifyCIPResponse" />
  </message>
  <message name="createUserResponse">
    <part name="parameters" element="type:createUserResponse" />
  </message>
  <message name="createUserAccountCardFunded">
    <part name="parameters" element="type:createUserAccountCardFunded" />
  </message>
  <message name="verifyCIP">
    <part name="parameters" element="type:verifyCIP" />
  </message>
  <message name="createUserException">
    <part name="error" element="type:createUserException" />
  </message>
  <message name="closeUserException">
    <part name="error" element="type:closeUserException" />
  </message>
  <message name="createUserAccountCardResponse">
    <part name="parameters" element="type:createUserAccountCardResponse" />
  </message>
  <message name="verifyOFAC">
    <part name="parameters" element="type:verifyOFAC" />
  </message>
  <message name="getUserByExternalKeyException">
    <part name="error" element="type:getUserByExternalKeyException" />
  </message>
  <message name="createUser">
    <part name="parameters" element="type:createUser" />
  </message>
  <message name="verifyCIPException">
    <part name="error" element="type:verifyCIPException" />
  </message>
  <message name="getUserAddressUpdatesResponse">
    <part name="parameters" element="type:getUserAddressUpdatesResponse" />
  </message>
  <message name="createAuthorizedUserException">
    <part name="error" element="type:createAuthorizedUserException" />
  </message>
  <message name="getUserEmailUpdatesForProgramException">
    <part name="error" element="type:getUserEmailUpdatesForProgramException" />
  </message>
  <message name="createUserAccountCardException">
    <part name="error" element="type:createUserAccountCardException" />
  </message>
  <message name="deleteUserProfileData">
    <part name="parameters" element="type:deleteUserProfileData" />
  </message>
  <message name="getUserAddressUpdatesException">
    <part name="error" element="type:getUserAddressUpdatesException" />
  </message>
  <message name="createUserAccountCard">
    <part name="parameters" element="type:createUserAccountCard" />
  </message>
  <portType name="userService">
    <operation name="createUser">
      <input message="tns:createUser" />
      <output message="tns:createUserResponse" />
      <fault name="createUserException" message="tns:createUserException" />
    </operation>
    <operation name="createUserAccountCardFunded">
      <input message="tns:createUserAccountCardFunded" />
      <output message="tns:createUserAccountCardFundedResponse" />
      <fault name="createUserAccountCardFundedException" message="tns:createUserAccountCardFundedException" />
    </operation>
    <operation name="createUserAccountCard">
      <input message="tns:createUserAccountCard" />
      <output message="tns:createUserAccountCardResponse" />
      <fault name="createUserAccountCardException" message="tns:createUserAccountCardException" />
    </operation>
    <operation name="verifyCIP">
      <input message="tns:verifyCIP" />
      <output message="tns:verifyCIPResponse" />
      <fault name="verifyCIPException" message="tns:verifyCIPException" />
    </operation>
    <operation name="verifyOFAC">
      <input message="tns:verifyOFAC" />
      <output message="tns:verifyOFACResponse" />
      <fault name="verifyOFACException" message="tns:verifyOFACException" />
    </operation>
    <operation name="validateCIPAnswers">
      <input message="tns:validateCIPAnswers" />
      <output message="tns:validateCIPAnswersResponse" />
      <fault name="validateCIPAnswersException" message="tns:validateCIPAnswersException" />
    </operation>
    <operation name="getUser">
      <input message="tns:getUser" />
      <output message="tns:getUserResponse" />
      <fault name="getUserException" message="tns:getUserException" />
    </operation>
    <operation name="getUserByExternalKey">
      <input message="tns:getUserByExternalKey" />
      <output message="tns:getUserByExternalKeyResponse" />
      <fault name="getUserByExternalKeyException" message="tns:getUserByExternalKeyException" />
    </operation>
    <operation name="updateUser">
      <input message="tns:updateUser" />
      <output message="tns:updateUserResponse" />
      <fault name="updateUserException" message="tns:updateUserException" />
    </operation>
    <operation name="closeUser">
      <input message="tns:closeUser" />
      <output message="tns:closeUserResponse" />
      <fault name="closeUserException" message="tns:closeUserException" />
    </operation>
    <operation name="getPhones">
      <input message="tns:getPhones" />
      <output message="tns:getPhonesResponse" />
      <fault name="getPhonesException" message="tns:getPhonesException" />
    </operation>
    <operation name="updatePhones">
      <input message="tns:updatePhones" />
      <output message="tns:updatePhonesResponse" />
      <fault name="updatePhonesException" message="tns:updatePhonesException" />
    </operation>
    <operation name="getAddresses">
      <input message="tns:getAddresses" />
      <output message="tns:getAddressesResponse" />
      <fault name="getAddressesException" message="tns:getAddressesException" />
    </operation>
    <operation name="updateAddresses">
      <input message="tns:updateAddresses" />
      <output message="tns:updateAddressesResponse" />
      <fault name="updateAddressesException" message="tns:updateAddressesException" />
    </operation>
    <operation name="getGroups">
      <input message="tns:getGroups" />
      <output message="tns:getGroupsResponse" />
      <fault name="getGroupsException" message="tns:getGroupsException" />
    </operation>
    <operation name="updateGroups">
      <input message="tns:updateGroups" />
      <output message="tns:updateGroupsResponse" />
      <fault name="updateGroupsException" message="tns:updateGroupsException" />
    </operation>
    <operation name="getEmails">
      <input message="tns:getEmails" />
      <output message="tns:getEmailsResponse" />
      <fault name="getEmailsException" message="tns:getEmailsException" />
    </operation>
    <operation name="updateEmails">
      <input message="tns:updateEmails" />
      <output message="tns:updateEmailsResponse" />
      <fault name="updateEmailsException" message="tns:updateEmailsException" />
    </operation>
    <operation name="getIdentification">
      <input message="tns:getIdentification" />
      <output message="tns:getIdentificationResponse" />
      <fault name="getIdentificationException" message="tns:getIdentificationException" />
    </operation>
    <operation name="updateIdentification">
      <input message="tns:updateIdentification" />
      <output message="tns:updateIdentificationResponse" />
      <fault name="updateIdentificationException" message="tns:updateIdentificationException" />
    </operation>
    <operation name="getUserUpdates">
      <input message="tns:getUserUpdates" />
      <output message="tns:getUserUpdatesResponse" />
      <fault name="getUserUpdatesException" message="tns:getUserUpdatesException" />
    </operation>
    <operation name="getUserUpdatesForProgram">
      <input message="tns:getUserUpdatesForProgram" />
      <output message="tns:getUserUpdatesForProgramResponse" />
      <fault name="getUserUpdatesForProgramException" message="tns:getUserUpdatesForProgramException" />
    </operation>
    <operation name="getUserPhoneUpdates">
      <input message="tns:getUserPhoneUpdates" />
      <output message="tns:getUserPhoneUpdatesResponse" />
      <fault name="getUserPhoneUpdatesException" message="tns:getUserPhoneUpdatesException" />
    </operation>
    <operation name="getUserPhoneUpdatesForProgram">
      <input message="tns:getUserPhoneUpdatesForProgram" />
      <output message="tns:getUserPhoneUpdatesForProgramResponse" />
      <fault name="getUserPhoneUpdatesForProgramException" message="tns:getUserPhoneUpdatesForProgramException" />
    </operation>
    <operation name="getUserAddressUpdates">
      <input message="tns:getUserAddressUpdates" />
      <output message="tns:getUserAddressUpdatesResponse" />
      <fault name="getUserAddressUpdatesException" message="tns:getUserAddressUpdatesException" />
    </operation>
    <operation name="getUserAddressUpdatesForProgram">
      <input message="tns:getUserAddressUpdatesForProgram" />
      <output message="tns:getUserAddressUpdatesForProgramResponse" />
      <fault name="getUserAddressUpdatesForProgramException" message="tns:getUserAddressUpdatesForProgramException" />
    </operation>
    <operation name="getUserEmailUpdates">
      <input message="tns:getUserEmailUpdates" />
      <output message="tns:getUserEmailUpdatesResponse" />
      <fault name="getUserEmailUpdatesException" message="tns:getUserEmailUpdatesException" />
    </operation>
    <operation name="getUserEmailUpdatesForProgram">
      <input message="tns:getUserEmailUpdatesForProgram" />
      <output message="tns:getUserEmailUpdatesForProgramResponse" />
      <fault name="getUserEmailUpdatesForProgramException" message="tns:getUserEmailUpdatesForProgramException" />
    </operation>
    <operation name="getUserIdentificationUpdates">
      <input message="tns:getUserIdentificationUpdates" />
      <output message="tns:getUserIdentificationUpdatesResponse" />
      <fault name="getUserIdentificationUpdatesException" message="tns:getUserIdentificationUpdatesException" />
    </operation>
    <operation name="getUserIdentificationUpdatesForProgram">
      <input message="tns:getUserIdentificationUpdatesForProgram" />
      <output message="tns:getUserIdentificationUpdatesForProgramResponse" />
      <fault name="getUserIdentificationUpdatesForProgramException" message="tns:getUserIdentificationUpdatesForProgramException" />
    </operation>
    <operation name="deleteUserProfileData">
      <input message="tns:deleteUserProfileData" />
      <output message="tns:deleteUserProfileDataResponse" />
      <fault name="deleteUserProfileDataException" message="tns:deleteUserProfileDataException" />
    </operation>
    <operation name="createAuthorizedUser">
      <input message="tns:createAuthorizedUser" />
      <output message="tns:createAuthorizedUserResponse" />
      <fault name="createAuthorizedUserException" message="tns:createAuthorizedUserException" />
    </operation>
    <operation name="getAccountUsers">
      <input message="tns:getAccountUsers" />
      <output message="tns:getAccountUsersResponse" />
      <fault name="getAccountUsersException" message="tns:getAccountUsersException" />
    </operation>
  </portType>
  <binding name="userService" type="tns:userService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="createUser">
      <soap:operation soapAction="urn:#createUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="createUserException">
        <soap:fault use="literal" name="createUserException" namespace="" />
      </fault>
    </operation>
    <operation name="createUserAccountCardFunded">
      <soap:operation soapAction="urn:#createUserAccountCardFunded" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="createUserAccountCardFundedException">
        <soap:fault use="literal" name="createUserAccountCardFundedException" namespace="" />
      </fault>
    </operation>
    <operation name="createUserAccountCard">
      <soap:operation soapAction="urn:#createUserAccountCard" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="createUserAccountCardException">
        <soap:fault use="literal" name="createUserAccountCardException" namespace="" />
      </fault>
    </operation>
    <operation name="verifyCIP">
      <soap:operation soapAction="urn:#verifyCIP" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="verifyCIPException">
        <soap:fault use="literal" name="verifyCIPException" namespace="" />
      </fault>
    </operation>
    <operation name="verifyOFAC">
      <soap:operation soapAction="urn:#verifyOFAC" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="verifyOFACException">
        <soap:fault use="literal" name="verifyOFACException" namespace="" />
      </fault>
    </operation>
    <operation name="validateCIPAnswers">
      <soap:operation soapAction="urn:#validateCIPAnswers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="validateCIPAnswersException">
        <soap:fault use="literal" name="validateCIPAnswersException" namespace="" />
      </fault>
    </operation>
    <operation name="getUser">
      <soap:operation soapAction="urn:#getUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserException">
        <soap:fault use="literal" name="getUserException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserByExternalKey">
      <soap:operation soapAction="urn:#getUserByExternalKey" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserByExternalKeyException">
        <soap:fault use="literal" name="getUserByExternalKeyException" namespace="" />
      </fault>
    </operation>
    <operation name="updateUser">
      <soap:operation soapAction="urn:#updateUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="updateUserException">
        <soap:fault use="literal" name="updateUserException" namespace="" />
      </fault>
    </operation>
    <operation name="closeUser">
      <soap:operation soapAction="urn:#closeUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="closeUserException">
        <soap:fault use="literal" name="closeUserException" namespace="" />
      </fault>
    </operation>
    <operation name="getPhones">
      <soap:operation soapAction="urn:#getPhones" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getPhonesException">
        <soap:fault use="literal" name="getPhonesException" namespace="" />
      </fault>
    </operation>
    <operation name="updatePhones">
      <soap:operation soapAction="urn:#updatePhones" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="updatePhonesException">
        <soap:fault use="literal" name="updatePhonesException" namespace="" />
      </fault>
    </operation>
    <operation name="getAddresses">
      <soap:operation soapAction="urn:#getAddresses" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getAddressesException">
        <soap:fault use="literal" name="getAddressesException" namespace="" />
      </fault>
    </operation>
    <operation name="updateAddresses">
      <soap:operation soapAction="urn:#updateAddresses" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="updateAddressesException">
        <soap:fault use="literal" name="updateAddressesException" namespace="" />
      </fault>
    </operation>
    <operation name="getGroups">
      <soap:operation soapAction="urn:#getGroups" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getGroupsException">
        <soap:fault use="literal" name="getGroupsException" namespace="" />
      </fault>
    </operation>
    <operation name="updateGroups">
      <soap:operation soapAction="urn:#updateGroups" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="updateGroupsException">
        <soap:fault use="literal" name="updateGroupsException" namespace="" />
      </fault>
    </operation>
    <operation name="getEmails">
      <soap:operation soapAction="urn:#getEmails" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getEmailsException">
        <soap:fault use="literal" name="getEmailsException" namespace="" />
      </fault>
    </operation>
    <operation name="updateEmails">
      <soap:operation soapAction="urn:#updateEmails" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="updateEmailsException">
        <soap:fault use="literal" name="updateEmailsException" namespace="" />
      </fault>
    </operation>
    <operation name="getIdentification">
      <soap:operation soapAction="urn:#getIdentification" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getIdentificationException">
        <soap:fault use="literal" name="getIdentificationException" namespace="" />
      </fault>
    </operation>
    <operation name="updateIdentification">
      <soap:operation soapAction="urn:#updateIdentification" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="updateIdentificationException">
        <soap:fault use="literal" name="updateIdentificationException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserUpdates">
      <soap:operation soapAction="urn:#getUserUpdates" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserUpdatesException">
        <soap:fault use="literal" name="getUserUpdatesException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserUpdatesForProgram">
      <soap:operation soapAction="urn:#getUserUpdatesForProgram" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserUpdatesForProgramException">
        <soap:fault use="literal" name="getUserUpdatesForProgramException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserPhoneUpdates">
      <soap:operation soapAction="urn:#getUserPhoneUpdates" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserPhoneUpdatesException">
        <soap:fault use="literal" name="getUserPhoneUpdatesException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserPhoneUpdatesForProgram">
      <soap:operation soapAction="urn:#getUserPhoneUpdatesForProgram" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserPhoneUpdatesForProgramException">
        <soap:fault use="literal" name="getUserPhoneUpdatesForProgramException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserAddressUpdates">
      <soap:operation soapAction="urn:#getUserAddressUpdates" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserAddressUpdatesException">
        <soap:fault use="literal" name="getUserAddressUpdatesException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserAddressUpdatesForProgram">
      <soap:operation soapAction="urn:#getUserAddressUpdatesForProgram" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserAddressUpdatesForProgramException">
        <soap:fault use="literal" name="getUserAddressUpdatesForProgramException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserEmailUpdates">
      <soap:operation soapAction="urn:#getUserEmailUpdates" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserEmailUpdatesException">
        <soap:fault use="literal" name="getUserEmailUpdatesException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserEmailUpdatesForProgram">
      <soap:operation soapAction="urn:#getUserEmailUpdatesForProgram" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserEmailUpdatesForProgramException">
        <soap:fault use="literal" name="getUserEmailUpdatesForProgramException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserIdentificationUpdates">
      <soap:operation soapAction="urn:#getUserIdentificationUpdates" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserIdentificationUpdatesException">
        <soap:fault use="literal" name="getUserIdentificationUpdatesException" namespace="" />
      </fault>
    </operation>
    <operation name="getUserIdentificationUpdatesForProgram">
      <soap:operation soapAction="urn:#getUserIdentificationUpdatesForProgram" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getUserIdentificationUpdatesForProgramException">
        <soap:fault use="literal" name="getUserIdentificationUpdatesForProgramException" namespace="" />
      </fault>
    </operation>
    <operation name="deleteUserProfileData">
      <soap:operation soapAction="urn:#deleteUserProfileData" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="deleteUserProfileDataException">
        <soap:fault use="literal" name="deleteUserProfileDataException" namespace="" />
      </fault>
    </operation>
    <operation name="createAuthorizedUser">
      <soap:operation soapAction="urn:#createAuthorizedUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="createAuthorizedUserException">
        <soap:fault use="literal" name="createAuthorizedUserException" namespace="" />
      </fault>
    </operation>
    <operation name="getAccountUsers">
      <soap:operation soapAction="urn:#getAccountUsers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
      <fault name="getAccountUsersException">
        <soap:fault use="literal" name="getAccountUsersException" namespace="" />
      </fault>
    </operation>
  </binding>
  <service name="user">
    <port name="userService" binding="tns:userService">
      <soap:address location="https://uat-api-4.tsysprepaid.com/api/user" />
    </port>
  </service>
</definitions>