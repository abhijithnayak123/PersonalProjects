IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_SaveEnfTradeRestriction'
		)
BEGIN
	DROP PROCEDURE USP_EX_SaveEnfTradeRestriction;

	PRINT 'DROPPED USP_EX_SaveEnfTradeRestriction';
END
GO

SET QUOTED_IDENTIFIER ON
GO

/******************************************************************************                          
** New Name:     USP_EX_SaveEnfTradeRestriction                          
** Old Name:     USP_EIS_ENF_TRADE_RESTRICTION_INSUPDPROC                          

** Short Desc: To save the Trade Restriction Details                 
**                          
** Full Description: To save the Trade Restriction Details                 
**                                  
** Input Arguments: NONE        
**             
** Sample Call                          
**  EXEC USP_EIS_ENF_TRADE_RESTRICTION_INSUPDPROC '<TradeRestriction>  
               <Restriction>  
              <TradeRestrictionID>1</TradeRestrictionID>  
              <AccountID>103938</AccountID>  
              <TradeRestrictionType>Client Directed</TradeRestrictionType>  
              <SecuritySymbol>fxecu</SecuritySymbol>  
              <StartDate>10/25/2010</StartDate>  
              <EndDate>07/25/2011</EndDate>  
              <Comments>Reinvest proceeds from bond</Comments>  
              <UserID>300012</UserID>  
              <Mode>Edit</Mode>  
               </Restriction>  
             </TradeRestriction>'       
           
**                 
** Return values: NONE        
**                          
**                          
** Standard declarations                          
**       SET LOCK_TIMEOUT         30000   -- 30 seconds                          
**                           
** Created By: Soorya                   
** Company   : Kaspick & Company                          
** Project   : Excelsior  - Enfuego 3B                          
** Created DT: 10/27/2010                          
**                                      
*******************************************************************************                    
**       Change History                          
*******************************************************************************                    
** Date:        Author:  Bug #     Description:                           Rvwd                    
** --------  -------- ------    -------------------------------------- --------                    
** 08-Apr-14   Abhijith           EXCREQ 7.4   
** 22-May-14   Sanath             Sp name renamed as per Kaspick naming convention standard      
*******************************************************************************                          
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved                          
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION                          
*******************************************************************************/
CREATE PROCEDURE [dbo].USP_EX_SaveEnfTradeRestriction (@TradeRestrictionXML XML)
AS
BEGIN
	--  Variable Declarations  --              
	DECLARE @ProcName VARCHAR(60);
	DECLARE @ErrorMessage VARCHAR(1000);
	DECLARE @ErrorNumber INT;
	-- Variables used for error handling - uncomment if needed              
	DECLARE @val1 VARCHAR(30);
	DECLARE @val2 VARCHAR(30);
	DECLARE @TradeRestrictionTypeID INT;
	DECLARE @Mode VARCHAR(10);

	--  Variable Data Assignment  --              
	SET @ProcName = 'USP_EX_SaveEnfTradeRestriction';

	-- Body of procedure  --              
	BEGIN TRY
		BEGIN TRANSACTION

		SELECT @Mode = XMLDATA.Item.value('Mode[1]', 'VARCHAR(10)')
		FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)

		SELECT @TradeRestrictionTypeID = RestrictionTypeID
		FROM TBL_TR_TradeRestrictionTypeMaster
		WHERE RestrictionType IN (
				SELECT XMLDATA.Item.value('TradeRestrictionType[1]', 'VARCHAR(100)')
				FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
				)

		IF (@Mode = 'New')
		BEGIN
			INSERT INTO TBL_TR_TradeRestriction
			SELECT @TradeRestrictionTypeID AS TradeRestrictionTypeID
				,XMLDATA.Item.value('AccountID[1]', 'VARCHAR(50)') AS AccountID
				,XMLDATA.Item.value('SecuritySymbol[1]', 'VARCHAR(50)') AS SecuritySymbol
				,XMLDATA.Item.value('StartDate[1]', 'DATETIME') AS RestrictionStartDate
				,XMLDATA.Item.value('EndDate[1]', 'DATETIME') AS RestrictionEndDate
				,XMLDATA.Item.value('Comments[1]', 'VARCHAR(500)') AS RestrictionComment
				,XMLDATA.Item.value('UserID[1]', 'INT') AS CreatedUser
				,GETDATE() AS CreateDate
				,XMLDATA.Item.value('UserID[1]', 'INT') AS LastModifiedUser
				,GETDATE() AS LastModifiedDate
				,XMLDATA.Item.value('UserID[1]', 'INT') AS DeletedUser
				,1 AS IsActive
			FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
			
			-------------------------------Begin Insert Audit Log TBL_TR_AUDIT_TradeRestriction ----------------------------------  
			DECLARE @intTradeRestrictionID INT	
			SET @intTradeRestrictionID = SCOPE_IDENTITY()
			
			INSERT INTO TBL_TR_AUDIT_TradeRestriction(
			AuditUserID,AuditDatetime,AuditFlag,AuditTable,AuditDetail,
			TradeRestrictionID,TradeRestrictionTypeID,CustomerAccountNumber,
			SecuritySymbol,RestrictionStartDate,RestrictionEndDate,RestrictionComment,
			CreatedUserID,CreateDate,LastModifiedDate,IsActive
			)
			SELECT 
			CreatedUserID,GETDATE(),'I',
			'TBL_TR_TradeRestriction',' ''LOGIN_NAME->'+ SYSTEM_USER+',SYSTEM_ID->'+HOST_ID()+',HOST_NAME->'+HOST_NAME()+',USER->'+USER,
			@intTradeRestrictionID,TradeRestrictionTypeID,CustomerAccountNumber,
			SecuritySymbol,RestrictionStartDate,RestrictionEndDate,RestrictionComment,
			CreatedUserID,GETDATE(),LastModifiedDate,IsActive
			FROM TBL_TR_TradeRestriction
			WHERE TradeRestrictionID=@intTradeRestrictionID
			-------------------------------End Insert Audit Log TBL_TR_AUDIT_TradeRestriction ----------------------------------  
		END

		IF (@Mode = 'Edit')
		BEGIN
			-------------------------------Begin Update Audit Log TBL_TR_AUDIT_TradeRestriction ----------------------------------  
			INSERT INTO TBL_TR_AUDIT_TradeRestriction(
			AuditUserID,AuditDatetime,AuditFlag,AuditTable,AuditDetail,
			TradeRestrictionID,TradeRestrictionTypeID,CustomerAccountNumber,
			SecuritySymbol,RestrictionStartDate,RestrictionEndDate,RestrictionComment,
			CreatedUserID,CreateDate,LastModifiedDate,IsActive
			)
			SELECT 
			CreatedUserID,GETDATE(),'U',
			'TBL_TR_TradeRestriction',' ''LOGIN_NAME->'+ SYSTEM_USER+',SYSTEM_ID->'+HOST_ID()+',HOST_NAME->'+HOST_NAME()+',USER->'+USER,
			TradeRestrictionID,TradeRestrictionTypeID,CustomerAccountNumber,
			SecuritySymbol,RestrictionStartDate,RestrictionEndDate,RestrictionComment,
			CreatedUserID,GETDATE(),LastModifiedDate,IsActive
			FROM TBL_TR_TradeRestriction
			WHERE TradeRestrictionID IN (
					SELECT XMLDATA.Item.value('TradeRestrictionID[1]', 'INT')
					FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
					)
			-------------------------------End Update Audit Log TBL_TR_AUDIT_TradeRestriction ----------------------------------  
			
			UPDATE TBL_TR_TradeRestriction
			SET TradeRestrictionTypeID = @TradeRestrictionTypeID
				,CustomerAccountNumber = XMLDATA.Item.value('AccountID[1]', 'VARCHAR(50)')
				,SecuritySymbol = XMLDATA.Item.value('SecuritySymbol[1]', 'VARCHAR(50)')
				,RestrictionStartDate = XMLDATA.Item.value('StartDate[1]', 'DATETIME')
				,RestrictionEndDate = XMLDATA.Item.value('EndDate[1]', 'DATETIME')
				,RestrictionComment = XMLDATA.Item.value('Comments[1]', 'VARCHAR(500)')
				,LastModifiedUserID = XMLDATA.Item.value('UserID[1]', 'INT')
				,LastModifiedDate = GETDATE()
			FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
			WHERE TradeRestrictionID IN (
					SELECT XMLDATA.Item.value('TradeRestrictionID[1]', 'INT')
					FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
					)
		END

		IF (@Mode = 'Delete')
		BEGIN
		-------------------------------Begin Delete Audit Log TBL_TR_AUDIT_TradeRestriction ----------------------------------  
			INSERT INTO TBL_TR_AUDIT_TradeRestriction(
			AuditUserID,AuditDatetime,AuditFlag,AuditTable,AuditDetail,
			TradeRestrictionID,TradeRestrictionTypeID,CustomerAccountNumber,
			SecuritySymbol,RestrictionStartDate,RestrictionEndDate,RestrictionComment,
			CreatedUserID,CreateDate,LastModifiedDate,IsActive
			)
			SELECT 
			CreatedUserID,GETDATE(),'D',
			'TBL_TR_TradeRestriction',' ''LOGIN_NAME->'+ SYSTEM_USER+',SYSTEM_ID->'+HOST_ID()+',HOST_NAME->'+HOST_NAME()+',USER->'+USER,
			TradeRestrictionID,TradeRestrictionTypeID,CustomerAccountNumber,
			SecuritySymbol,RestrictionStartDate,RestrictionEndDate,RestrictionComment,
			CreatedUserID,GETDATE(),LastModifiedDate,IsActive
			FROM TBL_TR_TradeRestriction
			WHERE TradeRestrictionID IN (
					SELECT XMLDATA.Item.value('TradeRestrictionID[1]', 'INT')
					FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
					)
			-------------------------------End Delete Audit Log TBL_TR_AUDIT_TradeRestriction ----------------------------------  
			
			
			UPDATE TBL_TR_TradeRestriction
			SET IsActive = 0
				,DeletedUserID = XMLDATA.Item.value('UserID[1]', 'INT')
			FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
			WHERE TradeRestrictionID IN (
					SELECT XMLDATA.Item.value('TradeRestrictionID[1]', 'INT')
					FROM @TradeRestrictionXML.nodes('/TradeRestriction/Restriction') AS XMLDATA(Item)
					)
		END

		COMMIT TRANSACTION
	END TRY

	BEGIN CATCH
		ROLLBACK TRANSACTION

		SET @ErrorMessage = ERROR_MESSAGE();
		SET @ErrorNumber = ERROR_NUMBER();
		SET @val1 = '';
		SET @val2 = '';

		EXEC dbo.USP_EX_SYSErrorHandler @CodeName = @ProcName
			,@ErrorMessage = @ErrorMessage
			,@ErrorNumber = @ErrorNumber
			,@val1 = ''
			,@val1str = 'USP_EX_SaveEnfTradeRestriction: Cannot Select.'
			,@val2 = ''
			,@val2str = '';
	END CATCH
		-- End of procedure  --              
END
GO

IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_SaveEnfTradeRestriction'
		)
BEGIN
	PRINT 'CREATED PROCEDURE USP_EX_SaveEnfTradeRestriction';
END