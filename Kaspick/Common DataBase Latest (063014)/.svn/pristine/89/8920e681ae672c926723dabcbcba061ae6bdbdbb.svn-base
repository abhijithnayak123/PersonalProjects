IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_GetTradingLf'
		)
BEGIN
	DROP PROCEDURE USP_EX_GetTradingLf;

	PRINT 'DROPPED USP_EX_GetTradingLf';
END
GO

/******************************************************************************        
** Name: USP_EX_GetTradingLf
** Old Name:     USP_EIS_EX_TRADING_LFSelProc        
** Short Desc: THIS SP TO FETCH THE DETAILS OF ALERT EVENT BY SEARCH CRITIRIA      
**        
** Full Description        
**       SEARCH CRITIRIA WILL PASSED AS PARAMETER TO THE SP, DEPENDING UPON IT SEARCHED VALUE WILL BE RETURNED      
   from ALERT TABLE      
**        
** Sample Call        
  USP_EIS_EX_TRADING_LFSelProc       
 @startrow = 1,      
 @endrow = 19,      
 @SearchColumnName = 'ADVENT_ID',      
 @SearchCriteria = 0,      
 @strSearch = '',      
 @Filtercolumnname = '',      
 @strFilter = '',      
 @sortcolumnname = 'ADVENT_ID',      
 @SortOrder = 'ASC',      
    @AccountId = 0      
**        
** Return values: NONE        
**        
**        
** Standard declarations        
**       Set NOCOUNT             ON        
**       Set LOCK_TIMEOUT         30000   -- 30 seconds        
**         
** Created By: N.R.AMARNATH      
** Company   : Kaspick & Company        
** Project   : Excelsior  -- IM PROFILE      
** Created DT: <03/23/2007>        
**                    
*******************************************************************************        
**       Change History        
*******************************************************************************        
** Date:        Author:  Bug #     Description:                           Rvwd        
** --------     -------- ------    -------------------------------------- --------        
** 01-Apr-2007   Amarnath -        Delete flag was missed out        
** 16-Apr-2007   Amarnath  4970    Assigned To was changed to User Login Name      
** 26-Apr-2007   Amar      5143    Change request to set order by duedate adventid   
** 23-May-2007   Rahul    Modified to implement Supplement ID Related changes.    
** 22-Mar-2014   Yugandhar  INVREQ 3.1 Modified    
** 23-MAY-2014 Mallikarjun     SP Name Renamed and Formatted
      
*******************************************************************************        
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved        
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION      

exec USP_EX_GetTradingLf 1,18,'ADVENT_ID',0,'ADADW','','','','','0'
  
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_EX_GetTradingLf] (
	@startrow INT
	,-- start row for the page      
	@endrow INT
	,-- end row for the page      
	@searchcolumnname VARCHAR(100)
	,-- this will be used when user wants to search a string within a column.      
	-- ''      
	@searchcriteria TINYINT
	,-- 0-Begins with, 1-Contains      
	@strsearch VARCHAR(255)
	,-- search string that will be located in column provided above.      
	@filtercolumnname VARCHAR(100)
	,-- Column on which the default filtering will be done      
	@strfilter VARCHAR(255)
	,-- for filtering the char/varchar, which will work on filter control      
	@sortcolumnname VARCHAR(100)
	,-- column on which the sorting should work      
	@sortorder VARCHAR(5)
	,-- ASC or DESC       
	@accountid CHAR(14) -- Account ID       
	)
AS
--  Variable Declarations  --      
DECLARE @totalpagecount INT
DECLARE @strsearchval VARCHAR(255);
DECLARE @strsearchval2 VARCHAR(255);

IF (@sortorder = '')
	SET @sortorder = 'ASC'

--Added to Handle the Wild key Chars        
SELECT @strsearchval = Replace(@strsearch, '%', '[%]');

SELECT @strsearchval2 = Replace(@strsearchval, '_', '[_]');

SET @strsearch = @strsearchval2;

CREATE TABLE #TradingTaskList (
	alertid INT
	,adventid VARCHAR(50)
	,duedate DATETIME
	,STATUS VARCHAR(75)
	,assignedto VARCHAR(50)
	,cause VARCHAR(100)
	,comments VARCHAR(254)
	)

DECLARE @tradingtasksearch TABLE (
	alertid INT
	,adventid VARCHAR(50)
	,duedate DATETIME
	,STATUS VARCHAR(75)
	,assignedto VARCHAR(50)
	,cause VARCHAR(100)
	,comments VARCHAR(254)
	)
DECLARE @tradingtaskfilter TABLE (
	alertid INT
	,adventid VARCHAR(50)
	,duedate DATETIME
	,STATUS VARCHAR(75)
	,assignedto VARCHAR(50)
	,cause VARCHAR(100)
	,comments VARCHAR(254)
	)

IF (ISNULL(@accountid, '0') = '0')
BEGIN
	INSERT INTO #TradingTaskList (
		alertid
		,adventid
		,duedate
		,STATUS
		,assignedto
		,cause
		,comments
		)
	SELECT BrAlrtEvnt.alertid
		,AccPrfile.CustomerAccountNumber [advent_id]
		,BrAlrtEvnt.alertdate [due date]
		,BrAlrtEvnt.alertstatus [status]
		,KsUsr.LoginName [assigned to]
		,BrAlrtEvnt.alertcause [cause]
		,BrAlrtEvnt.alertcomment [alert comment]
	FROM TBL_BR_AlertEvent BrAlrtEvnt
	INNER JOIN TBL_INV_AccountProfile AccPrfile ON BrAlrtEvnt.CustomerAccountNumber = AccPrfile.CustomerAccountNumber
	INNER JOIN TBL_KS_User KsUsr ON BrAlrtEvnt.assignedto = KsUsr.UserID
END
ELSE
BEGIN
	INSERT INTO #TradingTaskList (
		alertid
		,adventid
		,duedate
		,STATUS
		,assignedto
		,cause
		,comments
		)
	SELECT BrAlrtEvnt.alertid
		,AccPrfile.CustomerAccountNumber [advent_id]
		,BrAlrtEvnt.alertdate [due date]
		,BrAlrtEvnt.alertstatus [status]
		,KsUsr.LoginName [assigned to]
		,BrAlrtEvnt.alertcause [cause]
		,BrAlrtEvnt.alertcomment [alert comment]
	FROM TBL_BR_AlertEvent BrAlrtEvnt
	INNER JOIN TBL_INV_AccountProfile AccPrfile ON BrAlrtEvnt.CustomerAccountNumber = AccPrfile.CustomerAccountNumber
	INNER JOIN TBL_KS_User KsUsr ON BrAlrtEvnt.assignedto = KsUsr.UserID
	WHERE @accountid = BrAlrtEvnt.CustomerAccountNumber
END

-- CONDITION HANDLED FOR SELECTION OF PORTFOLIOCODE COLUMN AND CONTAINS SEARCH      
IF (@strsearch = '')
BEGIN
	INSERT INTO @tradingtasksearch (
		alertid
		,adventid
		,duedate
		,STATUS
		,assignedto
		,cause
		,comments
		)
	SELECT alertid
		,adventid
		,duedate
		,STATUS
		,assignedto
		,cause
		,comments
	FROM #TradingTaskList
END
ELSE
BEGIN
	-- For all comments with search on ADVENT ID column      
	IF @searchcolumnname = 'ADVENT_ID'
	BEGIN
		-- For all Comments with search on ADVENT ID column - begins with       
		IF @searchcriteria = 0
		BEGIN
			INSERT INTO @tradingtasksearch (
				alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
				)
			SELECT alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
			FROM #TradingTaskList
			WHERE adventid LIKE @strsearch + '%'
		END
		ELSE
		BEGIN
			INSERT INTO @tradingtasksearch (
				alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
				)
			SELECT alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
			FROM #TradingTaskList
			WHERE adventid LIKE '%' + @strsearch + '%'
		END
	END
	ELSE
	BEGIN
		IF @searchcriteria = 0
		BEGIN
			INSERT INTO @tradingtasksearch (
				alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
				)
			SELECT alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
			FROM #TradingTaskList
			WHERE assignedto LIKE @strsearch + '%'
		END
		ELSE
		BEGIN
			INSERT INTO @tradingtasksearch (
				alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
				)
			SELECT alertid
				,adventid
				,duedate
				,STATUS
				,assignedto
				,cause
				,comments
			FROM #TradingTaskList
			WHERE assignedto LIKE '%' + @strsearch + '%'
		END
	END
END

IF @strfilter <> ''
BEGIN
	IF @strfilter <> '123'
	BEGIN
		INSERT INTO @tradingtaskfilter (
			alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			)
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
		FROM @tradingtasksearch
		WHERE adventid LIKE @strfilter + '%'
	END
	ELSE
	BEGIN
		INSERT INTO @tradingtaskfilter (
			alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			)
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
		FROM @tradingtasksearch
		WHERE adventid LIKE '[0-9]%'
	END
END
ELSE
BEGIN
	INSERT INTO @tradingtaskfilter (
		alertid
		,adventid
		,duedate
		,STATUS
		,assignedto
		,cause
		,comments
		)
	SELECT alertid
		,adventid
		,duedate
		,STATUS
		,assignedto
		,cause
		,comments
	FROM @tradingtasksearch
END

-- Calculate total page count.      
SELECT @totalpagecount = count(*)
FROM @tradingtaskfilter

-- @startrow will be passed as -1  only if options are Print/Excel       
IF @STARTROW <> - 1
BEGIN
	--if Selected records are to be displayed      
	--Sorting on Portfoliocode      
	--Added to order by duedate and adventid      
	IF @sortcolumnname = ''
	BEGIN
		IF @sortorder = 'ASC'
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY duedate
							,adventid ASC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY duedate
				,adventid ASC
		END
		ELSE
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY duedate
							,adventid DESC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY duedate
				,adventid DESC
		END
	END
	ELSE IF @sortcolumnname = 'ADVENT_ID'
	BEGIN
		IF @sortorder = 'ASC'
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY adventid ASC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY adventid ASC
		END
		ELSE
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY adventid DESC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY adventid DESC
		END
	END
	ELSE IF @sortcolumnname = 'DUEDATE'
	BEGIN
		IF @sortorder = 'ASC'
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY duedate ASC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY duedate ASC
		END
		ELSE
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY duedate DESC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY duedate DESC
		END
	END
	ELSE IF @sortcolumnname = 'STATUS'
	BEGIN
		IF @SORTORDER = 'ASC'
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY STATUS ASC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY STATUS ASC
		END
		ELSE
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY STATUS DESC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY STATUS DESC
		END
	END
	ELSE IF @sortcolumnname = 'ASSIGNEDTO'
	BEGIN
		IF @sortorder = 'ASC'
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY assignedto ASC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY assignedto ASC
		END
		ELSE
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY assignedto DESC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY assignedto DESC
		END
	END
	ELSE IF @sortcolumnname = 'CAUSE'
	BEGIN
		IF @sortorder = 'ASC'
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY cause ASC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY cause ASC
		END
		ELSE
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY cause DESC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY cause DESC
		END
	END
	ELSE IF @sortcolumnname = 'COMMENTS'
	BEGIN
		IF @sortorder = 'ASC'
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY comments ASC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY comments ASC
		END
		ELSE
		BEGIN
			SELECT *
			FROM (
				SELECT alertid
					,adventid
					,duedate
					,STATUS
					,assignedto
					,cause
					,comments
					,row_number() OVER (
						ORDER BY comments DESC
						) AS rownumber
					,isnull(@totalpagecount, 0) AS [totalcount]
				FROM @tradingtaskfilter
				) AS universe
			WHERE rownumber >= @startrow
				AND rownumber <= @endrow
			ORDER BY comments DESC
		END
	END
END
ELSE IF @sortcolumnname = ''
BEGIN
	IF @sortorder = 'ASC'
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY duedate
			,adventid ASC
	END
	ELSE
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY duedate
			,adventid DESC
	END
END
ELSE IF @sortcolumnname = 'ADVENT_ID'
BEGIN
	IF @sortorder = 'ASC'
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY adventid ASC
	END
	ELSE
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY adventid DESC
	END
END
ELSE IF @sortcolumnname = 'DUEDATE'
BEGIN
	IF @sortorder = 'ASC'
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY duedate ASC
	END
	ELSE
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY duedate DESC
	END
END
ELSE IF @sortcolumnname = 'STATUS'
BEGIN
	IF @sortorder = 'ASC'
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY STATUS ASC
	END
	ELSE
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY STATUS DESC
	END
END
ELSE IF @sortcolumnname = 'ASSIGNEDTO'
BEGIN
	IF @sortorder = 'ASC'
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY assignedto ASC
	END
	ELSE
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY assignedto DESC
	END
END
ELSE IF @sortcolumnname = 'CAUSE'
BEGIN
	IF @sortorder = 'ASC'
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY cause ASC
	END
	ELSE
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY cause DESC
	END
END
ELSE IF @sortcolumnname = 'COMMENTS'
BEGIN
	IF @sortorder = 'ASC'
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY comments ASC
	END
	ELSE
	BEGIN
		SELECT alertid
			,adventid
			,duedate
			,STATUS
			,assignedto
			,cause
			,comments
			,0 AS rownumber
			,isnull(@totalpagecount, 0) AS [totalcount]
		FROM @tradingtaskfilter
		ORDER BY comments DESC
	END
END
GO

IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_GetTradingLf'
		)
BEGIN
	PRINT 'CREATED PROCEDURE USP_EX_GetTradingLf';
END