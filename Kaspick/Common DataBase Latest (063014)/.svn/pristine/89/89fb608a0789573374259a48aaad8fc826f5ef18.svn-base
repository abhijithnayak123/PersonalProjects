IF EXISTS (SELECT *
   FROM   sysobjects 
   WHERE  type = 'TR'
		  AND name = 'TRG_EX_DelCommentLinkage')
BEGIN
	DROP TRIGGER TRG_EX_DelCommentLinkage;
	PRINT 'DROPPED TRIGGER TRG_EX_DelCommentLinkage';
END
GO  

/****** Object:  Trigger [dbo].[TRG_TBL_EIS_EX_COMMENTLINKAGE_INSUPDDEL]    Script Date: 06/18/2014 18:14:29 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

/******************************************************************************
** Trigger Name: 	TRG_EX_DelCommentLinkage
** Old Trigger Name: 	TRG_TBL_EIS_EX_COMMENTLINKAGE_INSUPDDEL
** Table Name:		COMMENTLINKAGE
** Action			Insert, Update, Delete
**
** Description: 	Writes data changes to the audit table
**
**				
**	Created By: by TriggerGenerator Program (~g)
**	Company	  :	Kaspick & Company
**	Project	  :	Excelsior
**	Created DT:	5/28/2007
**
*******************************************************************************
**       Change History
*******************************************************************************
** Date/Version		Author:		Bug #	 Description:
** --------			--------	-------------------------------------------
** 5/28/2007	TriggerGenerator Program (~g)	Created for COMMENTLINKAGE table
** 08/24/2007	Madhuri		   Updated the code to capture audit information 
**				   when benereportcomment-portfolicode is not 
**				   inserted at the time of creation of 
**				   commentlinkage record 
**
*******************************************************************************
** Copyright (C) 2007 Kaspick & Company, All Rights Reserved
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION
*******************************************************************************/
CREATE TRIGGER [TRG_EX_DelCommentLinkage] ON [TBL_BR_CommentLinkage]
AFTER DELETE
AS

--  Variable Declarations  --
DECLARE @trgname VARCHAR(60);
DECLARE @errmsg VARCHAR(1000);
DECLARE @errnbr INT;
DECLARE @CommentID INT;
-- Variables used for error handling - uncomment if needed
DECLARE @val1 VARCHAR(30);

--Declare @val2						varchar(30);
--  Temp tables, Cursors, Table Variables  --
--  Variable Data Assignment  --
SET @trgname = 'TRG_EX_DelCommentLinkage';

--	Body of trigger  --
-- if the row is an insert, count from Deleted will be 0, so put the inserted data into
-- the audit table.  If the row is a Delete and rowcount from Deleted > 0 and Inserted > 0 or Inserted <> 0, 
-- then get the data from the Deleted table for recording the old values in the audit table.
BEGIN TRY
	BEGIN TRANSACTION

	DECLARE @UNKNOWN_ID INT

	--	DECLARE @N_USERID INT,
	--			@N_MODIFIED_DATE DATETIME
	SELECT @UNKNOWN_ID = UserID
	FROM TBL_KS_User
	WHERE upper(LoginName) = 'UNKNOWN'

	--	
	--	IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#TEMP_PORTFOLIO_CODE_DTL]'))  
	--	BEGIN  
	--		SELECT @N_USERID=USERID,@N_MODIFIED_DATE=MODIFIED_DATE FROM #TEMP_PORTFOLIO_CODE_DTL
	--		DROP TABLE [DBO].[#TEMP_PORTFOLIO_CODE_DTL]   
	--	END
	--	ELSE
	--	BEGIN
	--		SET @N_USERID=@unknown_id
	--		SET @N_MODIFIED_DATE=GETDATE()
	--	END
	--	
	-- To capture the userid information in audit trail even though benereportcomment record is not created in supplement table
	-- Start : 24-Aug-2007
	DECLARE @tempuserid INT

	SET @tempuserid = NULL

	-- TEMP_PORTFOLIO_CODE_DTL table did'nt existed even in excelsior database hence below exists condition 
	-- is commented
	--IF EXISTS (SELECT * FROM SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMP_PORTFOLIO_CODE_DTL'))    
	--Begin
	--	select @tempuserid= USERID from TEMP_PORTFOLIO_CODE_DTL
	--End
	IF @tempuserid IS NOT NULL
	BEGIN
		SET @UNKNOWN_ID = @tempuserid
	END

	--End

		INSERT INTO TBL_BR_AUDIT_CommentLinkage (
			AUDIT_USER_ID,
			AUDIT_DATETIME,
			AUDIT_FLAG,
			AUDIT_TABLE,
			AUDIT_DETAILS,
			CustomerAccountNumber_old,
			ComLinkTypeID_old,
			CommentID_old,
			MODIFIED_DATE,
			MODIFIED_USER_ID,
			DELETED_USER_ID
			)
		SELECT DISTINCT @UNKNOWN_ID, --isnull(MODIFIED_USER_ID, @UNKNOWN_ID),
			GetDate(), --ISNULL(MODIFIED_DATE,getdate()),
			'D',
			'TBL_BR_CommentLinkage',
			'LOGIN_NAME->' + SYSTEM_USER + ',SYSTEM_ID->' + HOST_ID() + ',HOST_NAME->' + HOST_NAME() + ',USER->' + USER,
			D.CustomerAccountNumber,
			D.ComLinkTypeID,
			D.CommentID,
			GETDATE(),
			@UNKNOWN_ID, 
			@UNKNOWN_ID
		FROM DELETED D 
		Left outer join TBL_BR_CommentLinkage CL on D.CommentID = CL.CommentID 
		AND D.CustomerAccountNumber = CL.CustomerAccountNumber
	COMMIT TRANSACTION;
END TRY

BEGIN CATCH
	ROLLBACK TRANSACTION

	DECLARE @ProcName VARCHAR(60);
	DECLARE @ErrorMessage NVARCHAR(4000);
	DECLARE @ErrorSeverity INT;
	DECLARE @ErrorState INT;

	SET @ProcName = 'TRG_EX_DelCommentLinkage';

	DECLARE @ErrorNumber INT;

	SELECT @ErrorMessage = ERROR_MESSAGE(),
		@ErrorSeverity = ERROR_SEVERITY(),
		@ErrorState = ERROR_STATE(),
		@ErrorNumber = ERROR_NUMBER();

	RAISERROR (
			@ErrorMessage,
			-- Message text.
			@ErrorSeverity,
			-- Severity.
			@ErrorState -- State.
			);
END CATCH
GO

IF EXISTS (	SELECT * FROM sysobjects
		    WHERE type = 'TR' AND name = 'TRG_EX_DelCommentLinkage')
BEGIN
	PRINT 'CREATED TRIGGER TRG_EX_DelCommentLinkage';
END 
