IF EXISTS (SELECT *
           FROM   sysobjects 
           WHERE  type = 'P'
                  AND name = 'USP_EX_InsRptFasbProfileInfoIPParam ')
    BEGIN
        DROP PROCEDURE USP_EX_InsRptFasbProfileInfoIPParam ;
        PRINT 'DROPPED USP_EX_InsRptFasbProfileInfoIPParam ';
    END
GO
SET QUOTED_IDENTIFIER ON
GO
/******************************************************************************            
** New Name : USP_EX_InsRptFasbProfileInfoIPParam
** Old Name : USP_EIS_RPT_FASB_ProfileInfo_IPParam_InsProc            
** Short Desc : Gets the Excelsior Profile values.  
**            
** Full Description            
**                
**            
** Return values: NONE            
**     
** Sample Call  
**      
** EXEC USP_EIS_RPT_FASB_ProfileInfo_IPParam_InsProc    
**             
** Created By : Basavaraj Elalli       
** Company  :  Kaspick & Company            
** Project  :  FASB            
** Created DT : Sep/21/2012            
**                        
*******************************************************************************            
**       Change History            
*******************************************************************************            
** Date:        Author:  Bug #     Description:                           Rvwd            
** --------     -------- ------    -------------------------------------- --------            
**  Sep/21/2012    Basu Elalli           Created    
**  Sep/27/2012    Basu Elalli  Accepting all parameters as XML and insert the table 
**  Apr/14/2014    Mallikarjun   EXCREQ5.4 
** 23/05/2014		Mallikarjun		SP Name Renamed and Formattedd
******************************************************************************            
** Copyright (C) 2007 Kaspick & Company, All Rights Reserved            
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION            
*******************************************************************************/       
  
Create PROCEDURE [dbo].[USP_EX_InsRptFasbProfileInfoIPParam]  
 @IPParamXML XML,   
 @CreatedUserID int  
    
  AS  
    
   IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#TEMPIPPARAM]'))    
 BEGIN    
  DROP TABLE [DBO].[#TEMPIPPARAM]    
 END   
      
      BEGIN 
		BEGIN TRY
			BEGIN TRANSACTION
 CREATE TABLE #TEMPIPPARAM  
 (     
  Input_ParamID int,   
  FASB_InstanceID int,   
  DisplaySequence int,   
  TrustTypeLabel int,   
  IsReporting_Req bit,   
  CalculationMethod int,  
  RateOf_ReturnType int,  
  MortalityTable int,  
  IsRun_ByRestriction bit,  
  RateOfReturn decimal(6,2),  
  Comment varchar(4000)   
      
 )  
  
 INSERT INTO #TEMPIPPARAM  
 SELECT     
   x.e.value('Input_ParamID[1]', 'int') AS "Input_ParamID",   
   x.e.value('FASB_InstanceID[1]', 'int') AS "FASB_InstanceID",   
   x.e.value('DisplaySequence[1]', 'int') AS "DisplaySequence" ,  
   x.e.value('TrustTypeLabel[1]', 'int') AS "TrustTypeLabel",    
   x.e.value('IsReporting_Req[1]', 'bit') AS "IsReporting_Req",    
   x.e.value('CalculationMethod[1]', 'int') AS "CalculationMethod",  
   x.e.value('RateOf_ReturnType[1]', 'int') AS "RateOf_ReturnType",   
   x.e.value('MortalityTable[1]', 'int') AS "IsRun_ByRestriction",    
   x.e.value('IsRun_ByRestriction[1]', 'bit') AS "Sort1",  
   x.e.value('RateOfReturn[1]', 'decimal(6,2)') AS "RateOfReturn",  
   x.e.value('Comment[1]', 'varchar(4000)') AS "Comment"    
 FROM @IPParamXML.nodes('/ArrayOfFASBInputParam/FASBInputParam') as x(e)    
    
    
   INSERT INTO TBL_BR_FASBInputParam(   
   FASB_InstanceID,  
   DisplaySequence,  
   TrustTypeLabel,  
   IsReporting_Req,  
   CalculationMethod,  
   RateOf_ReturnType,  
   MortalityTable,  
   IsRun_ByRestriction,  
   RateOfReturn,  
   Comment,  
   CreatedUserID,  
   CreatedDate,  
   ModifiedUserID,  
   ModifiedDate)    
  SELECT     
   TEMP.FASB_InstanceID,  
   TEMP.DisplaySequence,  
   TEMP.TrustTypeLabel,  
   TEMP.IsReporting_Req,  
   TEMP.CalculationMethod,  
   TEMP.RateOf_ReturnType,  
   TEMP.MortalityTable,  
   TEMP.IsRun_ByRestriction,  
   TEMP.RateOfReturn,  
   TEMP.Comment,  
   @CreatedUserID,  
   GETDATE(),     
   @CreatedUserID,  
   GETDATE()  
    
  FROM #TEMPIPPARAM TEMP  
  WHERE TEMP.Input_ParamID = 0  
    
    
    
   UPDATE TBL_BR_FASBInputParam  
 SET    
     FASB_InstanceID = Temp.FASB_InstanceID,  
  TrustTypeLabel = Temp.TrustTypeLabel,  
  IsReporting_Req = Temp.IsReporting_Req,  
  CalculationMethod = Temp.CalculationMethod,  
  RateOf_ReturnType = Temp.RateOf_ReturnType,  
  MortalityTable = Temp.MortalityTable,  
  IsRun_ByRestriction = Temp.IsRun_ByRestriction,  
  RateOfReturn = Temp.RateOfReturn,  
  Comment = Temp.Comment,  
  ModifiedUserID = @CreatedUserID,  
  ModifiedDate = GETDATE()   
    
 FROM #TEMPIPPARAM Temp  
 INNER JOIN TBL_BR_FASBInputParam FasbInptPrm ON FasbInptPrm.FASB_InstanceID = Temp.FASB_InstanceID  
 where FasbInptPrm.Input_ParamID = Temp.Input_ParamID     
 
 
		COMMIT TRANSACTION
	END TRY

	BEGIN CATCH
		ROLLBACK TRANSACTION

		DECLARE @ProcName VARCHAR(60);
		DECLARE @ErrorMessage NVARCHAR(4000);
		DECLARE @ErrorSeverity INT;
		DECLARE @ErrorState INT;

		SET @ProcName = 'USP_EX_InsRptFasbProfileInfoIPParam';

		SELECT @ErrorMessage = ERROR_MESSAGE()
			,@ErrorSeverity = ERROR_SEVERITY()
			,@ErrorState = ERROR_STATE();

		RAISERROR (
				@ErrorMessage
				,-- Message text.
				@ErrorSeverity
				,-- Severity.
				@ErrorState -- State.
				);
	END CATCH
END
 GO
IF EXISTS (	SELECT *
		FROM sysobjects
		WHERE type = 'P'
		AND name = 'USP_EX_InsRptFasbProfileInfoIPParam') 
BEGIN
		PRINT 'CREATED PROCEDURE USP_EX_InsRptFasbProfileInfoIPParam';
END     
    
    
  
  
  
  
  