/****** Object:  StoredProcedure [dbo].[USP_PV_GetGiftSeverenceFromGiftwrapGAP]    Script Date: 06/26/2013 16:48:51 ******/
IF EXISTS (
		SELECT 1
		FROM sys.objects
		WHERE object_id = OBJECT_ID(N'[dbo].[USP_PV_GetGiftSeverenceFromGiftwrapGAP]')
			AND type IN (
				N'P'
				,N'PC'
				)
		)
	DROP PROCEDURE [dbo].[USP_PV_GetGiftSeverenceFromGiftwrapGAP]
GO

/****** Object:  StoredProcedure [dbo].[USP_PV_GetGiftSeverenceFromGiftwrapGAP]    Script Date: 06/26/2013 16:48:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/******************************************************************************                      
** Name		 : USP_PV_GetGiftSeverenceFromGiftwrapGAP                      
** Short Desc: A data extract from GiftWrap, which gives gifts enetered in Giftwrap application           
**  for the specified date range.           
** Full Description: A data extract from GiftWrap, which gives gifts enetered in Giftwrap application           
**  for the specified date range.    
**                              
** Input Arguments:   		@CustomerAccountNumberXML XML
**	,@GiftDateFrom DATETIME
**	,@GiftDateTo DATETIME
** Sample Call     
         
 EXEC USP_PV_GetGiftSeverenceFromGiftwrapGAP  @CustomerAccountNumberXML = '<CustomerAccountCollection>          
      <InsertList>          
      <CustomerAccount CustomerAccountNumber="PSGAP" />          
      </InsertList>          
      </CustomerAccountCollection>',          
  @GiftDateFrom = '10/01/2013',          
  @GiftDateTo = '01/31/2014'         
**             
**                      
**                      
** Standard declarations                      
**       SET LOCK_TIMEOUT         30000   -- 30 seconds                      
**                       
** Created By: Mohamed Salih 
** Company   : Kaspick & Company                      
** Project   : BackOffice Integration                      
** Created DT: 18-Mar-14               
**                                  
*******************************************************************************                
**       Change History                      
*******************************************************************************                
** Date:      Author:	 Bug #     Description:                           
** --------  --------	 ------    -------------------------------------- 
**03/24/2014 Salih                 Fixed the implementation for the selection of PersonKey 
***
*******************************************************************************                      
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved                      
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION                      
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_PV_GetGiftSeverenceFromGiftwrapGAP] (
	@CustomerAccountNumberXML XML
	,@GiftDateFrom DATETIME
	,@GiftDateTo DATETIME
	)
AS
BEGIN
	--  Initial Set statements  --    
	SET NOCOUNT ON;
	SET LOCK_TIMEOUT 30000;-- 30 seconds 

	-- Temporary table dropping  
	IF OBJECT_ID('tempdb..[#TmpGift]') IS NOT NULL
		DROP TABLE [#TmpGift]

	IF OBJECT_ID('tempdb..[#TmpPerson]') IS NOT NULL
		DROP TABLE [#TmpPerson]

	DECLARE @ClientID AS INT
	DECLARE @GiftStatusFID INT
	DECLARE @GiftStatusSID INT

	CREATE TABLE #TmpGift (
		OrgID INT
		,OrgAccount1 VARCHAR(18)
		,GiftDate DATETIME
		,GiftType VARCHAR(4)
		,GiftAmount DECIMAL(20, 4)
		,MarketValue DECIMAL(20, 4)
		,MarketValueDate DATETIME
		,GiftStatus VARCHAR(9)
		,GiftKey INT
		,AccountClosedDate DATETIME
		,Distributions DECIMAL(20, 4)
		,PersonIDFK INT
		,GiftID INT
		)

	CREATE TABLE #TmpPerson (
		-- 03/24/2014 Salih - Fixed the implementation for the selection of PersonKey 
		SeveredRownum INT
		,FinishedRownum INT
		,PersonKey INT
		,GiftID INT
		)

	SELECT @ClientID = ClientID
	FROM SYN_GW_TBLClient
	WHERE ClientName = 'Kaspick'

	SELECT @GiftStatusFID = LookUpID
	FROM SYN_GW_TBLLookup Lukp
	INNER JOIN SYN_GW_TBLLookupGroup LukpGrp
		ON LukpGrp.LookUpGroupID = Lukp.LookUpGroupID
	WHERE LukpGrp.GroupName = 'GiftStatus'
		AND Lukp.short = 'Finished'

	SELECT @GiftStatusSID = LookUpID
	FROM SYN_GW_TBLLookup Lukp
	INNER JOIN SYN_GW_TBLLookupGroup LukpGrp
		ON LukpGrp.LookUpGroupID = Lukp.LookUpGroupID
	WHERE LukpGrp.GroupName = 'GiftStatus'
		AND Lukp.short = 'Severed'

	INSERT INTO #TmpPerson
	SELECT -- 03/24/2014 Salih - Fixed the implementation for the selection of PersonKey 
		row_number() OVER (
			PARTITION BY Gift.giftid ORDER BY Prsn.PersonKey DESC
			) SeveredRownum
		,row_number() OVER (
			PARTITION BY Gift.giftid ORDER BY Prsn.DeathDate DESC
			) FinishedRownum
		,PersonKey
		,Gift.giftid
	FROM SYN_GW_TBLPersonGiftMap PGMap
	INNER JOIN SYN_GW_TBLPerson Prsn
		ON Prsn.personid = PGMap.personid
	INNER JOIN SYN_GW_TBLGift Gift
		ON PGMap.giftid = Gift.giftid

	INSERT INTO #TmpGift
	SELECT org.orgid AS OrgID
		,LTRIM(RTRIM(Org.OrgAccount1)) AS OrgAccount1
		,GiftDetail.GiftDate
		,GiftType.Short AS GiftType
		,GiftDetail.GiftAmount AS GiftAmount
		,Gift.MarketValue AS MarketValue
		,Gift.MarketValueDate AS MarketValueDate
		,GftStat.GiftStatus AS GiftStatus
		,Gift.GiftKey AS GiftKey
		,Gift.accountcloseddate AS AccountClosedDate
		,Gift.DistributionAmount AS Distributions
		,TPrsn.PersonKey
		,Gift.GiftID
	FROM SYN_GW_TBLGift Gift
	INNER JOIN SYN_GW_TBLGiftDetail GiftDetail
		ON GiftDetail.GiftID = Gift.GiftID
	INNER JOIN SYN_GW_TBLGiftType GiftType
		ON Gift.GiftTypeID = GiftType.GiftTypeID
	INNER JOIN SYN_GW_TBLOrganization Org
		ON Org.Orgid = Gift.orgid
	INNER JOIN (
		SELECT XMLInput.Item.value('@CustomerAccountNumber[1]', 'varchar(14)') AS OrgAccount1
		FROM @CustomerAccountNumberXML.nodes('//CustomerAccountCollection/InsertList/CustomerAccount') AS XMLInput(Item)
		) XmlInput
		ON XmlInput.OrgAccount1 = LTRIM(RTRIM(Org.OrgAccount1))
	LEFT OUTER JOIN (
		SELECT Lkp.LookupID AS LookUpID
			,Lkp.short AS GiftStatus
		FROM SYN_GW_TBLLookup Lkp
		INNER JOIN SYN_GW_TBLLookupGroup LkpGrp
			ON LkpGrp.LookUpGroupID = Lkp.LookUpGroupID
		WHERE LkpGrp.GroupName = 'GiftStatus'
		) GftStat
		ON GftStat.LookUpID = Gift.GiftStatusIDLookup
	LEFT OUTER JOIN #TmpPerson TPrsn
		ON TPrsn.GiftID = Gift.giftid
	WHERE (
			(
				-- 03/24/2014 Salih - Fixed the implementation for the selection of PersonKey 
				Gift.GiftStatusIDLookup = @GiftStatusSID
				AND TPrsn.SeveredRownum = 1
				)
			OR (
				Gift.GiftStatusIDLookup = @GiftStatusFID
				AND TPrsn.FinishedRownum = 1
				)
			)
		AND DistributionAmount <> 0
		AND GiftType.Short = 'CGA'
		AND Gift.accountcloseddate >= @GiftDateFrom
		AND Gift.accountcloseddate <= @GiftDateTo
		AND GiftDetail.initialgift = 1
		AND Gift.ClientID = @ClientID

	SELECT PersonKey AS PersonID
		,LTRIM(RTRIM(FirstName) + SPACE(1) + RTRIM(LastName)) AS PersonName
		,LTRIM(RTRIM(LastName)) AS LastName
		,LTRIM(RTRIM(FirstName)) AS FirstName
		,SSN AS SSN
		,CAST(DECRYPTBYPASSPHRASE(CAST(@ClientID AS VARCHAR(10)), Prsn.BirthDate) AS VARCHAR(23)) AS BirthDate
		,PrsnStat.PersonStatus AS PersonStatus
		,isnull(Prsn.DeathDate, '') AS DeathDate
		,'' AS MatchComment
		,'' AS MatchKey
		,'' AS MatchStatus
		,0 AS TransactionID
		,0 AS ValuationID
		,TGift.Distributions AS SeveredAmount
		,TGift.AccountClosedDate
	FROM SYN_GW_TBLPerson Prsn
	LEFT OUTER JOIN (
		SELECT Lkp.LookupID AS LookUpID
			,Lkp.short AS PersonStatus
		FROM SYN_GW_TBLLookupGroup LkpGrp
		INNER JOIN SYN_GW_TBLLookup Lkp
			ON LkpGrp.LookupGroupID = Lkp.LookupGroupID
				AND LkpGrp.GroupName = 'PersonStatus'
		) PrsnStat
		ON PrsnStat.lookupid = PersonStatusIDLookup
	INNER JOIN (
		SELECT PersonIDFK AS PersonIDFK
			,SUM(Distributions) Distributions
			,max(AccountClosedDate) AccountClosedDate
		FROM #TmpGift
		GROUP BY PersonIDFK
		) TGift
		ON Prsn.PersonKey = TGift.PersonIDFK
	WHERE Prsn.ClientID = @ClientID

	SELECT Gift.OrgID
		,Gift.OrgAccount1
		,Gift.GiftDate
		,Gift.GiftType
		,Gift.GiftAmount
		,Gift.MarketValue
		,Gift.MarketValueDate
		,Gift.GiftStatus
		,Gift.GiftKey
		,Gift.AccountClosedDate
		,Gift.Distributions
		,Gift.PersonIDFK As PersonID
		,Gift.GiftID
		,Assoc.short AS Association
		,PGMap.PersonGiftMapID AS PersonGiftMapID
	FROM #TmpGift Gift
	INNER JOIN SYN_GW_TBLPerson Prsn
		ON Prsn.PersonKey = Gift.PersonIDFK
	INNER JOIN SYN_GW_TBLPersonGiftMap PGMap
		ON Gift.GiftID = PGMap.giftid
			AND Prsn.PersonID = PGMap.personid
	LEFT OUTER JOIN SYN_GW_TBLAssociation Assoc
		ON Assoc.AssociationID = PGMap.AssociationID
	WHERE Prsn.ClientID = @ClientID
	ORDER BY Gift.PersonIDFK

	-- Temporary table dropping  
	IF OBJECT_ID('tempdb..[#TmpGift]') IS NOT NULL
		DROP TABLE [#TmpGift]

	IF OBJECT_ID('tempdb..[#TmpPerson]') IS NOT NULL
		DROP TABLE [#TmpPerson]

	SET NOCOUNT OFF
END
