IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_SaveEnfClientInvestment'
		)
BEGIN
	DROP PROCEDURE USP_EX_SaveEnfClientInvestment;

	PRINT 'DROPPED USP_EX_SaveEnfClientInvestment';
END
GO

SET QUOTED_IDENTIFIER ON
GO

/******************************************************************************                    
** New Name: USP_EX_SaveEnfClientInvestment
** Old Name: USP_EIS_ENF_CLIENT_INVESTMENT_INSUPDPROC                    
** Short Desc: To save the Strategic Allocations Set associated to a Client - Investment Tab.           
**                    
** Full Description: To save the Strategic Allocations Set associated to a Client - Investment Tab.           
**                            
** Input Arguments: NONE  
**       
** Sample Call                    
**  EXEC USP_EIS_ENF_CLIENT_INVESTMENT_INSUPDPROC
	@ClientID = 1,
	@SelectedSetXmlData = '<ListItemCollection>
							<DeleteList>
								<ListItem ItemID="46"  />
							</DeleteList>
							<InsertList>
								<ListItem ItemID="49"  />
							</InsertList>
							</ListItemCollection>'  
     @UserName = 'devans'
**           
** Return values: NONE  
**                    
**                    
** Standard declarations                    
**       SET LOCK_TIMEOUT         30000   -- 30 seconds                    
**                     
** Created By: Soorya             
** Company   : Kaspick & Company                    
** Project   : Excelsior  - Enfuego 4                    
** Created DT: 19/Feb/2010                    
**                                
*******************************************************************************              
**       Change History                    
*******************************************************************************              
** Date:        Author:  Bug #     Description:                           Rvwd              
** --------  -------- ------    -------------------------------------- --------              
** 12-Mar-2014 Yugandhar  Modified   EXCREQ 3.1
** 23-May-2014  Sanath               Sp name renamed as per Kaspick naming convention standard 
*******************************************************************************                    
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved                    
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION                    
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_EX_SaveEnfClientInvestment] --'ACL','<ListItemCollection><DeleteList></DeleteList><InsertList><ListItem ItemID="2"  /></InsertList></ListItemCollection>','mkaradi'
	(
	@ManagerCode VARCHAR(15)
	,@SelectedSetXmlData XML
	,@UserName VARCHAR(50)
	)
AS
BEGIN
	--  Variable Declarations  --          
	DECLARE @ProcName VARCHAR(60);
	DECLARE @ErrorMessage VARCHAR(1000);
	DECLARE @ErrorNumber INT;
	DECLARE @UserID BIGINT;
	-- Variables used for error handling - uncomment if needed          
	DECLARE @val1 VARCHAR(30);
	DECLARE @val2 VARCHAR(30);

	--  Variable Data Assignment  --          
	SET @ProcName = 'USP_EX_SaveEnfClientInvestment';

	-- Body of procedure  --          
	BEGIN TRY
		BEGIN TRANSACTION
   CREATE TABLE #TEMP( 
   AuditUserID INT ,
   AuditDatetime DATETIME,
   AuditFlag CHAR(1),
   AuditTable VARCHAR(100),
   AuditDetail VARCHAR(100),
   ClientStrategicAllocationID INT,
   ManagerCode CHAR(4),
   StrategicAllocationSetID INT,
   ModifiedBy INT,
   ModifiedDate DATETIME) 
 
   
   
   
		SELECT @UserID = [USERID]
		FROM TBL_KS_User
		WHERE LOGINNAME = @UserName

-------------------------------Begin Delete Audit Log TBL_INV_AUDIT_ClientStrategicAllocation ----------------------------------  
		-- #Temp is used because this scope is under trasaction, so the required data will not be available until it is committed
			INSERT INTO #Temp(
			AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate)
			SELECT 
			@userid,GETDATE(),'D',
			'TBL_INV_ClientStrategicAllocation',' ''LOGIN_NAME->'+ SYSTEM_USER+',SYSTEM_ID->'+HOST_ID()+',HOST_NAME->'+HOST_NAME()+',USER->'+USER,
		   ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate
			FROM TBL_INV_ClientStrategicAllocation where ManagerCode = @ManagerCode AND StrategicAllocationSetID IN (
				SELECT XMLDATA.item.value('@ItemID[1]', 'INT') AS StrategicAllocationSetID
				FROM @SelectedSetXmlData.nodes('//ListItemCollection/DeleteList/ListItem') AS XMLDATA(item)
				) 	
			
			INSERT INTO TBL_INV_AUDIT_ClientStrategicAllocation(AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate)
			SELECT  AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate
			FROM #TEMP where ManagerCode = @ManagerCode AND StrategicAllocationSetID IN (
				SELECT XMLDATA.item.value('@ItemID[1]', 'INT') AS StrategicAllocationSetID
				FROM @SelectedSetXmlData.nodes('//ListItemCollection/DeleteList/ListItem') AS XMLDATA(item) 
				)	
			
	
			
	----------------------------------End Delete Audit Log TBL_INV_AUDIT_ClientStrategicAllocation ----------------------------------  

		DELETE
		FROM TBL_INV_ClientStrategicAllocation
		WHERE ManagerCode = @ManagerCode
			AND StrategicAllocationSetID IN (
				SELECT XMLDATA.item.value('@ItemID[1]', 'INT') AS StrategicAllocationSetID
				FROM @SelectedSetXmlData.nodes('//ListItemCollection/DeleteList/ListItem') AS XMLDATA(item)
				)

		INSERT INTO TBL_INV_ClientStrategicAllocation
		SELECT @ManagerCode
			,XMLDATA.item.value('@ItemID[1]', 'INT') AS StrategicAllocationSetID
			,@UserID
			,GETDATE()
		FROM @SelectedSetXmlData.nodes('//ListItemCollection/InsertList/ListItem') AS XMLDATA(item)
		-------------------------------Begin Insert Audit Log TBL_INV_AUDIT_ClientStrategicAllocation ----------------------------------  
		-- #Temp is used because this scope is under trasaction, so the required data will not be available until it is committed
			INSERT INTO #Temp(
			AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate)
			SELECT 
			@userid,GETDATE(),'I',
			'TBL_INV_ClientStrategicAllocation',' ''LOGIN_NAME->'+ SYSTEM_USER+',SYSTEM_ID->'+HOST_ID()+',HOST_NAME->'+HOST_NAME()+',USER->'+USER,
		   ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate
			FROM TBL_INV_ClientStrategicAllocation 	WHERE ManagerCode = @ManagerCode
			
			INSERT INTO TBL_INV_AUDIT_ClientStrategicAllocation(AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate)
			SELECT  AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate
			FROM #TEMP  	WHERE ManagerCode = @ManagerCode
			
----------------------------------End Insert Audit Log TBL_INV_AUDIT_ClientStrategicAllocation ----------------------------------  


-------------------------------Begin Update Audit Log TBL_INV_AUDIT_ClientStrategicAllocation ----------------------------------  

	INSERT INTO #Temp(
			AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate)
			SELECT 
			@userid,GETDATE(),'U',
			'TBL_INV_ClientStrategicAllocation',' ''LOGIN_NAME->'+ SYSTEM_USER+',SYSTEM_ID->'+HOST_ID()+',HOST_NAME->'+HOST_NAME()+',USER->'+USER,
		   ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate
			FROM TBL_INV_ClientStrategicAllocation where ManagerCode = @ManagerCode
			
			INSERT INTO TBL_INV_AUDIT_ClientStrategicAllocation(AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate)
			SELECT  AuditUserID,AuditDatetime,AuditFlag,
			AuditTable,AuditDetail,ClientStrategicAllocationID,ManagerCode,StrategicAllocationSetID,ModifiedBy,ModifiedDate
			FROM #TEMP where ManagerCode = @ManagerCode
			
-------------------------------End Update Audit Log TBL_INV_AUDIT_ClientStrategicAllocation ----------------------------------  


		UPDATE TBL_INV_ClientStrategicAllocation
		SET ModifiedBy = @UserID
			,ModifiedDate = GETDATE()
		WHERE ManagerCode = @ManagerCode
 

		COMMIT TRANSACTION
	END TRY

	BEGIN CATCH
		ROLLBACK TRANSACTION

		SET @ErrorMessage = ERROR_MESSAGE();
		SET @ErrorNumber = ERROR_NUMBER();
		SET @val1 = '';
		SET @val2 = '';

		EXEC USP_EX_SYSErrorHandler @CodeName = @ProcName
			,@ErrorMessage = @ErrorMessage
			,@ErrorNumber = @ErrorNumber
			,@val1 = ''
			,@val1str = 'USP_EX_SaveEnfClientInvestment: Cannot Select.'
			,@val2 = ''
			,@val2str = '';
	END CATCH
END
GO

IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_SaveEnfClientInvestment'
		)
BEGIN
	PRINT 'CREATED PROCEDURE USP_EX_SaveEnfClientInvestment';
END