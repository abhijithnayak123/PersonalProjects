IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_SaveRptReportCondition'
		)
BEGIN
	DROP PROCEDURE USP_EX_SaveRptReportCondition;

	PRINT 'DROPPED USP_EX_SaveRptReportCondition';
END
GO

SET QUOTED_IDENTIFIER ON
GO 

/******************************************************************************                        
** Name :USP_EX_SaveRptReportCondition
** Old Name:     USP_EIS_RPT_REPORT_CONDITION_InsUpdProc                         
** Short Desc: To Insert/Update the Profile Reporting Conditions for the particular Entity                  
**                        
** Full Description: To Insert/Update the Profile Reporting Conditions for the particular Entity                  
**                                
** Input Arguments: @USERID  : user who is Updating/Inserting/Deleting the conditions.            
**     @CondtionXML: This xml contains Condition status, comments, Entity Type  and Entity ID      
** Sample Call                        
**  
	EXEC USP_EX_SaveRptReportCondition  
    @CondtionXML = '<CONDITIONS><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Client Note</REPORTTYPE><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS>Test1</COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS>Test2</COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS>Test3</COMMENTS><STATUSID>18</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS>Test4</COMMENTS><STATUSID>18</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Account</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID></CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID>ACPIF1</ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION></CONDITIONS>',     
    @ENTITY_TYPE = 'ACCOUNT',    
    @USERID  =  100048         
    
**               
** Return values: NONE                        
**                        
**                        
** Standard declarations                        
**       SET LOCK_TIMEOUT         30000   -- 30 seconds                        
**                         
** Created By: Saravanan P Muthu                 
** Company   : Kaspick & Company                        
** Project   : Excelsior  - BeneReport                        
** Created DT: 06/08/2009                        
**                                    
*******************************************************************************                  
**       Change History                        
*******************************************************************************                  
** Date:        Author:  Bug #     Description:                           Rvwd                  
** --------  -------- ------    -------------------------------------- --------                  
** 04/09/2014 Abhijith          EXCREQ 5.4   
** 23-MAY-2014  Mallikarjun     SP Name Renamed and Formatted
*******************************************************************************                        
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved                        
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION   

EXEC USP_EX_SaveRptReportCondition
'<CONDITIONS><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Client Note</REPORTTYPE><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Mailing Insert</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>621</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>242</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>241</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Special Instructions</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID></STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Error</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION><CONDITION><ENTITYTYPE>Manager</ENTITYTYPE><REPORTTYPE>Warning</REPORTTYPE><FREQUENCYID>235</FREQUENCYID><CLIENTID>ACL</CLIENTID><PROGRAMID></PROGRAMID><ACCOUNTID></ACCOUNTID><BENEFICIARYID></BENEFICIARYID><ACCOUNTTYPE></ACCOUNTTYPE><COMMENTS></COMMENTS><STATUSID>19</STATUSID></CONDITION></CONDITIONS>',
'MANAGER',
200003                     
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_EX_SaveRptReportCondition] (
	@CondtionXML XML
	,@ENTITY_TYPE VARCHAR(100)
	,@USERID INT
	)
AS
BEGIN
	--  Variable Declarations  --            
	DECLARE @procname VARCHAR(60);
	DECLARE @ErrorMessage VARCHAR(1000);
	DECLARE @ErrorNumber INT;
	-- Variables used for error handling - uncomment if needed            
	DECLARE @val1 VARCHAR(30);
	DECLARE @val2 VARCHAR(30);

	--  Variable Data Assignment  --            
	SET @procname = 'USP_EX_SaveRptReportCondition';

	DECLARE @LIST_ITEMID_NO INT

	EXEC USP_EX_GetListItemID @LIST_TYPE_NAME = 'LOGICAL VALUE'
		,@LIST_ITEM_NAME = 'NO'
		,@LIST_ITEM_ID = @LIST_ITEMID_NO OUTPUT

	DECLARE @CONDITION TABLE (
		ENTITY_TYPE VARCHAR(100)
		,REPORT_TYPE VARCHAR(100)
		,CLIENTID CHAR(15)
		,ACCOUNTID CHAR(14)
		,PROGRAMID CHAR(15)
		,BENEFICIARYID INT
		,ACCOUNTTYPE VARCHAR(1000)
		,COMMENTS VARCHAR(1000)
		,STATUS_ID INT
		,ENTITY_TYPE_ID INT NULL
		,REPORT_TYPE_ID INT NULL
		,CONDITION_ID INT NULL
		,FREQUENCYID INT
		,FLAG VARCHAR(1) DEFAULT 'I'
		)

	BEGIN TRY
		--BEGIN TRANSACTION

		INSERT INTO @CONDITION (
			ENTITY_TYPE
			,REPORT_TYPE
			,CLIENTID
			,PROGRAMID
			,ACCOUNTID
			,BENEFICIARYID
			,ACCOUNTTYPE
			,COMMENTS
			,Status_ID
			,FREQUENCYID
			)
		SELECT XMLDATA.ID.value('ENTITYTYPE[1]', 'VARCHAR(100)')
			,XMLDATA.ID.value('REPORTTYPE[1]', 'VARCHAR(100)')
			,XMLDATA.ID.value('CLIENTID[1]', 'CHAR(15)')
			,XMLDATA.ID.value('PROGRAMID[1]', 'CHAR(15)')
			,XMLDATA.ID.value('ACCOUNTID[1]', 'CHAR(14)')
			,XMLDATA.ID.value('BENEFICIARYID[1]', 'INT')
			,XMLDATA.ID.value('ACCOUNTTYPE[1]', 'VARCHAR(1000)')
			,XMLDATA.ID.value('COMMENTS[1]', 'VARCHAR(1000)')
			,XMLDATA.ID.value('STATUSID[1]', 'INT')
			,XMLDATA.ID.value('FREQUENCYID[1]', 'INT')
		FROM @CondtionXML.nodes('/CONDITIONS/CONDITION') AS XMLDATA(ID)

		UPDATE @CONDITION
		SET ENTITY_TYPE_ID = VwLstItm.ListItemID
			,REPORT_TYPE_ID = VwLstItms.ListItemID
		FROM @CONDITION TmpCnd
		INNER JOIN VW_EX_ListItem VwLstItm ON TmpCnd.ENTITY_TYPE = VwLstItm.ListItemName
			AND VwLstItm.ListTypeName = 'ENTITY'
		INNER JOIN VW_EX_ListItem VwLstItms ON TmpCnd.REPORT_TYPE = VwLstItms.ListItemName
			AND VwLstItms.ListTypeName = 'Report Type'

		IF (@ENTITY_TYPE = 'MANAGER')
		BEGIN
			UPDATE @CONDITION
			SET FLAG = 'U'
				,CONDITION_ID = RptCond.Condition_ID
			FROM @CONDITION TEMP
			INNER JOIN TBL_BR_ReportCondition RptCond ON TEMP.REPORT_TYPE_ID = RptCond.Report_Type_ID
				AND TEMP.CLIENTID = RptCond.ManagerCode
				AND TEMP.Entity_Type_ID = RptCond.Entity_Type_ID
				AND isnull(TEMP.FREQUENCYID, 0) = isnull(RptCond.FREQUENCYID, 0)
		END
		ELSE IF (@ENTITY_TYPE = 'ACCOUNT')
		BEGIN
			UPDATE @CONDITION
			SET FLAG = 'U'
				,CONDITION_ID = RptCond.Condition_ID
			FROM @CONDITION TEMP
			INNER JOIN TBL_BR_ReportCondition RptCond ON TEMP.REPORT_TYPE_ID = RptCond.Report_Type_ID
				AND TEMP.ACCOUNTID = RptCond.CustomerAccountNumber
				AND TEMP.Entity_Type_ID = RptCond.Entity_Type_ID
				AND isnull(TEMP.FREQUENCYID, 0) = isnull(RptCond.FREQUENCYID, 0)
		END

		--Dlete Report Condition      
		DECLARE @CONDITION_DELETE TABLE (CONDITION_ID INT)

		INSERT INTO @CONDITION_DELETE (CONDITION_ID)
		SELECT RptCond.CONDITION_ID
		FROM TBL_BR_ReportCondition RptCond
		INNER JOIN @CONDITION TEMP ON TEMP.CONDITION_ID = RptCond.Condition_ID
		WHERE TEMP.FLAG = 'U'
			AND TEMP.COMMENTS = ''
			AND (
				TEMP.STATUS_ID = 0
				OR TEMP.STATUS_ID = @LIST_ITEMID_NO
				)

		UPDATE TBL_BR_ReportCondition
		SET MODIFIED_DATE = GETDATE()
			,MODIFIED_USER_ID = @USERID
			,DELETED_USER_ID = @USERID
		WHERE CONDITION_ID IN (
				SELECT CONDITION_ID
				FROM @CONDITION_DELETE
				)

		DELETE
		FROM TBL_BR_ReportCondition
		WHERE CONDITION_ID IN (
				SELECT CONDITION_ID
				FROM @CONDITION_DELETE
				)

		DELETE
		FROM @CONDITION
		WHERE CONDITION_ID IN (
				SELECT CONDITION_ID
				FROM @CONDITION_DELETE
				)

		--Update Report Condition      
		UPDATE TBL_BR_ReportCondition
		SET Comments = TEMP.COMMENTS
			,Status_ID = TEMP.Status_ID
			,MODIFIED_DATE = GETDATE()
			,MODIFIED_USER_ID = @USERID
		FROM TBL_BR_ReportCondition RptCond
		INNER JOIN @CONDITION TEMP ON TEMP.CONDITION_ID = RptCond.Condition_ID
		WHERE TEMP.FLAG = 'U'

		--Insert Report COndition       
		INSERT INTO TBL_BR_ReportCondition (
			Entity_Type_ID
			,Report_Type_ID
			,ManagerCode
			,CustomerAccountNumber
			,AllianceNumber
			,ContactID
			,AccountType
			,Comments
			,Status_ID
			,MODIFIED_DATE
			,MODIFIED_USER_ID
			,CREATED_DATE
			,CREATED_USER_ID
			,FREQUENCYID
			)
		SELECT VwLstItm.ListItemID
			,VwLstItms.ListItemID
			,CASE 
				WHEN ISNULL(CLIENTID, '') = ''
					THEN NULL
				ELSE CLIENTID
				END
			,CASE 
				WHEN ISNULL(ACCOUNTID, '') = ''
					THEN NULL
				ELSE ACCOUNTID
				END
			,CASE 
				WHEN ISNULL(PROGRAMID, '') = ''
					THEN NULL
				ELSE PROGRAMID
				END
			,CASE 
				WHEN BENEFICIARYID = 0
					THEN NULL
				ELSE BENEFICIARYID
				END
			,ACCOUNTTYPE
			,COMMENTS
			,Status_ID
			,GETDATE()
			,@USERID
			,GETDATE()
			,@USERID
			,FREQUENCYID
		FROM @CONDITION TmpCnd
		INNER JOIN VW_EX_ListItem VwLstItm ON TmpCnd.ENTITY_TYPE = VwLstItm.ListItemName
			AND VwLstItm.ListTypeName = 'ENTITY'
		INNER JOIN VW_EX_ListItem VwLstItms ON TmpCnd.REPORT_TYPE = VwLstItms.ListItemName
			AND VwLstItms.ListTypeName = 'Report Type'
		WHERE TmpCnd.FLAG = 'I'
			AND (
				TmpCnd.COMMENTS <> ''
				OR Status_ID <> 0
				)

			DECLARE @intConditionID INT	
			SET @intConditionID = SCOPE_IDENTITY()

		--COMMIT TRANSACTION
	END TRY

	BEGIN CATCH
		--ROLLBACK TRANSACTION

		--DECLARE @ErrorMessage NVARCHAR(4000);
		DECLARE @ErrorSeverity INT;
		DECLARE @ErrorState INT;

		SELECT @ErrorMessage = ERROR_MESSAGE()
			,@ErrorSeverity = ERROR_SEVERITY()
			,@ErrorState = ERROR_STATE();

		RAISERROR (
				@ErrorMessage
				,-- Message text.
				@ErrorSeverity
				,-- Severity.
				@ErrorState -- State.
				);
	END CATCH
END
GO

IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_SaveRptReportCondition'
		)
BEGIN
	PRINT 'CREATED PROCEDURE USP_EX_SaveRptReportCondition';
END