/****** Object:  StoredProcedure [dbo].[USP_KCo_TerminationsAndSeverances]    Script Date: 06/26/2013 16:48:51 ******/
IF EXISTS (
		SELECT *
		FROM sys.objects
		WHERE object_id = OBJECT_ID(N'[dbo].[USP_KCo_TerminationsAndSeverances]')
			AND type IN (
				N'P'
				,N'PC'
				)
		)
	DROP PROCEDURE [dbo].[USP_KCo_TerminationsAndSeverances]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/******************************************************************************    
** Name:  USP_KCo_TerminationsAndSeverances  
** Short Desc: Terminations & Severances for Account Types - Trust, PIF, CGA  
**    
** Full Description    
**      Terminations & Severances for Account Types - Trust, PIF, CGA  
**    
** Sample Call    
        EXEC USP_KCo_TerminationsAndSeverances   
   'BW', '7/1/2013', '12/31/2014', 'Yes'  
**    
** Return values: NONE    
**    
**    
** Standard declarations    
**       SET LOCK_TIMEOUT         30000   -- 30 seconds    
**     
** Created By: Asit Kar  
** Company   : Kaspick & Company    
** Project   : Reports    
** Created DT: 01-04-2013  
**                
*******************************************************************************    
**       Change History    
*******************************************************************************    
** Date:        Author:  Bug #     Description:                           Rvwd    
** --------     -------- ------    -------------------------------------- --------      
**  
** MM/DD/YYYY XXXX  
*******************************************************************************    
** Copyright (C) 2013 Kaspick & Company, All Rights Reserved    
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION    
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_KCo_TerminationsAndSeverances] @ManagerCode AS CHAR(4)
	,@TerminationDateFrom AS DATE
	,@TerminationDateTo AS DATE
	,@OrderByInvObjective AS VARCHAR(5)
AS
BEGIN
	--  Initial Set statements  --    
	SET NOCOUNT ON;
	SET LOCK_TIMEOUT 30000;-- 30 seconds    

	DECLARE @GW_ClientID INT
	DECLARE @GW_CGA_GiftTypeID AS INT
	DECLARE @GW_PIF_GiftTypeID AS INT

	SELECT @GW_ClientID = ClientID FROM SYN_GW_TBLClient WHERE ClientName ='kaspick'
	
	SELECT @GW_CGA_GiftTypeID = GiftTypeID
	FROM SYN_GW_TBLGiftType
	WHERE short = 'CGA'

	SELECT @GW_PIF_GiftTypeID = GiftTypeID
	FROM SYN_GW_TBLGiftType
	WHERE short = 'PIF'

	DECLARE @TBL_GiftDetails_Trust TABLE (
		CustomerAccountNumber VARCHAR(14)
		,OriginalGiftDate DATETIME
		,TotalGiftAmount MONEY
		)
	DECLARE @TBL_Remainderman_Trust TABLE (
		CustomerAccountNumber VARCHAR(14)
		,FASBRestrictionType VARCHAR(50)
		,FundName VARCHAR(100)
		,DesignationCode VARCHAR(15)
		)
	DECLARE @TBL_Gift TABLE (
		CustomerAccountNumber VARCHAR(14)
		,AccountName VARCHAR(100)
		,AccountType VARCHAR(20)
		,AllianceNumber CHAR(15)
		,ClientAccountCode1 VARCHAR(20)
		,ClientAccountCode2 VARCHAR(20)
		,ContactName VARCHAR(2000)
		,Account1 VARCHAR(20)
		,Account2 VARCHAR(20)
		,Account3 VARCHAR(20)
		,Account4 VARCHAR(20)
		,Account5 VARCHAR(20)
		,OriginalGiftDate DATETIME
		,TotalGiftAmount MONEY
		,MatureDate DATETIME
		,NotificationDate DATETIME
		,PriorValuationDate DATETIME
		,Units DECIMAL(17, 8)
		,DistributionAmount MONEY
		,Liability MONEY
		,LiabilityDate DATETIME
		,FundName VARCHAR(2000)
		,DesignationCode VARCHAR(2000)
		,GiftRestriction VARCHAR(2000)
		,AccountClosingDateMarketValue VARCHAR(20)
		,InvestmentObjective VARCHAR(40)
		,ManagerCode CHAR(4)
		,GiftID INT
		)

	--Get the first Gift Date and total Gift Amount for each account  
	INSERT INTO @TBL_GiftDetails_Trust (
		CustomerAccountNumber
		,OriginalGiftDate
		,TotalGiftAmount
		)
	SELECT LkpAccnt.CustomerAccountNumber
		,MIN(GiftDate)
		,SUM(GftAst.MarketValue)
	FROM SYN_PS_Gift Gft
	INNER JOIN TBL_Lookup_Account LkpAccnt
		ON Gft.AccountID = LkpAccnt.AccountID
	LEFT OUTER JOIN SYN_PS_GiftAsset GftAst
		ON Gft.GiftID = GftAst.GiftID
	GROUP BY LkpAccnt.CustomerAccountNumber

	--Get the Remainderman details into a temp table  
	INSERT INTO @TBL_Remainderman_Trust (
		CustomerAccountNumber
		,FASBRestrictionType
		,FundName
		,DesignationCode
		)
	SELECT DISTINCT AccMstr.CustomerAccountNumber
		,CASE isnull(CntAccRolEx.FasbRestrictionCode,'')
			WHEN 'D'
				THEN 'Board Desiganted'
			WHEN 'U'
				THEN 'Unrestricted'
			WHEN 'O'
				THEN 'Other'
			WHEN 'T'
				THEN 'Temporarily Restricted'
			WHEN 'P'
				THEN 'Permantly Restricted'
			ELSE 
				NULL
			END AS 'FasbRestrictionCode'
		,UDFContAccRole.UDFCAColumn010
		,UDFContAccRole.UDFCAColumn009 AS DesignationCode
	FROM SYN_IT_AccountMaster AccMstr
	INNER JOIN SYN_IT_ContactAccountRoles ContAccRole
		ON ContAccRole.CustomerAccountNumber = AccMstr.CustomerAccountNumber
			-- 26-jun-2014  Salih: Modified Rolecode implementation from Rolecode description to ID.
			AND ContAccRole.ContactRoleCode = 22 -- 'Remainderman'
	INNER JOIN SYN_IT_ContactMaster ContMstr
		ON ContMstr.ContactID = ContAccRole.ContactID
	LEFT OUTER JOIN SYN_IT_AccountManagerCodes AccMgrCode
		ON AccMgrCode.ContactID = ContAccRole.ContactID
	LEFT OUTER JOIN (
		SELECT AccMas.CustomerAccountNumber
			,cmREMDesig.ContactID
			,carREMDesig.ContactRoleCode
		FROM SYN_IT_AccountMaster AccMas
		INNER JOIN SYN_IT_ContactAccountRoles carREMDesig
			ON AccMas.CustomerAccountNumber = carREMDesig.CustomerAccountNumber
				AND carREMDesig.ContactRoleCode = 530 --Remainderman Designation
		INNER JOIN SYN_IT_UDF_ContactAccountRole udfcarREMDesig
			ON udfcarREMDesig.ContactID_Key = carREMDesig.ContactID
				AND udfcarREMDesig.CustomerAccountNumber_Key = carREMDesig.CustomerAccountNumber
				AND udfcarREMDesig.ContactRoleCode_Key = carREMDesig.ContactRoleCode
		INNER JOIN SYN_IT_ContactMaster cmREMDesig
			ON cmREMDesig.ContactID = carREMDesig.ContactID
		) RemDesig
		ON AccMstr.CustomerAccountNumber = RemDesig.CustomerAccountNumber
	LEFT OUTER JOIN SYN_IT_ContactAccountRolesEx CntAccRolEx
		ON CntAccRolEx.ContactID = RemDesig.ContactID
	LEFT OUTER JOIN SYN_IT_UDF_ContactAccountRole UDFContAccRole
		ON UDFContAccRole.ContactID_Key = RemDesig.ContactID
			AND AccMstr.CustomerAccountNumber = RemDesig.CustomerAccountNumber
			AND ContactRoleCode_Key = RemDesig.ContactRoleCode
	WHERE AccMstr.ManagerCode = @ManagerCode
		AND AccMstr.ManagerCode IS NOT NULL -- IsExternal = 0

	--Get Trust Accounts  
	INSERT INTO @TBL_Gift (
		CustomerAccountNumber
		,AccountName
		,AccountType
		,AllianceNumber
		,ClientAccountCode1
		,ClientAccountCode2
		,ContactName
		,Account1
		,Account2
		,Account3
		,Account4
		,Account5
		,OriginalGiftDate
		,TotalGiftAmount
		,MatureDate
		,NotificationDate
		,PriorValuationDate
		,Units
		,DistributionAmount
		,Liability
		,LiabilityDate
		,FundName
		,DesignationCode
		,GiftRestriction
		,AccountClosingDateMarketValue
		,InvestmentObjective
		,ManagerCode
		,GiftID
		)
	SELECT AccMas.CustomerAccountNumber AS 'CustomerAccountNumber'
		--,RTRIM(LTRIM((ISNULL(AccMas.CustomerDescriptionLine1, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine2, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine3, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine4, '')))) AS 'AccountName'
		,RTRIM(CASE 
				WHEN ISNULL(AccMas.CustomerDescriptionLine1, '') = ''
					THEN ''
				ELSE RTRIM(AccMas.CustomerDescriptionLine1) + ' '
				END + CASE 
				WHEN ISNULL(AccMas.CustomerDescriptionLine2, '') = ''
					THEN ''
				ELSE RTRIM(AccMas.CustomerDescriptionLine2) + ' '
				END + CASE 
				WHEN ISNULL(AccMas.CustomerDescriptionLine3, '') = ''
					THEN ''
				ELSE RTRIM(AccMas.CustomerDescriptionLine3) + ' '
				END + ISNULL(AccMas.CustomerDescriptionLine4, '')) AS AccountName
		,AccMas.AccountTypeCode AS 'AccountType'
		,AccMas.AllianceNumber AS 'AllianceNumber'
		,AccMas.TrustAccountNumber AS 'ClientAccountCode1'
		,UDFAccMas.UDFAMColumn042 AS 'ClientAccountCode2'
		,'' AS 'ContactName'
		,'' AS 'Account1'
		,'' AS 'Account2'
		,'' AS 'Account3'
		,'' AS 'Account4'
		,'' AS 'Account5'
		,ISNULL(gdt.OriginalGiftDate, AccMas.DateOpened) AS 'OriginalGiftDate'
		,gdt.TotalGiftAmount AS 'TotalGiftAmount'
		,UDFAccMas.UDFAMColumn030 AS 'MatureDate'
		,UDFAccMas.UDFAMColumn030 AS 'NotificationDate'
		,-- dga.MatureNotifyDate is obsolete
		NULL AS 'PriorValuationDate'
		,0 AS 'Units'
		,0 AS 'DistributionAmount'
		,0 AS 'Liability'
		,NULL AS 'LiabilityDate'
		,FundName = STUFF((
				SELECT DISTINCT '; ' + RmndMan.FundName
				FROM @TBL_Remainderman_Trust RmndMan
				WHERE RmndMan.CustomerAccountNumber = AccMas.CustomerAccountNumber
				FOR XML PATH('')
					,root('MyString')
					,type
				).value('/MyString[1]', 'varchar(2000)'), 1, 2, '')
		,DesignationCode = STUFF((
				SELECT DISTINCT '; ' + RmndMan.DesignationCode
				FROM @TBL_Remainderman_Trust RmndMan
				WHERE RmndMan.CustomerAccountNumber = AccMas.CustomerAccountNumber
				FOR XML PATH('')
					,root('MyString')
					,type
				).value('/MyString[1]', 'varchar(2000)'), 1, 2, '')
		,GiftRestriction = STUFF((
				SELECT DISTINCT '; ' + RmndMan.FASBRestrictionType
				FROM @TBL_Remainderman_Trust RmndMan
				WHERE RmndMan.CustomerAccountNumber = AccMas.CustomerAccountNumber
				FOR XML PATH('')
					,root('MyString')
					,type
				).value('/MyString[1]', 'varchar(2000)'), 1, 2, '')
		,'' AS 'AccountClosingDateMarketValue'
		,InvObj.ObjectiveName AS 'InvestmentObjective'
		,AccMas.ManagerCode AS 'ManagerCode'
		,NULL AS 'GiftID'
	FROM SYN_IT_AccountMaster AccMas
	INNER JOIN SYN_IT_UDF_AccountMaster UDFAccMas
		ON UDFAccMas.CustomerAccountNumber_Key = AccMas.CustomerAccountNumber
	LEFT OUTER JOIN TBL_INV_AccountProfile InvAcc
		ON InvAcc.CustomerAccountNumber = AccMas.CustomerAccountNumber
	LEFT OUTER JOIN TBL_INV_InvestmentObjective InvObj
		ON InvObj.ObjectiveCode = InvAcc.ObjectiveCode
	LEFT OUTER JOIN @TBL_GiftDetails_Trust gdt
		ON gdt.CustomerAccountNumber = AccMas.CustomerAccountNumber
	WHERE AccMas.AccountTypeCode NOT IN (
			'PIF'
			,'GAP'
			,'GAPR'
			,'GAPP'
			)
		AND UDFAccMas.UDFAMColumn030 >= @TerminationDateFrom
		AND UDFAccMas.UDFAMColumn030 <= @TerminationDateTo
		AND AccMas.ManagerCode = @ManagerCode

	--CGA Accounts from Giftwrap  
	INSERT INTO @TBL_Gift (
		CustomerAccountNumber
		,AccountName
		,AccountType
		,AllianceNumber
		,ClientAccountCode1
		,ClientAccountCode2
		,ContactName
		,Account1
		,Account2
		,Account3
		,Account4
		,Account5
		,OriginalGiftDate
		,TotalGiftAmount
		,MatureDate
		,NotificationDate
		,PriorValuationDate
		,Units
		,DistributionAmount
		,Liability
		,LiabilityDate
		,FundName
		,DesignationCode
		,GiftRestriction
		,AccountClosingDateMarketValue
		,InvestmentObjective
		,ManagerCode
		,GiftID
		)
	SELECT AccMas.CustomerAccountNumber AS 'CustomerAccountNumber'
		,RTRIM(LTRIM((ISNULL(AccMas.CustomerDescriptionLine1, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine2, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine3, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine4, '')))) AS 'AccountName'
		,AccMas.AccountTypeCode AS 'AccountType'
		,AccMas.AllianceNumber AS 'AllianceNumber'
		,'' AS 'ClientAccountCode1'
		,'' AS 'ClientAccountCode2'
		,LTRIM(RTRIM(gwp.FirstName) + SPACE(1) + RTRIM(gwp.LastName)) AS 'ContactName'
		,g.Account1 AS 'Account1'
		,g.Account2 AS 'Account2'
		,g.Account3 AS 'Account3'
		,g.Account4 AS 'Account4'
		,g.Account5 AS 'Account5'
		,gd.GiftDate AS 'OriginalGiftDate'
		,g.TotalGiftAmount AS 'TotalGiftAmount'
		,g.AccountClosedDate AS 'MatureDate'
		,g.AccountClosedDate AS 'NotificationDate'
		,g.MarketValueDate AS 'PriorValuationDate'
		,g.TotalUnits AS 'Units'
		,g.DistributionAmount AS 'DistributionAmount'
		,g.FASBAmount AS 'Liability'
		,g.FASBDate AS 'LiabilityDate'
		,g.Purpose AS 'FundName'
		,DesignationCode = STUFF((
				SELECT DISTINCT '; ' + d.Short
				FROM SYN_GW_TBLDESIGNATION d
				INNER JOIN SYN_GW_TBLDESIGNATIONDETAIL dd
					ON dd.DesignationID = d.DesignationID
				WHERE dd.GiftID = g.GiftID
				FOR XML PATH('')
					,root('MyString')
					,type
				).value('/MyString[1]', 'varchar(max)'), 1, 2, '')
		,GftRes.Description AS 'GiftRestriction'
		,'' AS 'AccountClosingDateMarketValue'
		,inv.ObjectiveName AS 'InvestmentObjective'
		,AccMas.ManagerCode AS 'ManagerCode'
		,g.GiftID AS 'GiftID'
	FROM SYN_GW_TBLGIFT g
	INNER JOIN SYN_GW_TBLGIFTDETAIL gd
		ON (
				gd.GiftID = g.GiftID
				AND gd.InitialGift = 1
				)
	INNER JOIN SYN_GW_TBLPERSONGIFTMAP pg
		ON g.GiftID = pg.GiftID
	INNER JOIN SYN_GW_TBLPERSON gwp
		ON gwp.PersonID = pg.PersonID
	INNER JOIN SYN_GW_TBLORGANIZATION gwo
		ON gwo.OrgID = g.OrgID
	INNER JOIN SYN_IT_AccountMaster AccMas
		ON AccMas.CustomerAccountNumber = gwo.OrgAccount1
	LEFT OUTER JOIN TBL_INV_AccountProfile InvAcc
		ON InvAcc.CustomerAccountNumber = AccMas.CustomerAccountNumber
	LEFT OUTER JOIN TBL_INV_InvestmentObjective inv
		ON inv.ObjectiveCode = InvAcc.ObjectiveCode 
	LEFT OUTER JOIN (
		SELECT lookupid
			,Description
		FROM SYN_GW_TBLLOOKUP
		) GftRes
		ON GftRes.lookupid = g.RestrictedIDLookup
	WHERE gwo.ClientID = @GW_ClientID
		AND g.GiftTypeID = @GW_CGA_GiftTypeID
		AND g.AccountClosedDate >= @TerminationDateFrom
		AND g.AccountClosedDate <= @TerminationDateTo
		AND AccMas.ManagerCode = @ManagerCode

	--PIF Accounts from Giftwrap  
	INSERT INTO @TBL_Gift (
		CustomerAccountNumber
		,AccountName
		,AccountType
		,AllianceNumber
		,ClientAccountCode1
		,ClientAccountCode2
		,ContactName
		,Account1
		,Account2
		,Account3
		,Account4
		,Account5
		,OriginalGiftDate
		,TotalGiftAmount
		,MatureDate
		,NotificationDate
		,PriorValuationDate
		,Units
		,DistributionAmount
		,Liability
		,LiabilityDate
		,FundName
		,DesignationCode
		,GiftRestriction
		,AccountClosingDateMarketValue
		,InvestmentObjective
		,ManagerCode
		,GiftID
		)
	SELECT AccMas.CustomerAccountNumber AS 'CustomerAccountNumber'
		,RTRIM(LTRIM((ISNULL(AccMas.CustomerDescriptionLine1, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine2, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine3, '') + ' ' + ISNULL(AccMas.CustomerDescriptionLine4, '')))) AS 'AccountName'
		,AccMas.AccountTypeCode AS 'AccountType'
		,AccMas.AllianceNumber AS 'AllianceNumber'
		,'' AS 'ClientAccountCode1'
		,'' AS 'ClientAccountCode2'
		,LTRIM(RTRIM(gwp.FirstName) + SPACE(1) + RTRIM(gwp.LastName)) AS 'ContactName'
		,g.Account1 AS 'Account1'
		,g.Account2 AS 'Account2'
		,g.Account3 AS 'Account3'
		,g.Account4 AS 'Account4'
		,g.Account5 AS 'Account5'
		,gd.GiftDate AS 'OriginalGiftDate'
		,g.TotalGiftAmount AS 'TotalGiftAmount'
		,g.AccountClosedDate AS 'MatureDate'
		,g.AccountClosedDate AS 'NotificationDate'
		,g.MarketValueDate AS 'PriorValuationDate'
		,g.TotalUnits AS 'Units'
		,g.DistributionAmount AS 'DistributionAmount'
		,g.FASBAmount AS 'Liability'
		,g.FASBDate AS 'LiabilityDate'
		,g.Purpose AS 'FundName'
		,DesignationCode = STUFF((
				SELECT DISTINCT '; ' + d.Short
				FROM SYN_GW_TBLDESIGNATION d
				INNER JOIN SYN_GW_TBLDESIGNATIONDETAIL dd
					ON dd.DesignationID = d.DesignationID
				WHERE dd.GiftID = g.GiftID
				FOR XML PATH('')
					,root('MyString')
					,type
				).value('/MyString[1]', 'varchar(max)'), 1, 2, '')
		,GftRes.Description AS 'GiftRestriction'
		,'' AS 'AccountClosingDateMarketValue'
		,inv.ObjectiveName AS 'InvestmentObjective'
		,AccMas.ManagerCode AS 'ManagerCode'
		,g.GiftID AS 'GiftID'
	FROM SYN_GW_TBLGIFT g
	INNER JOIN SYN_GW_TBLGIFTDETAIL gd
		ON (
				gd.GiftID = g.GiftID
				AND gd.InitialGift = 1
				)
	INNER JOIN SYN_GW_TBLPERSONGIFTMAP pg
		ON g.GiftID = pg.GiftID
	INNER JOIN SYN_GW_TBLPERSON gwp
		ON gwp.PersonID = pg.PersonID
	INNER JOIN SYN_GW_TBLPIF pif
		ON pif.PifID = g.PifID
	INNER JOIN SYN_IT_AccountMaster AccMas
		ON AccMas.CustomerAccountNumber = pif.PifNickname
	LEFT OUTER JOIN TBL_INV_AccountProfile InvAcc
		ON InvAcc.CustomerAccountNumber = AccMas.CustomerAccountNumber
	LEFT OUTER JOIN TBL_INV_InvestmentObjective inv
		ON inv.ObjectiveCode = InvAcc.ObjectiveCode   
	LEFT OUTER JOIN SYN_GW_TBLASSETDETAIL ad
		ON ad.GiftDetailID = gd.GiftDetailID
	LEFT OUTER JOIN SYN_GW_TBLPERSONGIFTMAP pfm
		ON (
				pfm.GiftID = g.GiftID
				AND pfm.PersonID = pg.PersonID
				)
	LEFT OUTER JOIN (
		SELECT lookupid
			,Description
		FROM SYN_GW_TBLLOOKUP
		) GftRes
		ON GftRes.lookupid = g.RestrictedIDLookup
	WHERE pif.ClientID = @GW_ClientID
		AND g.GiftTypeID = @GW_PIF_GiftTypeID
		AND g.AccountClosedDate >= @TerminationDateFrom
		AND g.AccountClosedDate <= @TerminationDateTo
		AND AccMas.ManagerCode = @ManagerCode
		AND gd.Units > 0
		AND pfm.ASSOCIATIONID <> 11

	-- Resultset
	IF (@OrderByInvObjective = 'Yes' )
	BEGIN
	SELECT DISTINCT ManagerCode AS 'Client Brief Name'
		,AllianceNumber AS 'Program Brief Name'
		,CustomerAccountNumber AS 'Advent ID'
		,ClientAccountCode1 AS 'Client Account Code1'
		,ClientAccountCode2 AS 'Client Account Code2'
		,SUBSTRING((
				SELECT DISTINCT ('; ' + ContactName)
				FROM @TBL_Gift g2
				WHERE (
						g2.AccountType = 'PIF'
						OR g2.AccountType = 'GAP'
						OR g2.AccountType = 'GAPP'
						OR g2.AccountType = 'GAPR'
						)
					AND g2.GiftID = t.GiftID
				FOR XML PATH('')
				), 3, 2000)  AS 'Participant Name' --ContactName
		,Account1
		,Account2
		,Account3
		,Account4
		,Account5
		,AccountType AS 'Account Type'
		,AccountName AS 'Account Name'
		,OriginalGiftDate AS 'Original Gift Date'
		,CASE 
			WHEN TotalGiftAmount <> 0
				THEN CONVERT(VARCHAR, TotalGiftAmount, 1)
			ELSE NULL
			END AS 'Total Gift(s)'
		,FundName AS 'Fund Name'
		,DesignationCode AS 'Designation Code'
		,MatureDate AS 'Mature Date'
		,NotificationDate AS 'Notification Date'
		,PriorValuationDate AS 'Prior Valuation Date'
		,CAST(Units AS DECIMAL(20, 4)) AS Units
		,CASE 
			WHEN DistributionAmount <> 0
				THEN CONVERT(VARCHAR, DistributionAmount, 1)
			ELSE NULL
			END AS 'Distribution Amount'
		,CASE 
			WHEN Liability <> 0
				THEN CONVERT(VARCHAR, Liability, 1)
			ELSE NULL
			END AS Liability
		,LiabilityDate AS 'Liability Date' 
		,GiftRestriction As 'Gift Restriction'
		,CASE 
			WHEN AccountClosingDateMarketValue <> 0
				THEN CONVERT(VARCHAR, AccountClosingDateMarketValue, 1)
			ELSE NULL
			END AS 'Account Closing Date MarketValue'
		,InvestmentObjective AS 'Investment Objective'
	FROM @TBL_Gift t
	ORDER BY AllianceNumber
		, InvestmentObjective
		,AccountType
		,MatureDate
	END
	ELSE
	BEGIN
		SELECT DISTINCT ManagerCode AS 'Client Brief Name'
		,AllianceNumber AS 'Program Brief Name'
		,CustomerAccountNumber AS 'Advent ID'
		,ClientAccountCode1  AS 'Client Account Code1'
		,ClientAccountCode2  AS 'Client Account Code2'
		,SUBSTRING((
				SELECT DISTINCT ('; ' + ContactName)
				FROM @TBL_Gift g2
				WHERE (
						g2.AccountType = 'PIF'
						OR g2.AccountType = 'GAP'
						OR g2.AccountType = 'GAPP'
						OR g2.AccountType = 'GAPR'
						)
					AND g2.GiftID = t.GiftID
				FOR XML PATH('')
				), 3, 2000) 'Participant Name' --ContactName
		,Account1
		,Account2
		,Account3
		,Account4
		,Account5
		,AccountType AS 'Account Type'
		,AccountName AS 'Account Name'
		,OriginalGiftDate AS 'Original Gift Date'
		,CASE 
			WHEN TotalGiftAmount <> 0
				THEN CONVERT(VARCHAR, TotalGiftAmount, 1)
			ELSE NULL
			END AS 'Total Gift(s)'
		,FundName AS 'Fund Name'
		,DesignationCode AS 'Designation Code'
		,MatureDate AS 'Mature Date'
		,NotificationDate AS 'Notification Date'
		,PriorValuationDate AS 'Prior Valuation Date'
		,CAST(Units AS DECIMAL(20, 4)) AS Units
		,CASE 
			WHEN DistributionAmount <> 0
				THEN CONVERT(VARCHAR, DistributionAmount, 1)
			ELSE NULL
			END AS 'Distribution Amount'
		,CASE 
			WHEN Liability <> 0
				THEN CONVERT(VARCHAR, Liability, 1)
			ELSE NULL
			END AS Liability
		,LiabilityDate AS 'Liability Date' 
		,GiftRestriction As 'Gift Restriction'
		,CASE 
			WHEN AccountClosingDateMarketValue <> 0
				THEN CONVERT(VARCHAR, AccountClosingDateMarketValue, 1)
			ELSE NULL
			END AS 'Account Closing Date MarketValue'
		,InvestmentObjective AS 'Investment Objective'
	FROM @TBL_Gift t
	ORDER BY AllianceNumber
			,MatureDate
	END

	SET NOCOUNT OFF;
END
