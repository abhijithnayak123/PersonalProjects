IF EXISTS (SELECT *
           FROM   sysobjects 
           WHERE  type = 'P'
                  AND name = 'USP_EX_SaveProfileTaxCascade')
    BEGIN
        DROP PROCEDURE USP_EX_SaveProfileTaxCascade;
        PRINT 'DROPPED USP_EX_SaveProfileTaxCascade';
    END
GO      
 
  
 /*********************************************************************************************************************                                                       
* Procedure Name  : USP_EX_SaveProfileTaxCascade
* Old Procedure Name  : USP_EIS_EX_PROFILE_TAX_CASCADE_InsUpdProc              
* Description     : USP_EIS_EX_PROFILE_TAX_CASCADE_InsUpdProc             
* Input           :     
* sample call:  
exec USP_EIS_EX_PROFILE_TAX_CASCADE_InsUpdProc   100002 ,'client', null  , null,null , null,null,null ,32  
exec USP_EIS_EX_PROFILE_TAX_CASCADE_InsUpdProc @ENTITYID=  300245 ,@ENTITY_TYPE='PRogram',@NEW_FASCIMILESIGNEREMPID= null  , @NEW_FASCIMILESIGNERFLAG=1,@NEW_BENEFICIARYTAXFORMID=null ,@NEW_TAXRETURNID= null,@NEW_TAX10989ID=null,@NEW_TAX1099RID= null,@USER
ID= 32  
* Modification Log: Query Indentation              
*     For update on Alerts table; modified by and modified date columns are updated.              
*                                          
* Date         Modified By  Description                                                          
*--------------------------------------------------------------------------------------------------------------------                                                       
* 23-Jul-07  Saravanan PM Created             
* 06-Mar-08  Saravanan PM Modifed as per ET 7314 by adding Fascimile_Signer_flag  
* 14-Apr-2014 Yugandhar		EXCREQ 6.1    
*********************************************************************************************************************/                            
CREATE PROCEDURE USP_EX_SaveProfileTaxCascade       
 @ENTITYID VARCHAR(15),    
 @ENTITY_TYPE VARCHAR(35),    
 @NEW_FASCIMILESIGNEREMPID INT,  
 @NEW_FASCIMILESIGNERFLAG INT,  
 @NEW_BENEFICIARYTAXFORMID INT,  
 @NEW_TAXRETURNID  INT,  
 @NEW_TAX10989ID   INT,                  
 @NEW_TAX1099RID   INT,   
 @USERID     INT  
AS      
BEGIN     
  
 DECLARE @CLIENT_TYPE_ID INT,  
   @PROGRAM_TYPE_ID INT,  
   @ACCOUNT_TYPE_ID INT,  
   @PARTICIPANT_TYPE_ID INT  
    --get list item id for entity type         
 EXEC dbo.USP_EX_GetListItemID                  
  @LIST_TYPE_NAME = 'ENTITY',                
  @LIST_ITEM_NAME = 'MANAGER',                
  @LIST_ITEM_ID = @CLIENT_TYPE_ID OUTPUT    
 EXEC dbo.USP_EX_GetListItemID                  
  @LIST_TYPE_NAME = 'ENTITY',                
  @LIST_ITEM_NAME = 'ALLIANCE',                
  @LIST_ITEM_ID = @PROGRAM_TYPE_ID OUTPUT    
 EXEC dbo.USP_EX_GetListItemID                  
  @LIST_TYPE_NAME = 'ENTITY',                
  @LIST_ITEM_NAME = 'ACCOUNT',                
  @LIST_ITEM_ID = @ACCOUNT_TYPE_ID OUTPUT    
 EXEC dbo.USP_EX_GetListItemID                  
  @LIST_TYPE_NAME = 'ENTITY',                
  @LIST_ITEM_NAME = 'CONTACT',                
  @LIST_ITEM_ID = @PARTICIPANT_TYPE_ID OUTPUT    
  
 --variables to store cascade info  
 DECLARE @PRE_FASCIMILESIGNEREMPID INT,  
   @PRE_FASCIMILESIGNERFLAG INT,  
   @PRE_BENEFICIARYTAXFORMID INT,  
   @PRE_TAXRETURNID  INT,  
   @PRE_TAX10989ID    INT,                  
   @PRE_TAX1099RID    INT   
   
 DECLARE @FASCICASCADEFLAG INT,  
  -- @FASCICASCADEACTFLAG INT,  
   @BENECASCADEFLAG INT,  
   @TAXCASCADEFLAG INT,  
   @TAX10989CASCADEFLAG INT,  
   @TAX10989RCASCADEFLAG INT  
  
 --initialize variables  
 SET @PRE_FASCIMILESIGNEREMPID = NULL  
 SET @PRE_FASCIMILESIGNERFLAG = NULL  
 SET @PRE_BENEFICIARYTAXFORMID = NULL  
 SET @PRE_TAXRETURNID  = NULL  
 SET @PRE_TAX10989ID    = NULL                  
 SET @PRE_TAX1099RID  = NULL   
  
 --table to stores enity id for which value will cascade  
 DECLARE @PROGRAM TABLE (PROGRAMID VARCHAR(15))  
 DECLARE @ACCOUNT TABLE (ACCOUNTID VARCHAR(14))  
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#BENEFICIARY]'))    
    BEGIN    
  DROP TABLE [DBO].[#BENEFICIARY]    
 END  
 CREATE TABLE #BENEFICIARY (BENEFICIARYID INT)  
   
 -- declare table for stored program ids where Tax value is overridden    
 DECLARE @PROGRAM_EQUAL_FASCIMIL TABLE (PROGRAMID VARCHAR(15))  
 DECLARE @PROGRAM_EQUAL_BENE TABLE (PROGRAMID VARCHAR(15))  
 DECLARE @PROGRAM_EQUAL_TAXRETURN TABLE (PROGRAMID VARCHAR(15))  
 DECLARE @PROGRAM_EQUAL_10989 TABLE (PROGRAMID VARCHAR(15))  
 DECLARE @PROGRAM_EQUAL_1099R TABLE (PROGRAMID VARCHAR(15))  
   
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_FASCIMIL]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_FASCIMIL]    
 END  
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_BENE]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_BENE]    
 END  
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_TAXRETURN]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_TAXRETURN]    
 END       
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_10989]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_10989]    
 END        
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_1099R]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_1099R]    
 END   
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#BENEFICIARY_EQUAL]'))    
    BEGIN    
  DROP TABLE [DBO].[#BENEFICIARY_EQUAL]    
 END  
  
 CREATE TABLE  #ACCOUNT_EQUAL_FASCIMIL (ACCOUNTID VARCHAR(14))  
 CREATE TABLE  #ACCOUNT_EQUAL_BENE (ACCOUNTID VARCHAR(14))  
 CREATE TABLE  #ACCOUNT_EQUAL_TAXRETURN (ACCOUNTID VARCHAR(14))  
 CREATE TABLE  #ACCOUNT_EQUAL_10989 (ACCOUNTID VARCHAR(14))  
 CREATE TABLE  #ACCOUNT_EQUAL_1099R (ACCOUNTID VARCHAR(14))  
  
 CREATE TABLE #BENEFICIARY_EQUAL (BENEFICIARYID INT)  
  
 CREATE INDEX NDX_FASCIMILACCOUNTID on #ACCOUNT_EQUAL_FASCIMIL (ACCOUNTID)  
 CREATE INDEX NDX_BENEACCOUNTID on #ACCOUNT_EQUAL_BENE (ACCOUNTID)  
 CREATE INDEX NDX_TAXACCOUNTID on #ACCOUNT_EQUAL_TAXRETURN (ACCOUNTID)  
 CREATE INDEX NDX_10989ACCOUNTID on #ACCOUNT_EQUAL_10989 (ACCOUNTID)  
 CREATE INDEX NDX_1099RACCOUNTID on #ACCOUNT_EQUAL_1099R (ACCOUNTID)  
 CREATE INDEX NDX_K1BENEID on #BENEFICIARY_EQUAL (BENEFICIARYID)  
  
   
  
 IF (@ENTITY_TYPE = 'MANAGER')   
 BEGIN  
  --get prev value before updation  
  SELECT   
   @PRE_FASCIMILESIGNEREMPID = FascmilineSignerEmpContactID,  
   @PRE_FASCIMILESIGNERFLAG = FASCIMILE_SIGNER_FLAG,  
   @PRE_BENEFICIARYTAXFORMID = BENEFICIARY_TAX_FORM_ID,  
   @PRE_TAXRETURNID = TAX_RETURN_ID,  
   @PRE_TAX10989ID  = TAX_10989_ID,                  
   @PRE_TAX1099RID  = TAX_1099R_ID   
  FROM  
   TBL_BR_ProfileTax  
  WHERE   
   ManagerCode = @ENTITYID  
   AND EntityDescription = CAST(@CLIENT_TYPE_ID AS VARCHAR(30)) 
    
  --Program Cascading  
  INSERT INTO @PROGRAM (PROGRAMID)  
   SELECT DISTINCT Alliancenumber FROM SYN_IT_AccountMaster WHERE Managercode = @ENTITYID  
  
  IF ((ISNULL(@PRE_FASCIMILESIGNEREMPID,'') <> ISNULL(@NEW_FASCIMILESIGNEREMPID,''))  
   OR (ISNULL(@PRE_FASCIMILESIGNERFLAG,'') <> ISNULL(@NEW_FASCIMILESIGNERFLAG,'')))  
   SET @FASCICASCADEFLAG = 1  
  ELSE  
   SET @FASCICASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_BENEFICIARYTAXFORMID,'') <> ISNULL(@NEW_BENEFICIARYTAXFORMID,''))  
   SET @BENECASCADEFLAG = 1  
  ELSE  
   SET @BENECASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_TAXRETURNID,'') <> ISNULL(@NEW_TAXRETURNID,''))  
   SET @TAXCASCADEFLAG = 1  
  ELSE  
   SET @TAXCASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_TAX10989ID,'') <> ISNULL(@NEW_TAX10989ID,''))  
   SET @TAX10989CASCADEFLAG = 1  
  ELSE  
   SET @TAX10989CASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_TAX1099RID,'') <> ISNULL(@NEW_TAX1099RID,''))  
   SET @TAX10989RCASCADEFLAG = 1  
  ELSE  
   SET @TAX10989RCASCADEFLAG = 0  
  
  -- IF there are any programs then insert/update tax details for Program level  
  IF EXISTS (SELECT PROGRAMID FROM @PROGRAM)  
  BEGIN  
     
   IF(@FASCICASCADEFLAG =1)  
   BEGIN  
    INSERT INTO @PROGRAM_EQUAL_FASCIMIL  
    SELECT AllianceNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
      AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM)  
      AND (ISNULL(FascmilineSignerEmpContactID,'')=ISNULL(@PRE_FASCIMILESIGNEREMPID,'')  
        OR FascmilineSignerEmpContactID IS NULL)  
      AND (ISNULL(FASCIMILE_SIGNER_flag,'')=ISNULL(@PRE_FASCIMILESIGNERFLAG,'')  
        OR FASCIMILE_SIGNER_flag IS NULL)  
   END  
  
  
   IF(@BENECASCADEFLAG  =1)  
   BEGIN  
    INSERT INTO @PROGRAM_EQUAL_BENE  
    SELECT AllianceNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
      AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM)  
      AND (ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
       OR BENEFICIARY_TAX_FORM_ID IS NULL)   
   END  
   IF(@TAXCASCADEFLAG  =1)  
   BEGIN  
    INSERT INTO @PROGRAM_EQUAL_TAXRETURN  
    SELECT AllianceNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
      AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM)  
      AND (ISNULL(TAX_RETURN_ID,'')=ISNULL(@PRE_TAXRETURNID,'')  
       OR TAX_RETURN_ID IS NULL)  
   END  
   IF(@TAX10989CASCADEFLAG  =1)  
   BEGIN  
    INSERT INTO @PROGRAM_EQUAL_10989  
    SELECT AllianceNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
      AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM)  
      AND (ISNULL(TAX_10989_ID,'')=ISNULL(@PRE_TAX10989ID,'')  
        OR TAX_10989_ID IS NULL)  
   END  
   IF(@TAX10989RCASCADEFLAG =1)  
   BEGIN  
    INSERT INTO @PROGRAM_EQUAL_1099R  
    SELECT AllianceNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
      AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM)  
      AND (ISNULL(TAX_1099R_ID,'')=ISNULL(@PRE_TAX1099RID,'')  
        OR TAX_1099R_ID IS NULL)  
   END  
  END  
  
  --Account Cascading  
  
  DECLARE @TEMP_ACCOUNT_FASCIMIL TABLE (ACCOUNTID VARCHAR(14))  
  DECLARE @TEMP_ACCOUNT_BENE TABLE (ACCOUNTID VARCHAR(14))  
  DECLARE @TEMP_ACCOUNT_TAXRTN TABLE (ACCOUNTID VARCHAR(14))  
  DECLARE @TEMP_ACCOUNT_10989 TABLE (ACCOUNTID VARCHAR(14))   
  DECLARE @TEMP_ACCOUNT_1099R TABLE (ACCOUNTID VARCHAR(14))   
  
  INSERT INTO @TEMP_ACCOUNT_FASCIMIL SELECT ACCOUNTID  FROM VW_EX_Account WHERE AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_FASCIMIL)  
  INSERT INTO @TEMP_ACCOUNT_BENE SELECT ACCOUNTID  FROM VW_EX_Account WHERE AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_BENE)  
  INSERT INTO @TEMP_ACCOUNT_TAXRTN SELECT ACCOUNTID FROM VW_EX_Account WHERE AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_TAXRETURN)  
  INSERT INTO @TEMP_ACCOUNT_10989 SELECT ACCOUNTID FROM VW_EX_Account WHERE AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_10989)  
  INSERT INTO @TEMP_ACCOUNT_1099R SELECT ACCOUNTID FROM VW_EX_Account WHERE AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_1099R)  
   
  --Account Cascading  
  INSERT INTO @ACCOUNT (ACCOUNTID)  
   SELECT ACCOUNTID FROM VW_EX_Account WHERE CLIENTID=@ENTITYID  
  
  -- IF there are any accounts then insert/update tax details for Account level  
  IF EXISTS (SELECT ACCOUNTID FROM @ACCOUNT)  
  BEGIN  
    
   IF EXISTS (SELECT * FROM @TEMP_ACCOUNT_FASCIMIL)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_FASCIMIL  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX   
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @TEMP_ACCOUNT_FASCIMIL)  
      AND (ISNULL(FascmilineSignerEmpContactID,'')=ISNULL(@PRE_FASCIMILESIGNEREMPID,'')  
        OR FascmilineSignerEmpContactID IS NULL)  
      AND  (ISNULL(FASCIMILE_SIGNER_FLAG,'')=ISNULL(@PRE_FASCIMILESIGNERFLAG,'')  
        OR FASCIMILE_SIGNER_FLAG IS NULL)  
   END  
   IF EXISTS (SELECT * FROM @TEMP_ACCOUNT_BENE)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_BENE  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX   
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @TEMP_ACCOUNT_BENE)  
      AND (ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
       OR BENEFICIARY_TAX_FORM_ID IS NULL)  
   END  
   IF EXISTS (SELECT * FROM @TEMP_ACCOUNT_TAXRTN)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_TAXRETURN  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30)) 
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @TEMP_ACCOUNT_TAXRTN)  
      AND (ISNULL(TAX_RETURN_ID,'')=ISNULL(@PRE_TAXRETURNID,'')  
       OR TAX_RETURN_ID IS NULL)  
   END  
   IF EXISTS (SELECT * FROM @TEMP_ACCOUNT_10989)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_10989  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @TEMP_ACCOUNT_10989)  
      AND (ISNULL(TAX_10989_ID,'')=ISNULL(@PRE_TAX10989ID,'')  
       OR TAX_10989_ID IS NULL)  
   END  
   IF EXISTS (SELECT * FROM @TEMP_ACCOUNT_1099R)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_1099R  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @TEMP_ACCOUNT_1099R)  
      AND (ISNULL(TAX_1099R_ID,'')=ISNULL(@PRE_TAX1099RID,'')   
       OR TAX_1099R_ID IS NULL)  
   END  
  END   
    
  --Beneficiary Cascading  
  INSERT INTO #BENEFICIARY (BENEFICIARYID)  
   SELECT BENEFICIARYID   
   FROM VW_EX_TRUSTPARTICIPANTTYPE  
   WHERE ClientID = @ENTITYID   
  
  IF EXISTS (SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_BENE)  
  BEGIN  
   INSERT INTO #BENEFICIARY_EQUAL  
   SELECT BeneficiaryContactID  
   FROM TBL_BR_PROFILETAX    
   WHERE EntityDescription = CAST(@PARTICIPANT_TYPE_ID AS VARCHAR(30))  
     AND BeneficiaryContactID IN(SELECT BENEFICIARYID FROM VW_EX_TRUSTPARTICIPANTTYPE WHERE CustomerAccountNumber IN   
           (SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_BENE))  
     AND (ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
      OR BENEFICIARY_TAX_FORM_ID IS NULL)  
  END  
    
    
 END  
 ELSE IF  (@ENTITY_TYPE = 'ALLIANCE')  
 BEGIN  
  
  SELECT   
   @PRE_FASCIMILESIGNEREMPID = FascmilineSignerEmpContactID,  
   @PRE_BENEFICIARYTAXFORMID = BENEFICIARY_TAX_FORM_ID,  
   @PRE_FASCIMILESIGNERFLAG = FASCIMILE_SIGNER_FLAG,  
   @PRE_TAXRETURNID = TAX_RETURN_ID,  
   @PRE_TAX10989ID  = TAX_10989_ID,                  
   @PRE_TAX1099RID  = TAX_1099R_ID   
  FROM  
   TBL_BR_PROFILETAX  
  WHERE   
   EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
   AND AllianceNumber = @ENTITYID  
  
  --Account Cascading  
  INSERT INTO @ACCOUNT (ACCOUNTID)  
   SELECT CustomerAccountnumber FROM SYN_IT_AccountMaster WHERE AllianceNumber = @ENTITYID  
   
  IF ((ISNULL(@PRE_FASCIMILESIGNEREMPID,'') <> ISNULL(@NEW_FASCIMILESIGNEREMPID,''))  
   OR (ISNULL(@PRE_FASCIMILESIGNERFLAG,'') <> ISNULL(@NEW_FASCIMILESIGNERFLAG,'')))  
   SET @FASCICASCADEFLAG = 1  
  ELSE  
   SET @FASCICASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_BENEFICIARYTAXFORMID,'') <> ISNULL(@NEW_BENEFICIARYTAXFORMID,''))  
   SET @BENECASCADEFLAG = 1  
  ELSE  
   SET @BENECASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_TAXRETURNID,'') <> ISNULL(@NEW_TAXRETURNID,''))  
   SET @TAXCASCADEFLAG = 1  
  ELSE  
   SET @TAXCASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_TAX10989ID,'') <> ISNULL(@NEW_TAX10989ID,''))  
   SET @TAX10989CASCADEFLAG = 1  
  ELSE  
   SET @TAX10989CASCADEFLAG = 0  
  
  IF (ISNULL(@PRE_TAX1099RID,'') <> ISNULL(@NEW_TAX1099RID,''))  
   SET @TAX10989RCASCADEFLAG = 1  
  ELSE  
   SET @TAX10989RCASCADEFLAG = 0  
  
  -- IF there are any accounts then insert/update tax details for Account level  
  IF EXISTS (SELECT ACCOUNTID FROM @ACCOUNT)  
  BEGIN  
    
   IF(@FASCICASCADEFLAG =1)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_FASCIMIL  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @ACCOUNT)  
      AND (ISNULL(FascmilineSignerEmpContactID,'')=ISNULL(@PRE_FASCIMILESIGNEREMPID,'')  
       OR FascmilineSignerEmpContactID IS NULL)  
      AND (ISNULL(FASCIMILE_SIGNER_FLAG,'')=ISNULL(@PRE_FASCIMILESIGNERFLAG,'')  
       OR FASCIMILE_SIGNER_FLAG IS NULL)  
   END  
  
  
   IF(@BENECASCADEFLAG =1)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_BENE  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @ACCOUNT)  
      AND (ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
       OR BENEFICIARY_TAX_FORM_ID IS NULL)  
   END  
   IF(@TAXCASCADEFLAG =1)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_TAXRETURN  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @ACCOUNT)  
      AND (ISNULL(TAX_RETURN_ID,'')=ISNULL(@PRE_TAXRETURNID,'')  
       OR TAX_RETURN_ID IS NULL)  
   END  
   IF(@TAX10989CASCADEFLAG =1)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_10989  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @ACCOUNT)  
      AND (ISNULL(TAX_10989_ID,'')=ISNULL(@PRE_TAX10989ID,'')  
       OR TAX_10989_ID IS NULL)  
   END  
   IF(@TAX10989RCASCADEFLAG =1)  
   BEGIN  
    INSERT INTO #ACCOUNT_EQUAL_1099R  
    SELECT CustomerAccountNumber  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
      AND CustomerAccountNumber IN(SELECT ACCOUNTID FROM @ACCOUNT)  
      AND (ISNULL(TAX_1099R_ID,'')=ISNULL(@PRE_TAX1099RID,'')   
       OR TAX_1099R_ID IS NULL)  
   END  
  END  
  
  --Beneficiary Cascading  
  INSERT INTO #BENEFICIARY (BENEFICIARYID)  
   SELECT BENEFICIARYID   
   FROM VW_EX_TRUSTPARTICIPANTTYPE  
   WHERE PROGRAMID = @ENTITYID  
  
  IF EXISTS (SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_BENE)  
  BEGIN  
   INSERT INTO #BENEFICIARY_EQUAL  
    SELECT BeneficiaryContactID  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@PARTICIPANT_TYPE_ID AS VARCHAR(30)) 
      AND BeneficiaryContactID IN(SELECT BENEFICIARYID FROM VW_EX_TRUSTPARTICIPANTTYPE WHERE ProgramID IN   
            (SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_BENE))  
      AND (ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
       OR BENEFICIARY_TAX_FORM_ID IS NULL)  
  END  
 END  
 ELSE IF (@ENTITY_TYPE = 'ACCOUNT')  
 BEGIN  
  SELECT   
   @PRE_FASCIMILESIGNEREMPID = FascmilineSignerEmpContactID,  
   @PRE_BENEFICIARYTAXFORMID = BENEFICIARY_TAX_FORM_ID,  
   @PRE_TAXRETURNID = TAX_RETURN_ID,  
   @PRE_TAX10989ID  = TAX_10989_ID,                  
   @PRE_TAX1099RID  = TAX_1099R_ID   
  FROM  
   TBL_BR_PROFILETAX  
  WHERE   
   EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30))  
   AND CustomerAccountNumber = @ENTITYID  
  
    
  --Beneficiary Cascading  
  INSERT INTO #BENEFICIARY (BENEFICIARYID)
  
   SELECT	 	ConRolCds.id as BENEFICIARYID
	FROM		SYN_IT_ContactAccountRoles ConAccRol
	INNER JOIN	SYN_IT_AccountMaster AccMstr ON  AccMstr.CustomerAccountNumber=ConAccRol.CustomerAccountNumber
	INNER JOIN	SYN_IT_ContactRoleCodes	ConRolCds ON ConAccRol.ContactRoleCode = ConRolCds.ID
	INNER JOIN	SYN_IT_AccountManagerCodes AccMgrCds ON AccMgrCds.ManagerCode=AccMstr.ManagerCode
	WHERE		ConRolCds.ID IN (10,21,37) AND 
				ConAccRol.CustomerAccountNumber = @ENTITYID
    
  
  IF (ISNULL(@PRE_BENEFICIARYTAXFORMID,'') <> ISNULL(@NEW_BENEFICIARYTAXFORMID,''))  
   SET @BENECASCADEFLAG = 1  
  ELSE  
   SET @BENECASCADEFLAG = 0  
  
   -- IF there are any accounts then insert/update tax details for Account level  
  IF EXISTS (SELECT BENEFICIARYID FROM #BENEFICIARY)  
  BEGIN  
   IF(@BENECASCADEFLAG = 1)  
   BEGIN  
    INSERT INTO #BENEFICIARY_EQUAL  
    SELECT BeneficiaryContactID  
    FROM TBL_BR_PROFILETAX    
    WHERE EntityDescription = CAST(@PARTICIPANT_TYPE_ID AS VARCHAR(30))  
      AND BeneficiaryContactID IN(SELECT BENEFICIARYID FROM #BENEFICIARY)  
      AND (ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
       OR BENEFICIARY_TAX_FORM_ID IS NULL)  
   END  
  END  
  
 END  
  
   
-- IF there are any programs then insert/update tax details for Program level  
 IF EXISTS (SELECT PROGRAMID FROM @PROGRAM)  
 BEGIN  
  
  -------------------------------Audit Log ----------------------------------  
  
  DECLARE @AUDITPROGRAM TABLE(PROGRAMID VARCHAR(15))  
  
  INSERT INTO @AUDITPROGRAM (PROGRAMID)  
   SELECT PROGRAMID FROM @PROGRAM_EQUAL_FASCIMIL  
  INSERT INTO @AUDITPROGRAM (PROGRAMID)  
   SELECT PROGRAMID FROM @PROGRAM_EQUAL_BENE WHERE PROGRAMID NOT IN(SELECT PROGRAMID FROM @AUDITPROGRAM)  
  INSERT INTO @AUDITPROGRAM (PROGRAMID)  
   SELECT PROGRAMID FROM @PROGRAM_EQUAL_TAXRETURN WHERE PROGRAMID NOT IN(SELECT PROGRAMID FROM @AUDITPROGRAM)  
  INSERT INTO @AUDITPROGRAM (PROGRAMID)  
   SELECT PROGRAMID FROM @PROGRAM_EQUAL_10989 WHERE PROGRAMID NOT IN(SELECT PROGRAMID FROM @AUDITPROGRAM)  
  INSERT INTO @AUDITPROGRAM (PROGRAMID)  
   SELECT PROGRAMID FROM @PROGRAM_EQUAL_1099R WHERE PROGRAMID NOT IN(SELECT PROGRAMID FROM @AUDITPROGRAM)  
  
  
  --upadte tax record for programs where FASCIMILE_SIGNER_EMPLOYEEID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET  FascmilineSignerEmpContactID = @NEW_FASCIMILESIGNEREMPID,    
    FASCIMILE_SIGNER_FLAG = @NEW_FASCIMILESIGNERFLAG,  
    MODIFIED_USER_ID = @USERID,    
    MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX    
  WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
    AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_FASCIMIL)  
   -- AND ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
    
  --upadte tax record for programs where BeneficiaryTAXFormID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET  BENEFICIARY_TAX_FORM_ID = @NEW_BENEFICIARYTAXFORMID,    
    MODIFIED_USER_ID = @USERID,    
    MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX    
  WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
    AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_BENE)  
   -- AND ISNULL(BENEFICIARY_TAX_FORM_ID,'')=ISNULL(@PRE_BENEFICIARYTAXFORMID,'')  
    
  --upadte tax record for programs where TAXReturnID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET  TAX_RETURN_ID = @NEW_TAXRETURNID,    
    MODIFIED_USER_ID = @USERID,    
    MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX   
  WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
    AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_TAXRETURN)  
   -- AND ISNULL(TAX_RETURN_ID,'')=ISNULL(@PRE_TAXRETURNID,'')  
    
  --upadte tax record for programs where TAX10989ID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET  TAX_10989_ID = @NEW_TAX10989ID,    
    MODIFIED_USER_ID = @USERID,    
    MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX   
  WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
    AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_10989)  
    
  --upadte tax record for programs where TAX10989ID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET  TAX_1099R_ID = @NEW_TAX1099RID,    
    MODIFIED_USER_ID = @USERID,    
    MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX   
  WHERE EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30))  
    AND AllianceNumber IN(SELECT PROGRAMID FROM @PROGRAM_EQUAL_1099R)  
  DELETE @AUDITPROGRAM  
  INSERT INTO @AUDITPROGRAM (PROGRAMID)  
   SELECT PROGRAMID FROM @PROGRAM WHERE PROGRAMID NOT IN(SELECT AllianceNumber FROM TBL_BR_PROFILETAX 
   where EntityDescription = CAST(@PROGRAM_TYPE_ID AS VARCHAR(30)))  
  
  --create tax record for programs which do not have a tax record  
  INSERT INTO TBL_BR_PROFILETAX                 
   (EntityDescription, AllianceNumber, FascmilineSignerEmpContactID,FASCIMILE_SIGNER_FLAG, BENEFICIARY_TAX_FORM_ID, TAX_RETURN_ID, 
   TAX_10989_ID, TAX_1099R_ID,MODIFIED_DATE, MODIFIED_USER_ID, CREATED_DATE, CREATED_USER_ID)                  
  SELECT                  
   CAST(@PROGRAM_TYPE_ID AS VARCHAR(30)),                 
   P.PROGRAMID,                   
   @NEW_FASCIMILESIGNEREMPID,  
   @NEW_FASCIMILESIGNERFLAG,  
   @NEW_BENEFICIARYTAXFORMID,                  
   @NEW_TAXRETURNID,                  
   @NEW_TAX10989ID,                  
   @NEW_TAX1099RID,  
   GETDATE(), @USERID, GETDATE(), @USERID  
  FROM @AUDITPROGRAM P  
 END  
  
-- IF there are any accounts then insert/update tax details for Account level  
 IF EXISTS (SELECT ACCOUNTID FROM @ACCOUNT)  
 BEGIN  
  
  
  DECLARE @AUDITACCOUNT TABLE(ACCOUNTID VARCHAR(14))  
  
  INSERT INTO @AUDITACCOUNT (ACCOUNTID)  
   SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_FASCIMIL  
  INSERT INTO @AUDITACCOUNT (ACCOUNTID)  
   SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_BENE WHERE ACCOUNTID NOT IN(SELECT ACCOUNTID FROM @AUDITACCOUNT)  
  INSERT INTO @AUDITACCOUNT (ACCOUNTID)  
   SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_TAXRETURN WHERE ACCOUNTID NOT IN(SELECT ACCOUNTID FROM @AUDITACCOUNT)  
  INSERT INTO @AUDITACCOUNT (ACCOUNTID)  
   SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_10989 WHERE ACCOUNTID NOT IN(SELECT ACCOUNTID FROM @AUDITACCOUNT)  
  INSERT INTO @AUDITACCOUNT (ACCOUNTID)  
   SELECT ACCOUNTID FROM #ACCOUNT_EQUAL_1099R WHERE ACCOUNTID NOT IN(SELECT ACCOUNTID FROM @AUDITACCOUNT)  
  
  UPDATE TBL_BR_PROFILETAX    
  SET FascmilineSignerEmpContactID = @NEW_FASCIMILESIGNEREMPID,   
   FASCIMILE_SIGNER_FLAG = @NEW_FASCIMILESIGNERFLAG,   
   MODIFIED_USER_ID = @USERID,    
   MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX PrfTax 
  INNER JOIN #ACCOUNT_EQUAL_FASCIMIL TmpAcc ON PrfTax.CustomerAccountNumber = TmpAcc.ACCOUNTID  
  
  --upadte tax record for programs where BeneficiaryTAXFormID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET BENEFICIARY_TAX_FORM_ID = @NEW_BENEFICIARYTAXFORMID,    
   MODIFIED_USER_ID = @USERID,    
   MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX PrfTax 
  INNER JOIN #ACCOUNT_EQUAL_BENE TmpAcc ON PrfTax.CustomerAccountNumber = TmpAcc.ACCOUNTID  
  
  --upadte tax record for programs where TAXReturnID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET TAX_RETURN_ID = @NEW_TAXRETURNID,    
   MODIFIED_USER_ID = @USERID,    
   MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX PrfTax INNER JOIN #ACCOUNT_EQUAL_TAXRETURN TmpAcc ON PrfTax.CustomerAccountNumber = TmpAcc.ACCOUNTID  
  
  --upadte tax record for programs where TAX10989ID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET TAX_10989_ID = @NEW_TAX10989ID,    
   MODIFIED_USER_ID = @USERID,    
   MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX PrfTax INNER JOIN #ACCOUNT_EQUAL_10989 TmpAcc ON PrfTax.CustomerAccountNumber = TmpAcc.ACCOUNTID  
  
  --upadte tax record for programs where TAX10989ID is not overridden  
  UPDATE TBL_BR_PROFILETAX    
  SET TAX_1099R_ID = @NEW_TAX1099RID,    
   MODIFIED_USER_ID = @USERID,    
   MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX PrfTax INNER JOIN #ACCOUNT_EQUAL_1099R TmpAcc ON PrfTax.CustomerAccountNumber = TmpAcc.ACCOUNTID  
    

  DELETE @AUDITACCOUNT  
  INSERT INTO @AUDITACCOUNT (ACCOUNTID)  
   SELECT ACCOUNTID FROM @ACCOUNT WHERE ACCOUNTID NOT IN(SELECT CustomerAccountNumber FROM TBL_BR_PROFILETAX 
   where EntityDescription = CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30)))  
  
  
  --create tax record for accounts which do not have a tax record  
  INSERT INTO TBL_BR_PROFILETAX   
   (EntityDescription, CustomerAccountNumber, FascmilineSignerEmpContactID, FASCIMILE_SIGNER_FLAG, BENEFICIARY_TAX_FORM_ID, TAX_RETURN_ID, 
   TAX_10989_ID, TAX_1099R_ID,MODIFIED_DATE, MODIFIED_USER_ID, CREATED_DATE, CREATED_USER_ID )                  
  SELECT                  
   CAST(@ACCOUNT_TYPE_ID AS VARCHAR(30)),                 
   A.ACCOUNTID,                  
   @NEW_FASCIMILESIGNEREMPID,  
   @NEW_FASCIMILESIGNERFLAG,  
   @NEW_BENEFICIARYTAXFORMID,                  
   @NEW_TAXRETURNID,                  
   @NEW_TAX10989ID,                  
   @NEW_TAX1099RID,  
   GETDATE(), @USERID, GETDATE(), @USERID  
  FROM @AUDITACCOUNT A  
  
 END    
  
    -- IF there are any Beneficiary then insert/update tax details for Beneficiary level  
 IF EXISTS (SELECT BENEFICIARYID FROM #BENEFICIARY)  
 BEGIN  
    
  
  UPDATE TBL_BR_PROFILETAX    
  SET BENEFICIARY_TAX_FORM_ID = @NEW_BENEFICIARYTAXFORMID,    
   MODIFIED_USER_ID = @USERID,    
   MODIFIED_DATE = GETDATE()    
  FROM TBL_BR_PROFILETAX   
  WHERE BeneficiaryContactID IN(SELECT BENEFICIARYID FROM #BENEFICIARY_EQUAL)  
    AND EntityDescription = CAST(@PARTICIPANT_TYPE_ID AS VARCHAR(30))  
    
  DECLARE @AUDITBENEFICIARY TABLE (BENEFICIARYID INT)  
  INSERT INTO @AUDITBENEFICIARY (BENEFICIARYID)  
   SELECT BENEFICIARYID FROM #BENEFICIARY WHERE BENEFICIARYID NOT IN(SELECT BENEFICIARYID FROM TBL_BR_PROFILETAX 
   where EntityDescription = CAST(@PARTICIPANT_TYPE_ID AS VARCHAR(30)))  
  
  
  --create tax record for Beneficiary which do not have a tax record  
  INSERT INTO TBL_BR_PROFILETAX   
   (EntityDescription, BeneficiaryContactID, BENEFICIARY_TAX_FORM_ID, TAX_RETURN_ID, TAX_10989_ID, TAX_1099R_ID,MODIFIED_DATE, 
   MODIFIED_USER_ID, CREATED_DATE, CREATED_USER_ID )                  
  SELECT                  
   CAST(@PARTICIPANT_TYPE_ID AS VARCHAR(30)),                 
   B.BENEFICIARYID,                  
   @NEW_BENEFICIARYTAXFORMID,                  
   @NEW_TAXRETURNID,                  
   @NEW_TAX10989ID,                  
   @NEW_TAX1099RID,  
   GETDATE(), @USERID, GETDATE(), @USERID  
  FROM @AUDITBENEFICIARY B  
END  
   
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#BENEFICIARY]'))    
    BEGIN    
  DROP TABLE [DBO].[#BENEFICIARY]    
 END  
  
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_FASCIMIL]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_FASCIMIL]    
 END  
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_BENE]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_BENE]    
 END  
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_TAXRETURN]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_TAXRETURN]    
 END       
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_10989]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_10989]    
 END        
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#ACCOUNT_EQUAL_1099R]'))    
    BEGIN    
  DROP TABLE [DBO].[#ACCOUNT_EQUAL_1099R]    
 END   
 IF EXISTS (SELECT * FROM TEMPDB.DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'TEMPDB.[DBO].[#BENEFICIARY_EQUAL]'))    
    BEGIN    
  DROP TABLE [DBO].[#BENEFICIARY_EQUAL]    
 END  
  
  
  
END  

       
  GO
  IF EXISTS (	SELECT *
			FROM sysobjects
			WHERE type = 'P'
			AND name = 'USP_EX_SaveProfileTaxCascade') 
	BEGIN
			PRINT 'CREATED PROCEDURE USP_EX_SaveProfileTaxCascade';
	END