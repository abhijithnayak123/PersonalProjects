IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USP_Lookup_Beneficiary]') AND type in (N'P'))
DROP PROCEDURE [dbo].[USP_Lookup_Beneficiary]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/*****************************************************************************************************************                                               
* Procedure Name  : USP_Lookup_Beneficiary
* File Name		  : USP_Lookup_Beneficiary.SQL      
* Description     : This SP loads the newly added Beneficiary into the Beneficiary Lookup Table
* Created By      : Veera
* Created Date    : May/8/2014
*-----------------------------------------------------------------------------------------------------------------          
** Date:        Author:			Bug #		Description:										Reviewed By
** ----------   -------------	------		---------------------------------------------------	-----------                                           
*  
*******************************************************************************************************************/

CREATE PROCEDURE USP_Lookup_Beneficiary(@RunID INT)
AS
BEGIN
	SET NOCOUNT ON
	
	DECLARE @TableName VARCHAR(100) ='TBL_Lookup_Beneficiary'
	DECLARE @RowCount  INT = 0
	DECLARE @LogMessage varchar(100)
	
	BEGIN TRY
		
		SET @LogMessage = 'Incremental data load - ' + @TableName 
		EXEC USP_Lookup_RefreshLog @TableName,'Started',0,0,  @LogMessage, @RunID
		
		--Inserts the Beneficiary columns and the appropriate lookup Columns
		--  which are not existing in Beneficiary lookup table
		INSERT INTO TBL_Lookup_Beneficiary(ContactID,CustomerAccountNumber,RoleCode,ParticipantID,AccountID)
		
		SELECT		DISTINCT
					 CAR.ContactID
					,CAR.CustomerAccountNumber
					,CAR.ContactRoleCode							
					,TP.ParticipantID
					,ALP.AccountID	
					
		FROM		dbo.SYN_IT_ContactAccountRoles CAR
		
		INNER JOIN	dbo.SYN_IT_AccountMaster A 
					ON	A.CustomerAccountNumber=CAR.CustomerAccountNumber
		
		INNER JOIN	dbo.SYN_IT_ContactRoleCodes	CRC 
					ON	CAR.ContactRoleCode = CRC.ID
		
		INNER JOIN	dbo.SYN_IT_AccountManagerCodes AM 
					ON	AM.ManagerCode=a.ManagerCode	
		
		INNER JOIN	dbo.TBL_Lookup_TrustParticipant TP
					ON CAR.ContactID = TP.ContactID				
		
		INNER JOIN	dbo.TBL_Lookup_Account ALP
					ON CAR.CustomerAccountNumber = ALP.CustomerAccountNumber	
		
		LEFT JOIN	dbo.TBL_Lookup_Beneficiary  LP
					ON 	CAR.ContactID = LP.ContactID
					AND	CAR.CustomerAccountNumber = LP.CustomerAccountNumber
					AND	CAR.ContactRoleCode	= LP.RoleCode		
		
		WHERE		CRC.ContactRoleCodeDesc IN ('Proxy Recipient', 'Beneficiary', 'Contingent Beneficiary')
		AND			LP.ContactID IS NULL
		
		SET @RowCount=@@RowCount
		SET @LogMessage = 'Incremental data loaded - ' + @TableName 
		EXEC USP_Lookup_RefreshLog @TableName,'Completed',0,@RowCount, @LogMessage, @RunID  
		
		--TBL_Lookup_Beneficiary_DeletedRecord
		SET @RowCount=0		
		SET @TableName ='TBL_Lookup_Beneficiary_DeletedRecord'
		
		DELETE		LP
		OUTPUT		 Deleted.ContactID
					,Deleted.CustomerAccountNumber
					,Deleted.RoleCode
					,Deleted.BeneficiaryID
					,Deleted.ParticipantID
					,Deleted.AccountID
					,GETDATE() 
		INTO		TBL_Lookup_Beneficiary_DeletedRecord(ContactID ,CustomerAccountNumber ,RoleCode ,BeneficiaryID ,ParticipantID ,AccountID,DeletedDate)
		FROM		dbo.TBL_Lookup_Beneficiary	LP
		LEFT JOIN	dbo.SYN_IT_ContactAccountRoles	T 
					ON 	LP.ContactID = T.ContactID
					AND	LP.CustomerAccountNumber = T.CustomerAccountNumber
					AND	LP.RoleCode	= T.ContactRoleCode					
		WHERE		T.ContactID IS NULL
		
		--LOGGING
		SET @RowCount=@@RowCount
		SET @LogMessage = 'Incremental data loaded - Physical Delete - ' + @TableName 
		EXEC USP_Lookup_RefreshLog @TableName, 'Completed', 0, @RowCount, @LogMessage, @RunID 
		
		RETURN 0
		
	END TRY
	BEGIN CATCH
		DECLARE @ErrorMessage	NVARCHAR(4000)
		DECLARE @ErrorSeverity	INT
		DECLARE @ErrorState		INT

		SET  @ErrorMessage	= 'Incremental data load - [ ' + @TableName + ' ] - Error: ' + Error_Message()
		SET	 @ErrorSeverity	= ERROR_SEVERITY()
		SET	 @ErrorState	= ERROR_STATE()
	    
		EXEC USP_Lookup_RefreshLog @TableName,'Error',0,0, 'Error' , @RunID
	    
		RAISERROR (@ErrorMessage,	-- Message text
				   @ErrorSeverity,	-- Severity
				   @ErrorState		-- State
				   );    
	END CATCH
END