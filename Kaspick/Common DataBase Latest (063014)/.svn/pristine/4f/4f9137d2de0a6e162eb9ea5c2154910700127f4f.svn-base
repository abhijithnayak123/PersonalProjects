IF EXISTS (SELECT *
           FROM   sysobjects 
           WHERE  type = 'P'
                  AND name = 'USP_EX_GetProfileTaxConditionsPaging')
    BEGIN
        DROP PROCEDURE USP_EX_GetProfileTaxConditionsPaging;
        PRINT 'DROPPED USP_EX_GetProfileTaxConditionsPaging';
    END
GO


  
/**************************************************************************          
* Procedure Name : USP_EX_GetProfileTaxConditionsPaging  
* Old Procedure Name  : [USP_EIS_EX_PROFILE_TAX_CONDITIONS_PAGING_SelProc]          
* Description     : Lists TAX CONDITIONS RecordS      
* Modification Log:       
* Date   Modified By  Description     
  
EXEC USP_EX_GetProfileTaxConditionsPaging  
'Account',  
'ACBOO',  
'All',  
1,  
8,  
'Tax Conditions',  
'DESC'  
                                                   
*---------------------------------------------------------------------------         
* 18-SEP-07  Chirag Parekh Created   
* 04-Apr-14 Yugandhar EXCREQ 7.4     
* 23/05/2014  Mallikarjun SP Name Renamed and Formatted  
****************************************************************************/          
CREATE PROCEDURE USP_EX_GetProfileTaxConditionsPaging      
(      
 @ENTITYTYPE  VARCHAR(30),           
 @ENTITYID  CHAR(14),      
 @VIEW_OPTION VARCHAR(100),      
 @START_ROW INT,      
 @END_ROW INT,      
 @SORT_COLUMN_NAME VARCHAR(100),      
 @SORT_ORDER VARCHAR(5)      
)      
AS      
BEGIN       
 DECLARE @TAX_ID INT,@ENTITY_TYPE_ID INT,@TOTALPAGECOUNT INT      
      
 EXEC USP_EX_GetListItemID
  @LIST_TYPE_NAME = 'ENTITY',              
  @LIST_ITEM_NAME = @ENTITYTYPE,              
  @LIST_ITEM_ID = @ENTITY_TYPE_ID OUTPUT              
       
 IF(@ENTITYTYPE = 'CONTACT')      
 BEGIN      
  SELECT @TAX_ID = TAX_ID FROM TBL_IRS_ProfileTax               
  WHERE  BeneContactID = CAST(@ENTITYID AS INT)         
 END      
 ELSE      
 BEGIN      
  SELECT @TAX_ID = TAX_ID FROM TBL_IRS_ProfileTax               
  WHERE               
  (CASE WHEN @ENTITYTYPE = 'ACCOUNT' THEN CustomerAccountNumber END) = @ENTITYID AND ENTITY_TYPE_ID=@ENTITY_TYPE_ID              
 END        
       
 DECLARE @CONDITIONS TABLE(      
  CONDITION_NAME VARCHAR(100),      
  CONDITION_ID INT,      
  CONDITION_TYPE VARCHAR(100),      
  STATUS VARCHAR(100),      
  STATUS_ID INT,      
  START_YEAR INT,      
  END_YEAR INT,      
  COMMENTS VARCHAR(1000),      
  TAX_CONDITION_ID INT)      
      
 IF @TAX_ID IS NOT NULL      
 BEGIN      
   
  INSERT INTO @CONDITIONS      
  (CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,TAX_CONDITION_ID)       
  SELECT LstItm.LISTITEMNAME AS CONDITION_NAME,LstItm.LISTITEMID AS CONDITION_ID,      
    (CASE WHEN LstItm.ABBREV = 'D' THEN 'Diagnostic Error'      
     WHEN LstItm.ABBREV = 'P' THEN 'Production Exception'      
     WHEN LstItm.ABBREV = 'O' THEN 'Other'      
     ELSE LstItm.ABBREV      
    END)AS CONDITION_TYPE,      
    LstItm1.LISTITEMNAME AS STATUS,LstItm1.LISTITEMID AS STATUS_ID,      
    PrflTaxCond.START_YEAR,PrflTaxCond.END_YEAR,PrflTaxCond.COMMENTS,PrflTaxCond.TAX_CONDITION_ID      
  FROM TBL_IRS_ProfileTaxCondition PrflTaxCond      
   INNER JOIN TBL_LISTITEM LstItm ON PrflTaxCond.CONDITION_ID = LstItm.LISTITEMID      
   INNER JOIN TBL_LISTITEM LstItm1 ON PrflTaxCond.STATUS_ID = LstItm1.LISTITEMID      
  WHERE TAX_ID = @TAX_ID AND LstItm1.LISTITEMNAME = (CASE WHEN @VIEW_OPTION = 'ACTIVE' THEN 'ACTIVE'      
            WHEN @VIEW_OPTION = 'INACTIVE' THEN 'INACTIVE'      
            ELSE LstItm1.LISTITEMNAME END)      
 END      
       
 SELECT @TOTALPAGECOUNT  = COUNT(*) FROM @CONDITIONS      
      
 IF @START_ROW <> -1      
 BEGIN      
  IF @SORT_COLUMN_NAME = 'TYPE'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY CONDITION_TYPE ASC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY CONDITION_TYPE ASC      
   END      
   ELSE      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY CONDITION_TYPE DESC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY CONDITION_TYPE DESC      
   END      
  END      
  ELSE IF @SORT_COLUMN_NAME = 'STATUS'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY STATUS ASC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY STATUS ASC      
   END      
   ELSE      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY STATUS DESC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY STATUS DESC      
   END      
  END       
  ELSE IF @SORT_COLUMN_NAME = 'START YEAR'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY START_YEAR ASC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY START_YEAR ASC      
   END      
   ELSE      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY START_YEAR DESC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY START_YEAR DESC      
   END      
  END       
  ELSE IF @SORT_COLUMN_NAME = 'END YEAR'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY END_YEAR ASC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY END_YEAR ASC      
   END      
   ELSE      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY END_YEAR DESC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY END_YEAR DESC      
   END      
  END       
  ELSE IF @SORT_COLUMN_NAME = 'COMMENTS'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY COMMENTS ASC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY COMMENTS ASC      
   END      
   ELSE      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY COMMENTS DESC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY COMMENTS DESC      
   END      
  END      
  ELSE     
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY CONDITION_NAME ASC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY CONDITION_NAME ASC      
   END      
   ELSE      
   BEGIN     
    SELECT * FROM           
    (SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    ROW_NUMBER() OVER (ORDER BY CONDITION_NAME DESC) AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    from @CONDITIONS) AS UNIVERSE          
    WHERE ROWNUMBER >= @START_ROW AND ROWNUMBER <= @END_ROW      
    ORDER BY CONDITION_NAME DESC      
   END      
  END      
 END       
 ELSE       
 BEGIN      
  IF @SORT_COLUMN_NAME = 'TYPE'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY CONDITION_TYPE ASC      
   END      
   ELSE      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY CONDITION_TYPE DESC      
   END      
  END      
  ELSE IF @SORT_COLUMN_NAME = 'STATUS'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY STATUS ASC      
   END      
   ELSE      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY STATUS DESC      
   END      
  END       
  ELSE IF @SORT_COLUMN_NAME = 'START YEAR'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY START_YEAR ASC      
   END      
   ELSE      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY START_YEAR DESC      
   END      
  END       
  ELSE IF @SORT_COLUMN_NAME = 'END YEAR'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY END_YEAR ASC      
   END      
   ELSE      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY END_YEAR DESC      
   END      
  END       
  ELSE IF @SORT_COLUMN_NAME = 'COMMENTS'      
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,   
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY COMMENTS ASC      
   END      
   ELSE      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY COMMENTS DESC      
   END      
  END      
  ELSE       
  BEGIN      
   IF @SORT_ORDER='ASC'      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY CONDITION_NAME ASC      
   END      
   ELSE      
   BEGIN      
    SELECT CONDITION_NAME,CONDITION_ID,CONDITION_TYPE,STATUS,STATUS_ID,START_YEAR,END_YEAR,COMMENTS,      
    0 AS ROWNUMBER,ISNULL(@TOTALPAGECOUNT,0) AS [TOTALCOUNT],TAX_CONDITION_ID      
    FROM @CONDITIONS      
    ORDER BY CONDITION_NAME DESC      
   END      
  END      
 END     
END      
    
    

GO
  IF EXISTS (	SELECT *
			FROM sysobjects
			WHERE type = 'P'
			AND name = 'USP_EX_GetProfileTaxConditionsPaging') 
	BEGIN
			PRINT 'CREATED PROCEDURE USP_EX_GetProfileTaxConditionsPaging';
	END
    
    