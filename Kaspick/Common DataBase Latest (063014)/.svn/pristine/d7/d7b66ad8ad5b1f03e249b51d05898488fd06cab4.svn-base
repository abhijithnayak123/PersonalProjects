/****** Object:  StoredProcedure [dbo].[UPS_SIT_GetOtherReceiptAndExpense]    Script Date: 07/02/2014 09:22:21 ******/
IF EXISTS (
		SELECT 1
		FROM sys.objects
		WHERE object_id = OBJECT_ID(N'[dbo].[UPS_SIT_GetOtherReceiptAndExpense]')
			AND type IN (
				N'P'
				,N'PC'
				)
		)
	DROP PROCEDURE [dbo].[UPS_SIT_GetOtherReceiptAndExpense]
GO

/****** Object:  StoredProcedure [dbo].[UPS_SIT_GetOtherReceiptAndExpense]    Script Date: 07/02/2014 09:22:21 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/******************************************************************************    
** Name:     UPS_SIT_GetOtherReceiptAndExpense    
** Short Desc:  Get Error details from table 'TBL_EIS_SIT_EBR_OTHERRECEIPTSANDEXPENSES'.      
**    
** Full Description : Get Error details from table 'TBL_EIS_SIT_EBR_OTHERRECEIPTSANDEXPENSES'.   
**            
**    
** Sample Call       
        EXEC UPS_SIT_GetOtherReceiptAndExpense  1,'01/01/2013'
**    
** Return values: NONE    
**    
**    
** Standard declarations    
**       SET LOCK_TIMEOUT         30000   -- 30 seconds    
**     
** Created By: Mohamed Salih    
** Company   : Kaspick & Company    
** Project   : Back Office Integration - Sub Accounting   
** Created DT: 09/01/2014      
**                
*******************************************************************************    
**       Change History    
*******************************************************************************    
** Date:        Author:  Bug #     Description:                           Rvwd    
** --------     -------- ------    -------------------------------------- --------    
**   
*******************************************************************************    
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved    
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION    
*******************************************************************************/
CREATE PROCEDURE [dbo].[UPS_SIT_GetOtherReceiptAndExpense] @ValuationID INT
	,@PeriodEndDate DATETIME
AS
BEGIN
	SET NOCOUNT ON;
	SET LOCK_TIMEOUT 30000;-- 30 seconds    

	--  Variable Declarations  --   
	--  Temp tables, Cursors, Table Variables  --    
	DECLARE @EndDate DATETIME
	DECLARE @StartDate DATETIME

	SET @EndDate = @PeriodEndDate
	SET @StartDate = CAST((STR(YEAR(@EndDate)) + '/' + STR(MONTH(@EndDate)) + '/1') AS DATETIME)

	SELECT AccMas.ExternalCustomerID AS AccountID
		,PVal.AccountType
		,LTRIM(RTRIM(ISNULL(AccMas.CustomerDescriptionLine1, '') + '' + ISNULL(AccMas.CustomerDescriptionLine2, '') + '' + ISNULL(AccMas.CustomerDescriptionLine3, '') + '' + ISNULL(AccMas.CustomerDescriptionLine4, ''))) AS AccountFullName
		,OthRcptExp.OtherReceiptAndExpenseID
		,OthRcptExp.ValuationID
		,TrnsDtlMst.TransactionDetailName
		,TrnsTyp.TransactionTypeDescription
		,OthRcptExp.TransactionDate
		,OthRcptExp.PrincipalValue
		,OthRcptExp.IncomeValue
		,@StartDate AS StartDate
		,@EndDate AS EndDate
	FROM TBL_SIT_EBROtherReceiptAndExpense OthRcptExp
	INNER JOIN TBL_PV_Valuation PVal
		ON OthRcptExp.ValuationID = PVal.ValuationID
	INNER JOIN TBL_SIT_TransactionDetailMaster TrnsDtlMst
		ON TrnsDtlMst.TransactionDetailID = OthRcptExp.TransactionDetailID
	INNER JOIN TBL_SIT_TransactionType TrnsTyp
		ON TrnsTyp.TransactionTypeID = TrnsDtlMst.TransactionTypeID
	INNER JOIN SYN_IT_AccountMaster AccMas
		ON AccMas.CustomerAccountNumber = PVal.CustomerAccountNumber
	WHERE OthRcptExp.ValuationID = @ValuationID

	SET NOCOUNT OFF;
END
