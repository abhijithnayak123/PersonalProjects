/****** Object:  StoredProcedure [dbo].[USP_PP_GetPGCalcBeneficiaryPaymentLeadTime]    Script Date: 09/23/2013 11:22:21 ******/
IF EXISTS (
		SELECT 1
		FROM sys.objects
		WHERE object_id = OBJECT_ID(N'[dbo].[USP_PP_GetPGCalcBeneficiaryPaymentLeadTime]')
			AND type IN (
				N'P'
				,N'PC'
				)
		)
	DROP PROCEDURE [dbo].[USP_PP_GetPGCalcBeneficiaryPaymentLeadTime]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/******************************************************************************        
** Name:     USP_PP_GetPGCalcBeneficiaryPaymentLeadTime 
**       
** Short Desc: To Get Beneficiary LeadTime
**                      
** Full Description:  To Get Beneficiary LeadTime where Input is Contact in XML Format      
**           
**        
** Sample Call        
EXEC USP_PP_GetPGCalcBeneficiaryPaymentLeadTime 
 '<PGCalcPaymentDataCollection>
					 <InsertList>
					 <PGCalcPaymentData ManagerCode = "ACL" Account1=""  Account2=""  CustomerAccountNumber="7770010"  ContactID="753"  GiftDate="11/2/1998 12:00:00 AM"  PayeeName="Betty R. Baker"  PaymentAmount="1097.81"  
					 PaymentBatch="0" PaymentDate="1/30/2008 12:00:00 AM"  PaymentID="0"  PeriodEndDate=" "  PersonCode="116627"  PGCalcPaymentID="1230948"  PIFIncome="0"  PIFUnits="11111"  PIFValue="0"  
					 SeparateCheck="0"  TaxWithholding="0"  MergedPGCalcPaymentID="1"  MergedPaymentAmount="1097.81"  UserId="300008" 
					 InstructionID="1" BeneficiaryDistributionID="2" />
					</InsertList><UpdateList></UpdateList><DeleteList></DeleteList></PGCalcPaymentDataCollection>'    

**        
** Return values: NONE        
**                      
** Standard declarations                      
**       SET LOCK_TIMEOUT         30000   -- 30 seconds                      
**                       
** Created By: Debajyoti kalita   
** Company   : Kaspick & Company                      
** Project   : BackOffice Integration                      
** Created DT: 23-Sep-13                 
**                                  
*******************************************************************************                
**       Change History                      
*******************************************************************************                
** Date:      Author:	 Bug #     Description:                           
** --------  --------	 ------    -------------------------------------- 
** 26-may-14  Salih                Splitcheck implementation changes, AdviceFlag check modified from 1 to -4
** 26-jun-14  Salih                Modified Rolecode implementation from Rolecode description to ID.
*******************************************************************************                      
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved                      
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION                      
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_PP_GetPGCalcBeneficiaryPaymentLeadTime] @XMLPGCalcInfo XML
AS
BEGIN TRY
	--  Initial Set statements  --      
	SET NOCOUNT ON;
	SET LOCK_TIMEOUT 30000;-- 30 seconds 

	--  Variable Declarations  -- 
	DECLARE @ContactRoleCode INT
	DECLARE @MinCheck INT
	DECLARE @MinNonCheck INT
	DECLARE @MinimumWirePostingDays INT

	CREATE TABLE #TmpBeneLeadTime (
		CustomerAccountNumber VARCHAR(14)
		,ContactID INT
		,ContactRoleCode INT
		,BeneficiaryDistributionID INT
		,PaymentType CHAR(20)
		,LeadTime INT
		,FixedOrPercentageFlag SMALLINT
		,AdviceFlag SMALLINT
		)

	CREATE TABLE #TmpWirePostingDays (
		CustomerAccountNumber VARCHAR(14)
		,ContactID INT
		,BeneficiaryDistributionID INT
		,DaysValue INT
		)

	----Assigning value to Variables
	-- 26-jun-2014  Salih: Modified Rolecode implementation from Rolecode description to ID.
	SET @ContactRoleCode = 21 --'Beneficiary'
		--get all beneficiaries in given account      

	INSERT INTO #TmpBeneLeadTime (
		CustomerAccountNumber
		,ContactID
		,ContactRoleCode
		,BeneficiaryDistributionID
		,PaymentType
		,FixedOrPercentageFlag
		,AdviceFlag
		)
	SELECT DISTINCT XMLData.CustomerAccountNumber
		,XMLData.ContactID
		,@ContactRoleCode
		,Bene.BeneficiaryDistributionID
		,PaymentType
		,Bene.FixedOrPercentageFlag
		,Bene.AdviceFlag
	FROM SYN_IT_BeneficiaryDistributions Bene
	INNER JOIN (
		SELECT x.Item.value('@CustomerAccountNumber[1]', 'varchar(14)') AS CustomerAccountNumber
			,x.Item.value('@ContactID[1]', 'INT') AS ContactID
			,x.Item.value('@BeneficiaryDistributionID[1]', 'INT') AS BeneficiaryDistributionID
		FROM @XMLPGCalcInfo.nodes('//PGCalcPaymentDataCollection/InsertList/PGCalcPaymentData') AS x(Item)
		) XMLData
		ON XMLData.BeneficiaryDistributionID = Bene.BeneficiaryDistributionID
	INNER JOIN SYN_IT_ContactPaymentMethods ContPayMeth
		ON Bene.PayeePaymentMethodID = ContPayMeth.ID

	--get the default values for check and noncheck from sys table      
	SELECT @MinCheck = MinimumCheckPostingDays
		,@MinNonCheck = MinimumNonCheckPostingDays
		,@MinimumWirePostingDays = MinimumWirePostingDays
	FROM TBL_PP_SystemAdministration

	---Get the list of Contact for PaymentMethod = 'Wire'
	INSERT INTO #TmpWirePostingDays (
		ContactID
		,BeneficiaryDistributionID
		,DaysValue
		)
	SELECT TmpBeneLeadTime.ContactID
		,TmpBeneLeadTime.BeneficiaryDistributionID
		,@MinimumWirePostingDays AS DaysValue
	FROM #TmpBeneLeadTime TmpBeneLeadTime
	WHERE PaymentType = 'Wire'

	----lowest priority Manager		   
	UPDATE #TmpBeneLeadTime
	SET LeadTime = MgrRule.DaysValue
	FROM #TmpBeneLeadTime TmpBeneLeadTime
	INNER JOIN dbo.VW_IT_ProfileInfo VWProfileInfo
		ON TmpBeneLeadTime.ContactID = VWProfileInfo.ContactID
			AND TmpBeneLeadTime.ContactRoleCode = VWProfileInfo.ContactRoleCode
			AND TmpBeneLeadTime.CustomerAccountNumber = VWProfileInfo.CustomerAccountNumber
	INNER JOIN dbo.TBL_PP_ManagerRule MgrRule
		ON MgrRule.ManagerCode = VWProfileInfo.ManagerCode
	WHERE MgrRule.DaysValue IS NOT NULL
		--AND VWProfileInfo.ContactRoleCode = @ContactRoleCode

	--second priority CustomerAccountNumber  
	UPDATE #TmpBeneLeadTime
	SET LeadTime = CASE 
			WHEN AccntRule.DaysValue IS NULL
				THEN LeadTime
			ELSE AccntRule.DaysValue
			END
	FROM #TmpBeneLeadTime TmpBeneLeadTime
	INNER JOIN dbo.VW_IT_ProfileInfo VWProfileInfo
		ON TmpBeneLeadTime.ContactID = VWProfileInfo.ContactID
			AND TmpBeneLeadTime.ContactRoleCode = VWProfileInfo.ContactRoleCode
			AND TmpBeneLeadTime.CustomerAccountNumber = VWProfileInfo.CustomerAccountNumber
	INNER JOIN dbo.TBL_PP_AccountRule AccntRule
		ON AccntRule.CustomerAccountNumber = VWProfileInfo.CustomerAccountNumber
	WHERE AccntRule.DaysValue IS NOT NULL
		--AND VWProfileInfo.ContactRoleCode = @ContactRoleCode

	--Highest priority Contact       
	UPDATE #TmpBeneLeadTime
	SET LeadTime = CASE 
			WHEN CnctRule.DaysValue IS NULL
				THEN LeadTime
			ELSE CnctRule.DaysValue
			END
	FROM #TmpBeneLeadTime TmpBeneLeadTime
	INNER JOIN dbo.VW_IT_ProfileInfo VWProfileInfo
		ON TmpBeneLeadTime.ContactID = VWProfileInfo.ContactID
			AND TmpBeneLeadTime.ContactRoleCode = VWProfileInfo.ContactRoleCode
			AND TmpBeneLeadTime.CustomerAccountNumber = VWProfileInfo.CustomerAccountNumber
	INNER JOIN dbo.TBL_PP_ContactRule CnctRule
		ON CnctRule.ContactID = VWProfileInfo.Contactid
	WHERE CnctRule.DaysValue IS NOT NULL
		AND VWProfileInfo.ContactRoleCode = @ContactRoleCode

	UPDATE #TmpBeneLeadTime
	SET LeadTime = CASE 
			WHEN ISNULL(LeadTime, 0) > @MinNonCheck
				THEN ISNULL(LeadTime, 0)
			ELSE @MinNonCheck
			END
	FROM #TmpBeneLeadTime TmpBeneLeadTime
	WHERE PaymentType IS NULL
		OR PaymentType NOT IN (
			'CHECK'
			,'WIRE'
			)

	--For Chek payment method MW rules..If not found then System admin value      
	UPDATE #TmpBeneLeadTime
	SET LeadTime = CASE 
			WHEN LeadTime IS NULL
				THEN @MinCheck
			ELSE LeadTime
			END
	FROM #TmpBeneLeadTime TmpBeneLeadTime
	WHERE (
			FixedOrPercentageFlag = 3
			OR FixedOrPercentageFlag = 4
			)
		AND PaymentType IS NOT NULL
		AND (
			PaymentType = 'CHECK'
			OR (
				-- 26-may-2014	Salih :  Splitcheck implementation changes, AdviceFlag check modified from 1 to -4 
				PaymentType = 'CHECK'
				AND AdviceFlag = - 4
				)
			)

	UPDATE #TmpBeneLeadTime
	SET LeadTime = CASE 
			WHEN ISNULL(LeadTime, 0) > TmpWirePstng.DaysValue
				THEN ISNULL(LeadTime, 0)
			ELSE TmpWirePstng.DaysValue
			END
	FROM #TmpBeneLeadTime TmpBeneLeadTime
	INNER JOIN #TmpWirePostingDays TmpWirePstng
		ON TmpBeneLeadTime.BeneficiaryDistributionID = TmpWirePstng.BeneficiaryDistributionID

	---Return data  
	SELECT CustomerAccountNumber
		,ContactID
		,ContactRoleCode
		,LeadTime
		,BeneficiaryDistributionID
	FROM #TmpBeneLeadTime
	ORDER BY ContactID
END TRY

BEGIN CATCH
	SELECT ERROR_MESSAGE() AS ErrorMessage
END CATCH
