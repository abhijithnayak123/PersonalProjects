IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc'
		)
BEGIN
	DROP PROCEDURE USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc;

	PRINT 'DROPPED USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc';
END
GO

/******************************************************************************                    
** Name:     USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc                    
** Short Desc: Retrieves date difference of Valuation Date and Today's Date for deliverable items.   
**                    
** Full Description:   
**                            
** Input Arguments:   
**       
** Sample Call   
**    
   
    DECLARE @XMLDeliverableItems XML  
    SET @XMLDeliverableItems ='<DeliverableItemsDataToValidateCollection><InsertList></InsertList><UpdateList></UpdateList><DeleteList></DeleteList><SelectList><DeliverableItemsDataToValidate AccountID="446"  BeneficiaryID="645"  ClientEmployeeID="0"  ClientID="1"  DeliverableItemID="3"  DeliverableQueueID="1"  DonorID="0"  TrustparticipantID="27"  DeliverableFrequency="A"  /><DeliverableItemsDataToValidate AccountID="105401"  BeneficiaryID="124982"  ClientEmployeeID="0"  ClientID="100137"  DeliverableItemID="14454"  DeliverableQueueID="2"  DonorID="0"  TrustparticipantID="124926"  DeliverableFrequency="A"  /><DeliverableItemsDataToValidate AccountID="105584"  BeneficiaryID="126052"  ClientEmployeeID="0"  ClientID="100139"  DeliverableItemID="1000"  DeliverableQueueID="1"  DonorID="0"  TrustparticipantID="125969"  DeliverableFrequency="A"  /><DeliverableItemsDataToValidate AccountID="102179"  BeneficiaryID="107082"  ClientEmployeeID="0"  ClientID="100026"  DeliverableItemID="13795"  DeliverableQueueID="2"
  DonorID="0"  TrustparticipantID="108050"  DeliverableFrequency="A"  />  
</SelectList></DeliverableItemsDataToValidateCollection>'   
 EXEC USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc  
    @XMLDeliverableItems  
   
   
**           
** Return values: Null  
**                    
**                    
** Standard declarations                    
**       SET LOCK_TIMEOUT         30000   -- 30 seconds                    
**                     
** Created By: Venugopal B  
** Company   : Kaspick & Company                    
** Project   : Excelsior  - BeneReport                    
** Created DT: 08/25/2009                    
**                                
*******************************************************************************              
**       Change History                    
*******************************************************************************              
** Date:        Author:  Bug #     Description:                           Rvwd              
** --------  -------- ------    -------------------------------------- --------              
** 12-Mar-2012	  Anand Kumar    Changes for Adding Comments as per Stored Procedure standard template.
** 14-Mar-12	  Anand Kumar    ERD changes implemetation.  
** 24-Jun-2014		Mukesh		 SP Name Renamed and Formatted 
*******************************************************************************                    
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved                    
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION                    
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc]
	-- paremeters here        
	@XMLDeliverableItems XML
AS
BEGIN
	--  Initial Set statements  --        
	--SET NOCOUNT ON;        
	--SET LOCK_TIMEOUT                30000;   -- 30 seconds        
	--SET TRANSACTION ISOLATION LEVEL SNAPSHOT;        
	--  Variable Declarations  --        
	DECLARE @procname VARCHAR(60);
	DECLARE @ErrorMessage VARCHAR(1000);
	DECLARE @ErrorNumber INT;
	DECLARE @Cnt INT;
	DECLARE @MaxCnt INT;
	-- Variables used for error handling - uncomment if needed        
	DECLARE @val1 VARCHAR(30);
	DECLARE @val2 VARCHAR(30);
	--  Temp tables, Cursors, Table Variables  --        
	DECLARE @DeliverableItemData TABLE (
		DeliverableItemID INT
		,AccountID INT
		,DeliverableQueueID INT
		);
	DECLARE @DistinctAccountID TABLE (
		AccountID INT
		,DeliverableQueueID INT
		,ValuationDate DATETIME
		)

	--  Variable Data Assignment  --        
	SET @procname = 'USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc';
	SET @Cnt = 0;

	-- Body of procedure  --        
	BEGIN TRY
		INSERT INTO @DeliverableItemData
		SELECT XMLdoc.DeliverableItemData.value('@DeliverableItemID[1]', 'int') AS DeliverableItemID
			,XMLdoc.DeliverableItemData.value('@AccountID[1]', 'int') AS AccountID
			,XMLdoc.DeliverableItemData.value('@DeliverableQueueID[1]', 'int') AS DeliverableQueueID
		FROM @XMLDeliverableItems.nodes('//DeliverableItemsDataToValidateCollection/SelectList/DeliverableItemsDataToValidate') AS XMLdoc(DeliverableItemData)
		WHERE XMLdoc.DeliverableItemData.value('@DeliverableFrequency[1]', 'varchar') = 'A'

		INSERT INTO @DistinctAccountID (
			AccountID
			,DeliverableQueueID
			)
		SELECT DISTINCT AccountID
			,DeliverableQueueID
		FROM @DeliverableItemData

		UPDATE @DistinctAccountID
		SET ValuationDate = dbo.FnEIS_PP_TrustValDate(DA.AccountID, DQ.DeliverableQueueYear + 1)
		FROM @DistinctAccountID DA
		INNER JOIN TBL_EIS_DT_DELIVERABLE_QUEUE DQ ON DA.DeliverableQueueID = DQ.DeliverableQueueID

		SELECT DID.DeliverableItemID
			,42 AS RuleID
			,'ValuationDateDifference' AS Attribute
			,DATEDIFF(DAY, DA.ValuationDate, GetDate()) AS ActualValue
			,DA.ValuationDate AS DisplayMessage
		FROM @DeliverableItemData DID
		INNER JOIN @DistinctAccountID DA ON DID.AccountID = DA.AccountID
			AND DID.DeliverableQueueID = DA.DeliverableQueueID
		INNER JOIN TBL_EIS_DT_Deliverable_Items DI ON DID.DeliverableItemID = DI.DeliverableItemID
		WHERE ISNULL(DA.ValuationDate, 0) <> 0
	END TRY

	BEGIN CATCH
		SET @ErrorMessage = ERROR_MESSAGE();
		SET @ErrorNumber = ERROR_NUMBER();
		SET @val1 = '';
		SET @val2 = '';

		EXEC dbo.spSYS_ErrorHandler @codename = @procname
			,@errmsg = @ErrorMessage
			,@errnbr = @ErrorNumber
			,@val1 = ''
			,@val1str = 'USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc: Cannot Select.'
			,@val2 = ''
			,@val2str = '';
	END CATCH
		-- End of procedure  --   
END
GO

IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc'
		)
BEGIN
	PRINT 'CREATED USP_EIS_RPT_BR_VE_DR_FutureValuationDate_SelProc';
END