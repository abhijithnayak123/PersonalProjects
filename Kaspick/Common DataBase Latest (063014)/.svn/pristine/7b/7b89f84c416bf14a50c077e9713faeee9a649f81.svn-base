IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_UpdTradingClose'
		)
BEGIN
	DROP PROCEDURE USP_EX_UpdTradingClose;

	PRINT 'DROPPED USP_EX_UpdTradingClose';
END
GO

/******************************************************************************      
** Name : USP_EX_UpdTradingClose
** Old Name:     USP_EIS_EX_TRADING_CLOSE_UpdProc      
** Short Desc:       
**         SP created to Close the trading tasks      
** Full Description      
**         Alert Id's will be passed as a parameter, where in to the respective alertid's trading tasks will be completed      
**       
** Sample Call      
        USP_EX_UpdTradingClose @User_ID = 58, @Closed_Date = '2007-03-14 16:36:59.887', @XMLData='<NewDataSet><TBL_DETAILS><Alert_Id>130048</Alert_Id></TBL_DETAILS></NewDataSet>', @XPATH = '/NewDataSet/TBL_DETAILS'      
**      
** Return values: NONE      
**      
**      
** Standard declarations      
**       SET LOCK_TIMEOUT         30000   -- 30 seconds      
**       
** Created By: N.R.AMARNATH      
** Company   : Kaspick & Company      
** Project   : Excelsior -- IM PROFILE      
** Created DT: 04/04/2007      
**                  
*******************************************************************************      
**       Change History      
*******************************************************************************      
** Date:        Author:  Bug #     Description:                           Rvwd      
** --------     -------- ------    -------------------------------------- --------      
** <mm/dd/yyyy>     
** 05/23/2007   Rahul              Modified to implement Supplement ID Related   
**           changes. 
** 04/03/2014  Sanath            Close option in trading tasks for req INVREQ 3.1
** 23-MAY-2014  Mallikarjun     SP Name Renamed and Formatted  
*******************************************************************************      
** Copyright (C) <CopyrightYear,,Year> Kaspick & Company, All Rights Reserved      
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION      
*******************************************************************************/
CREATE PROCEDURE [dbo].[USP_EX_UpdTradingClose] (
	@user_id INT
	,@closed_date DATETIME
	,@xmldata VARCHAR(MAX)
	,@xpath VARCHAR(4000)
	)
AS
--  Variable Declarations  --      
DECLARE @procname VARCHAR(60);
DECLARE @ErrorMessage VARCHAR(1000);
DECLARE @ErrorNumber INT;
-- Variables used for error handling -       
DECLARE @val1 VARCHAR(Max);
DECLARE @val2 VARCHAR(30);

--  Variable Data Assignment  --      
SET @procname = 'USP_EX_UpdTradingClose';

BEGIN
	DECLARE @hdoc INT;
	DECLARE @alertstatusid INT;
	DECLARE @alertstatus VARCHAR(50);
	DECLARE @tab TABLE (alertID INT)

	BEGIN TRY
		BEGIN TRANSACTION

		--Gets the AlertStatus ID from List tables      
		SELECT @alertstatusid = LstItm.ListItemID
		FROM TBL_ListItem LstItm
		INNER JOIN TBL_ListType LstTyp ON LstItm.ListTypeID = LstTyp.ListTypeID
		WHERE LstTyp.listtypename = 'TRADING TASKS STATUS'
			AND LstItm.listitemname = 'Completed'

		--Gets the AlertStatus from List tables      
		SELECT @alertstatus = LstItm.IvanValue
		FROM TBL_ListItem LstItm
		INNER JOIN TBL_ListType LstTyp ON LstItm.listtypeid = LstTyp.listtypeid
		WHERE LstTyp.listtypename = 'TRADING TASKS STATUS'
			AND LstItm.listitemid = @alertstatusid

		EXEC SP_XML_PREPAREDOCUMENT @hdoc OUTPUT
			,@xmldata

		INSERT INTO @tab (alertid)
		SELECT *
		FROM Openxml(@hdoc, @xpath, 2) WITH (alert_id INT)

		--SELECT * FROM @Tab      
		UPDATE TBL_BR_AlertEvent
		SET alertstatus = @alertstatus
			,modified_date = getdate()
			,completiondate = @closed_date
			,completedby = @user_id
			,modified_user_id = @user_id
		FROM TBL_BR_AlertEvent aes
		INNER JOIN @tab t ON aes.alertid = t.alertid

		EXEC SP_XML_REMOVEDOCUMENT @hdoc

		COMMIT TRANSACTION
	END TRY

	BEGIN CATCH
		ROLLBACK TRANSACTION;

		SET @ErrorMessage = ERROR_MESSAGE();
		SET @ErrorNumber = ERROR_NUMBER();
		SET @val1 = Cast(@xmldata AS VARCHAR(MAX));
		SET @val2 = Cast(@xpath AS VARCHAR(30));

		EXEC USP_EX_SYSErrorHandler @codename = @procname
			,@ErrorMessage = @ErrorMessage
			,@ErrorNumber = @ErrorNumber
			,@val1 = @val1
			,@val1str = 'xmldata'
			,@val2 = @val2
			,@val2str = 'xpath';
	END CATCH;
END
GO

IF EXISTS (
		SELECT *
		FROM sysobjects
		WHERE type = 'P'
			AND NAME = 'USP_EX_UpdTradingClose'
		)
BEGIN
	PRINT 'CREATED USP_EX_UpdTradingClose';
END