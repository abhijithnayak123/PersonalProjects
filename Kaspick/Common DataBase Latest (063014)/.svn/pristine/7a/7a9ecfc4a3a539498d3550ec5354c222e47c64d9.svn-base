IF EXISTS (SELECT *
           FROM   sysobjects 
           WHERE  type = 'P'
                  AND name = 'USP_EX_InsPolicyitemCascade')
    BEGIN
        DROP PROCEDURE USP_EX_InsPolicyitemCascade;
        PRINT 'DROPPED USP_EX_InsPolicyitemCascade';
    END
GO  
  
SET QUOTED_IDENTIFIER ON
GO 
/******************************************************************************                      
** NAME : USP_EX_InsPolicyitemCascade
** Old NAME:     USP_EIS_EX_POLICYITEM_CASCADE_INSPROC                       
** SHORT DESC: TO INSERT/UPDATE THE POLICYITEM TABLE FOR A PARTICULAR DIMENSION.                
**                      
** FULL DESCRIPTION: TO INSERT/UPDATE THE POLICYITEM TABLE FOR A PARTICULAR DIMENSION.                
**                              
** @POLICYDIMENSIONNAME: FOR WHICH RECORD HAS TO BE ADDED IN POLICYITEM.                
   @LIST_ITEM_ID: USED TO FETCH THE DROPDOWNTEXT OR BIT VALUE TO SAVE FOR DATATYPE [LIST/LOGICAL].                
   @POLICYLEVEL: FOR WHICH RECORD HAS TO BE ADDED IN POLICYITEM.                
   @OWNERID INT: FOR WHICH RECORD HAS TO BE ADDED IN POLICYITEM.                
   @SCALARVALUE: IS VALUE TOBE SAVED FOR DATATYPE [DATE/NUMERIC].          
   @USERID: USER WHO IS UPDATING/INSERTING/DELETING THE POLICY.          
   @POLICYCATEGORY: IS A OPTIONAL PARAMETER WHICH TAKES SPECIAL CARE FOR 'REPORTING' POLICYCATEGORY.                
** SAMPLE CALL                      
  [USP_EIS_EX_POLICYITEM_CASCADE_INSPROC] 'Conference Call','client',200164,32                         
** RETURN VALUES: NONE                      
**                      
**                      
** STANDARD DECLARATIONS                      
**       SET LOCK_TIMEOUT         30000   -- 30 SECONDS                      
                  
** CREATED BY: VSHIVHARE                      
** COMPANY   : KASPICK & COMPANY                      
** PROJECT   : EXCELSIOR                      
** CREATED DT: JULY 11 2007    
**                                  
*******************************************************************************                
**       CHANGE HISTORY                      
*******************************************************************************                
** DATE:        AUTHOR:  BUG #     DESCRIPTION:                           RVWD                
** --------     -------- ------    -------------------------------------- --------                
  13 July 2007  Vshivhare modified for PolicyItem Identity feed   
** 03/18/2008 Saravanan PM ET# 6274 Modified  && Updating Billing Information of TA - Only Acount Level BillingProfile            
** 12/04/2014 Yugandhar				EXCREQ 6.1 

EXEC USP_EX_InsPolicyitemCascade 'Trustee Change Date','MANAGER','AZ',100048

 *******************************************************************************                      
** COPYRIGHT (C) <COPYRIGHTYEAR,,YEAR> KASPICK & COMPANY, ALL RIGHTS RESERVED                      
** COMPANY CONFIDENTIAL -- NOT FOR DISTRIBUTION           'Srt dt for perform.','client'           
*******************************************************************************/                      
CREATE PROCEDURE USP_EX_InsPolicyitemCascade --'Conference Call','client','200164',32 
(    
 @POLICYDIMENTISON VARCHAR(100),    
 @ENTITY_TYPE VARCHAR(100),    
 @ENTITY_ID CHAR(15),    
 @USERID INT     
)    
AS    
BEGIN     
 DECLARE     
 @MAX_POLICY_LEVEL INT,    
 @POLICYDIMENSIONID INT,    
 @DATA_TYPE VARCHAR(20),    
 @C_VAL_DATE DATETIME,    
 @C_VAL_LIST INT,    
 @C_VAL_LOGICAL BIT,    
 @C_VAL_NUMERIC FLOAT,    
 @C_VAL_TEXT VARCHAR(100)  
 -- DECLARE TABLE FOR STORED PROGRAM IDS WHERE POLICY VALUE IS NOT OVERRIDDEN    
 DECLARE @TMP_C_PRG_EQUAL TABLE(PROGRAMID CHAR(15))    
  
 --TEMP TABLE FOR CLIENT PROGRAM    
 DECLARE @TMP_C_PRG TABLE(PROGRAMID CHAR(15))    
  
 --TEMP TABLE FOR PROGRAM ACCOUNTS    
 DECLARE @TMP_P_ACT TABLE(ACCOUNTID  CHAR(15))    
 DECLARE @POLICYITEM TABLE(  
  POLICYITEMID INT IDENTITY (1,1),   
  POLICYDIMENSIONID INT,   
  POLICYLEVEL INT,   
  OWNERID CHAR(15),   
  NUMERICVALUE FLOAT,   
  TEXTVALUE VARCHAR(100),   
  LOGICALVALUE BIT,   
  DATEVALUE DATETIME,   
  POLICYDROPDOWNID INT,   
  COMMENT VARCHAR(255),
  CREATEDDATE DATETIME,
  CREATEDUSERID INT )  
 DECLARE @CUR_POLICYITEM_ID INT  
  
 DECLARE @TMP_ACT_BILL_PROFILE TABLE(ID INT  IDENTITY (1,1), ACCOUNTID CHAR(15), BILLINGSTARTDATE DATETIME) --Temp Table for Account Billing Start date  
  
   
 SELECT @MAX_POLICY_LEVEL = MAXPOLICYLEVEL, @DATA_TYPE=DATATYPE ,@POLICYDIMENSIONID=POLICYDIMENSIONID     
 FROM TBL_POLICYDIMENSION WHERE FULLNAME =@POLICYDIMENTISON    
    
 --FETCH CURRENT CLIETN LEVEL VALUE     
 IF(@ENTITY_TYPE='MANAGER' AND @MAX_POLICY_LEVEL>100)    
 BEGIN    
  --FIRST SELECT ALL THE CURRENT VALUE STORED IN POLICYITEM FOR THIS CLIENT FOR THIS POLICYDIMENSION   
  SELECT     
   @C_VAL_DATE=DATEVALUE,    
   @C_VAL_LIST= POLICYDROPDOWNID,    
   @C_VAL_LOGICAL =LOGICALVALUE,    
   @C_VAL_NUMERIC =NUMERICVALUE,    
   @C_VAL_TEXT=TEXTVALUE     
  FROM TBL_POLICYITEM   
  WHERE OWNERID=@ENTITY_ID   
  AND POLICYDIMENSIONID=@POLICYDIMENSIONID AND POLICYLEVEL=100     
  --collect all programs associated to this Client and policyitem record does not exists  
  INSERT INTO @TMP_C_PRG  
  SELECT AlnsNmbr.AllianceNumber FROM 
						SYN_IT_AllianceNumbers AlnsNmbr
						INNER JOIN SYN_IT_ContactMaster ConMstr ON AlnsNmbr.CONTACTID=ConMstr.CONTACTID
						WHERE MANAGERCODE=@ENTITY_ID 
		AND  AlnsNmbr.AllianceNumber NOT IN(SELECT OWNERID FROM TBL_PolicyItem WHERE POLICYLEVEL=200 AND POLICYDIMENSIONID=@POLICYDIMENSIONID)      
    
  IF NOT EXISTS(SELECT PROGRAMID FROM @TMP_C_PRG)    
  BEGIN    
   --SINCE NO PROGRAM FOUND UNDER THIS CLIENT, RETURN.    
   RETURN(1)    
  END    
  --FIRST UPDATE ALL THE ASSOCIATED PROGRAM WITH THIS CLIENT    
  IF(@DATA_TYPE='DATE')    
  BEGIN    
   INSERT INTO @POLICYITEM (  
    POLICYDIMENSIONID,   
    POLICYLEVEL,   
    OWNERID,   
    NUMERICVALUE,   
    TEXTVALUE,   
    LOGICALVALUE,   
    DATEVALUE,   
    POLICYDROPDOWNID,   
    COMMENT,
    CREATEDDATE,
    CREATEDUSERID )  
   SELECT   
    @POLICYDIMENSIONID,   
    200,   
    PROGRAMID,   
    0,   
    NULL,   
    0,   
    @C_VAL_DATE,   
    0,   
    NULL,
    GETDATE(),
    @USERID 
   FROM @TMP_C_PRG  
  END    
  ELSE IF(@DATA_TYPE='LIST')    
  BEGIN    
   INSERT INTO @POLICYITEM  (  
    POLICYDIMENSIONID,   
    POLICYLEVEL,   
    OWNERID,   
    NUMERICVALUE,   
    TEXTVALUE,   
    LOGICALVALUE,   
    DATEVALUE,   
    POLICYDROPDOWNID,   
    COMMENT,
    CREATEDDATE,
    CREATEDUSERID  )  
   SELECT   
    @POLICYDIMENSIONID,   
    200,   
    PROGRAMID,   
    0,   
    NULL,   
    0,   
    NULL,   
    @C_VAL_LIST,   
    NULL,
    GETDATE(),
    @USERID   
   FROM @TMP_C_PRG  
  END    
  ELSE IF(@DATA_TYPE='LOGICAL')    
  BEGIN    
   INSERT INTO @POLICYITEM (  
    POLICYDIMENSIONID,   
    POLICYLEVEL,   
    OWNERID,   
    NUMERICVALUE,   
    TEXTVALUE,   
    LOGICALVALUE,   
    DATEVALUE,   
    POLICYDROPDOWNID,   
    COMMENT,
    CREATEDDATE,
    CREATEDUSERID )  
   SELECT   
    @POLICYDIMENSIONID,   
    200,   
    PROGRAMID,   
    0,   
    NULL,   
    @C_VAL_LOGICAL,   
    NULL,   
    0,   
    NULL,
    GETDATE(),
    @USERID   
   FROM @TMP_C_PRG    
  END    
  ELSE IF(@DATA_TYPE='NUMERIC')    
  BEGIN    
   INSERT INTO @POLICYITEM (  
    POLICYDIMENSIONID,   
    POLICYLEVEL,   
    OWNERID,   
    NUMERICVALUE,   
    TEXTVALUE,   
    LOGICALVALUE,   
    DATEVALUE,   
    POLICYDROPDOWNID,   
    COMMENT,
    CREATEDDATE,
    CREATEDUSERID)  
   SELECT   
    @POLICYDIMENSIONID,   
    200,   
    PROGRAMID,   
    @C_VAL_NUMERIC,   
    NULL,   
    0,   
    NULL,   
    0,   
    NULL,
    GETDATE(),
    @USERID   
   FROM @TMP_C_PRG  
       
  END    
  ELSE IF(@DATA_TYPE='TEXT')    
  BEGIN    
   INSERT INTO @POLICYITEM (  
    POLICYDIMENSIONID,   
    POLICYLEVEL,   
    OWNERID,   
    NUMERICVALUE,   
    TEXTVALUE,   
    LOGICALVALUE,   
    DATEVALUE,   
    POLICYDROPDOWNID,   
    COMMENT,
    CREATEDDATE,
    CREATEDUSERID)  
   SELECT   
    @POLICYDIMENSIONID,   
    200,   
    PROGRAMID,   
    0,   
    @C_VAL_TEXT,   
    0,   
    NULL,   
    0,   
    NULL,
    GETDATE(),
    @USERID   
   FROM @TMP_C_PRG  
  END    
  --INSERT ALL THE ACCOUNT ASSOCIATED TO THIS CLIENT    
  INSERT INTO @TMP_P_ACT SELECT ACCOUNTID FROM VW_EX_Account WHERE AllianceNumber IN (SELECT PROGRAMID FROM @TMP_C_PRG)    
  AND ACCOUNTID NOT IN(SELECT OWNERID FROM TBL_POLICYITEM WHERE POLICYLEVEL=300 AND POLICYDIMENSIONID=@POLICYDIMENSIONID)   
  
  IF EXISTS(SELECT ACCOUNTID FROM @TMP_P_ACT)    
  BEGIN    
   IF(@DATA_TYPE='DATE')    
   BEGIN    
    INSERT INTO @POLICYITEM  
    (  
     --POLICYITEMID,   
     POLICYDIMENSIONID,   
     POLICYLEVEL,   
     OWNERID,   
     NUMERICVALUE,   
     TEXTVALUE,   
     LOGICALVALUE,   
     DATEVALUE,   
     POLICYDROPDOWNID,   
     COMMENT,
     CREATEDDATE,
     CREATEDUSERID  
    )  
    SELECT   
     @POLICYDIMENSIONID,   
     300,   
     ACCOUNTID,   
     0,   
     NULL,   
     0,   
     @C_VAL_DATE,   
     0,   
     NULL,
     GETDATE(),
     @USERID   
    FROM @TMP_P_ACT  
    --ET 6274 Updating Billing Information of TA  
    -- if the Policydimention is 225 (Services start date)  
    -- Added by Saravanan on 18 Mar 2008  
    IF(@POLICYDIMENSIONID = 225)  
    BEGIN  
     INSERT INTO @TMP_ACT_BILL_PROFILE(ACCOUNTID, BILLINGSTARTDATE)  
     SELECT ACCOUNTID , @C_VAL_DATE FROM @TMP_P_ACT  
    END  
    --End   
   END    
   ELSE IF(@DATA_TYPE='LIST')    
   BEGIN    
    INSERT INTO @POLICYITEM  
    (  
     --POLICYITEMID,   
     POLICYDIMENSIONID,   
     POLICYLEVEL,   
     OWNERID,   
     NUMERICVALUE,   
     TEXTVALUE,   
     LOGICALVALUE,   
     DATEVALUE,   
     POLICYDROPDOWNID,   
     COMMENT,
     CREATEDDATE,
     CREATEDUSERID  
    )  
    SELECT   
     @POLICYDIMENSIONID,   
     300,   
     ACCOUNTID,   
     0,   
     NULL,   
     0,   
     NULL,   
     @C_VAL_LIST,   
     NULL,
     GETDATE(),
     @USERID   
    FROM @TMP_P_ACT  
   END    
   ELSE IF(@DATA_TYPE='LOGICAL')    
   BEGIN    
    INSERT INTO @POLICYITEM  
    (  
     --POLICYITEMID,   
     POLICYDIMENSIONID,   
     POLICYLEVEL,   
     OWNERID,   
     NUMERICVALUE,   
     TEXTVALUE,   
     LOGICALVALUE,   
     DATEVALUE,   
     POLICYDROPDOWNID,   
     COMMENT,
     CREATEDDATE,
     CREATEDUSERID  
    )  
    SELECT   
     @POLICYDIMENSIONID,   
     300,   
     ACCOUNTID,   
     0,   
     NULL,   
     @C_VAL_LOGICAL,   
     NULL,   
     0,   
     NULL,
     GETDATE(),
     @USERID   
    FROM @TMP_P_ACT  
   END    
   ELSE IF(@DATA_TYPE='NUMERIC')    
   BEGIN    
    INSERT INTO @POLICYITEM  
    (  
     POLICYDIMENSIONID,   
     POLICYLEVEL,   
     OWNERID,   
     NUMERICVALUE,   
     TEXTVALUE,   
     LOGICALVALUE,   
     DATEVALUE,   
     POLICYDROPDOWNID,   
     COMMENT,
     CREATEDDATE,
     CREATEDUSERID  
    )  
    SELECT   
     @POLICYDIMENSIONID,   
     300,   
     ACCOUNTID,   
     @C_VAL_NUMERIC,   
     NULL,   
     0,   
     NULL,   
     0,   
     NULL,
     GETDATE(),
     @USERID   
    FROM @TMP_P_ACT  
   END    
   ELSE IF(@DATA_TYPE='TEXT')    
   BEGIN    
    INSERT INTO @POLICYITEM  
    (  
     POLICYDIMENSIONID,   
     POLICYLEVEL,   
     OWNERID,   
     NUMERICVALUE,   
     TEXTVALUE,   
     LOGICALVALUE,   
     DATEVALUE,   
     POLICYDROPDOWNID,   
     COMMENT,
     CREATEDDATE,
     CREATEDUSERID  
    )  
    SELECT   
     @POLICYDIMENSIONID,   
     300,   
     ACCOUNTID,   
     0,   
     @C_VAL_TEXT,   
     0,   
     NULL,   
     0,   
     NULL,
     GETDATE(),
    @USERID   
    FROM @TMP_P_ACT  
   END   
  END    
 END    
 ELSE IF (@ENTITY_TYPE='ALLIANCE' AND @MAX_POLICY_LEVEL>200)    
 BEGIN    
  SELECT     
   @C_VAL_DATE=DATEVALUE,    
   @C_VAL_LIST=POLICYDROPDOWNID,    
   @C_VAL_LOGICAL =LOGICALVALUE,    
   @C_VAL_NUMERIC =NUMERICVALUE,    
   @C_VAL_TEXT=TEXTVALUE     
  FROM TBL_PolicyItem WHERE OWNERID=@ENTITY_ID AND POLICYDIMENSIONID=@POLICYDIMENSIONID AND POLICYLEVEL=200    
  
  INSERT INTO @TMP_P_ACT SELECT ACCOUNTID FROM VW_EX_Account WHERE AllianceNumber=@ENTITY_ID    
  AND ACCOUNTID NOT IN(SELECT OWNERID FROM TBL_PolicyItem WHERE POLICYLEVEL=300 AND POLICYDIMENSIONID=@POLICYDIMENSIONID)   
  
  IF  EXISTS(SELECT ACCOUNTID FROM @TMP_P_ACT)    
  BEGIN    
     
    
  IF(@DATA_TYPE='DATE')    
  BEGIN    
   INSERT INTO @POLICYITEM  
   (  
    POLICYDIMENSIONID,   
    POLICYLEVEL,   
    OWNERID,   
    NUMERICVALUE,   
    TEXTVALUE,   
    LOGICALVALUE,   
    DATEVALUE,   
    POLICYDROPDOWNID,   
    COMMENT,
    CREATEDDATE,
    CREATEDUSERID  
   )  
   SELECT   
    @POLICYDIMENSIONID,   
    300,   
    ACCOUNTID,   
    0,   
    NULL,   
    0,   
    @C_VAL_DATE,   
    0,   
    NULL,
    GETDATE(),
    @USERID   
   FROM @TMP_P_ACT  
     
   --ET 6274 Updating Billing Information of TA  
   -- if the Policydimention is 225 (Services start date)  
   -- Added by Saravanan on 18 Mar 2008  
   IF(@POLICYDIMENSIONID = 225)  
   BEGIN  
    INSERT INTO @TMP_ACT_BILL_PROFILE(ACCOUNTID, BILLINGSTARTDATE)  
    SELECT ACCOUNTID , @C_VAL_DATE FROM @TMP_P_ACT  
   END  
   --End   
  
  END    
  ELSE IF(@DATA_TYPE='LIST')    
  BEGIN    
  INSERT INTO @POLICYITEM  
  (  
   POLICYDIMENSIONID,   
   POLICYLEVEL,   
   OWNERID,   
   NUMERICVALUE,   
   TEXTVALUE,   
   LOGICALVALUE,   
   DATEVALUE,   
   POLICYDROPDOWNID,   
   COMMENT,
   CREATEDDATE,
   CREATEDUSERID  
  )  
  SELECT   
   @POLICYDIMENSIONID,   
   300,   
   ACCOUNTID,   
   0,   
   NULL,   
   0,   
   NULL,   
   @C_VAL_LIST,   
   NULL,
   GETDATE(),
   @USERID   
  FROM @TMP_P_ACT  
  END    
  ELSE IF(@DATA_TYPE='LOGICAL')    
  BEGIN    
  INSERT INTO @POLICYITEM  
  (  
   POLICYDIMENSIONID,   
   POLICYLEVEL,   
   OWNERID,   
   NUMERICVALUE,   
   TEXTVALUE,   
   LOGICALVALUE,   
   DATEVALUE,   
   POLICYDROPDOWNID,   
   COMMENT,
   CREATEDDATE,
   CREATEDUSERID  
  )  
  SELECT   
   @POLICYDIMENSIONID,   
   300,   
   ACCOUNTID,   
   0,   
   NULL,   
   @C_VAL_LOGICAL,   
   NULL,   
   0,   
   NULL,
   GETDATE(),
   @USERID   
  FROM @TMP_P_ACT  
  END    
  ELSE IF(@DATA_TYPE='NUMERIC')    
  BEGIN    
  INSERT INTO @POLICYITEM  
  (  
   POLICYDIMENSIONID,   
   POLICYLEVEL,   
   OWNERID,   
   NUMERICVALUE,   
   TEXTVALUE,   
   LOGICALVALUE,   
   DATEVALUE,   
   POLICYDROPDOWNID,   
   COMMENT,
   CREATEDDATE,
   CREATEDUSERID  
  )  
  SELECT   
   @POLICYDIMENSIONID,   
   300,   
   ACCOUNTID,   
   @C_VAL_NUMERIC,   
   NULL,   
   0,   
   NULL,   
   0,   
   NULL,
   GETDATE(),
   @USERID   
  FROM @TMP_P_ACT  
  END    
  ELSE IF(@DATA_TYPE='TEXT')    
  BEGIN    
  INSERT INTO @POLICYITEM  
  (  
   POLICYDIMENSIONID,   
   POLICYLEVEL,   
   OWNERID,   
   NUMERICVALUE,   
   TEXTVALUE,   
   LOGICALVALUE,   
   DATEVALUE,   
   POLICYDROPDOWNID,   
   COMMENT,
   CREATEDDATE,
   CREATEDUSERID  
  )  
  SELECT   
   @POLICYDIMENSIONID,   
   300,   
   ACCOUNTID,   
   0,   
   @C_VAL_TEXT,   
   0,   
   NULL,   
   0,   
   NULL,
   GETDATE(),
   @USERID   
  FROM @TMP_P_ACT  
  END   
 END   
 END    
 --Insert into PolicyItem Table  
 DECLARE  @CNT INT  
 DECLARE  @MAX_CNT INT  
 DECLARE @CUR_POLICYDIMENSIONID INT,@CUR_POLICYLEVEL INT,@CUR_OWNERID CHAR(15)
  
 SET @CNT = 1  
 SELECT  @MAX_CNT  = COUNT(POLICYITEMID) FROM @POLICYITEM  
 WHILE (@CNT <=  @MAX_CNT)  
 BEGIN  
  SELECT   
   @CUR_POLICYDIMENSIONID=POLICYDIMENSIONID,  
   @CUR_POLICYLEVEL=POLICYLEVEL,  
   @CUR_OWNERID=OWNERID  
  FROM @POLICYITEM WHERE POLICYITEMID=@CNT  
  
  IF NOT EXISTS(SELECT POLICYITEMID   
      FROM TBL_PolicyItem   
      WHERE POLICYLEVEL=@CUR_POLICYLEVEL   
      AND POLICYDIMENSIONID=@CUR_POLICYDIMENSIONID  
      AND OWNERID=@CUR_OWNERID)  
  BEGIN  
  
   INSERT INTO TBL_PolicyItem (  
   PolicyDimensionID,  
   PolicyLevel,  
   OwnerID,  
   NumericValue,  
   TextValue,
   LogicalValue,  
   DateValue,  
   PolicyDropDownID,  
   Comment,
   CREATEDDATE,
   CREATEDUSERID,
   ModifiedDate,
   ModifiedUserId
   )  
   SELECT      
   PolicyDimensionID,  
   PolicyLevel,  
   OwnerID,  
   NumericValue,  
   TextValue,  
   LogicalValue,  
   DateValue,  
   PolicyDropDownID,  
   Comment,
   CREATEDDATE,
   CREATEDUSERID,
   GETDATE(),
   CREATEDUSERID  
   FROM @POLICYITEM WHERE POLICYITEMID=@CNT  
   SET @CUR_POLICYITEM_ID=IDENT_CURRENT('TBL_POLICYITEM')  
   
   END  
  SET @CNT  = @CNT +1  
 END  

 IF(@@ERROR !=0)  
 BEGIN  
  RAISERROR 100043 'USP_EX_InsPolicyitemCascade:Cannot update PolicyItem'  
 END  
END  



  GO
  IF EXISTS (	SELECT *
			FROM sysobjects
			WHERE type = 'P'
			AND name = 'USP_EX_InsPolicyitemCascade') 
	BEGIN
			PRINT 'CREATED PROCEDURE USP_EX_InsPolicyitemCascade';
	END  